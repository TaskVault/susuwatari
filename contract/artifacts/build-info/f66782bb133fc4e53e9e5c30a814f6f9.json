{"id":"f66782bb133fc4e53e9e5c30a814f6f9","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"contracts/ILeafWalletRegistryActivate.sol":{"content":"//SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.18;\r\n\r\nimport \"./ILeafWalletRegistryCore.sol\";\r\n\r\ninterface ILeafWalletRegistryActivate is ILeafWalletRegistryCore{\r\n    function assignActivatableAddressToSender(address assignee)  external;\r\n    function getActivationCodeOfSender() external view returns (uint256);\r\n}"},"contracts/ILeafWalletRegistryCore.sol":{"content":"//SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.18;\r\n\r\ninterface ILeafWalletRegistryCore {\r\n    function isSenderRegistered() external view returns (bool);\r\n    function getDeviceOwner() external view returns (address);\r\n    function getRelatedDevices() external view returns (address[] memory);\r\n}"},"contracts/LeafWalletRegistryActivate.sol":{"content":"//SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.18;\r\n\r\nimport \"./ILeafWalletRegistryActivate.sol\";\r\nimport \"./LeafWalletRegistryCore.sol\";\r\nimport {LeafWalletStorage,StorageHandler} from  \"./SusuwatariStorage.sol\";\r\n\r\ncontract LeafWalletRegistryActivate is ILeafWalletRegistryActivate, LeafWalletRegistryCore  {\r\n    event AssignActivatableAddressToSenderReturn(uint256);\r\n    \r\n\r\n    function assignActivatableAddressToSender(address assignee) public virtual override{\r\n        LeafWalletStorage storage lw = lw();\r\n        _assignAddressToSender(assignee);\r\n\r\n\r\n        uint256 activationCode = uint256(keccak256(abi.encodePacked(block.timestamp, block.prevrandao, msg.sender))) % 100;\r\n        if(activationCode<10){\r\n            activationCode = activationCode+10;\r\n        }\r\n        lw._deviceActivationCodes[assignee] = activationCode;\r\n\r\n\r\n        emit AssignActivatableAddressToSenderReturn(activationCode);\r\n    }\r\n\r\n    function getActivationCodeOfSender() public view override returns (uint256){\r\n        LeafWalletStorage storage lw = lw();\r\n        require(lw._deviceOwner[msg.sender] != address(0),\"Device not yet registered\");\r\n        return lw._deviceActivationCodes[msg.sender];\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n    "},"contracts/LeafWalletRegistryCore.sol":{"content":"//SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.18;\r\n\r\nimport \"./ILeafWalletRegistryCore.sol\";\r\nimport {LeafWalletStorage,StorageHandler} from  \"./SusuwatariStorage.sol\";\r\n\r\ncontract LeafWalletRegistryCore is ILeafWalletRegistryCore,StorageHandler {\r\n\r\n    \r\n\r\n    function _assignAddressToSender(address assignee) internal{\r\n        LeafWalletStorage storage lw = lw();\r\n        require(lw._deviceOwner[assignee] == address(0) || lw._deviceOwner[assignee] == msg.sender,\"Device already registered\");\r\n     \r\n        if(lw._deviceOwner[assignee] == address(0)){\r\n            lw._ownerDevices[msg.sender].push(assignee);\r\n            lw._deviceOwner[assignee] = msg.sender;\r\n        }\r\n    }\r\n\r\n\r\n    function isSenderRegistered() public view override returns (bool) {\r\n        LeafWalletStorage storage lw = lw();\r\n        return lw._deviceOwner[msg.sender] != address(0);\r\n    }\r\n\r\n    function getDeviceOwner() public view override returns (address) {\r\n        LeafWalletStorage storage lw = lw();\r\n        return lw._deviceOwner[msg.sender];\r\n    }\r\n\r\n    function getRelatedDevices() public view override returns (address[] memory) {\r\n        LeafWalletStorage storage lw = lw();\r\n        return lw._ownerDevices[msg.sender];\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n}\r\n\r\n\r\n\r\n    "},"contracts/SusuwatariLeafWalletFacet.sol":{"content":"//SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.18;\r\n\r\nimport \"@openzeppelin/contracts/utils/Context.sol\";\r\nimport \"./LeafWalletRegistryActivate.sol\";\r\nimport {LibDiamond} from \"hardhat-deploy/solc_0.8/diamond/libraries/LibDiamond.sol\";\r\nimport {SusuwatariStorage} from \"./SusuwatariStorage.sol\";\r\n\r\n\r\ncontract SusuwatariLeafWalletFacet is LeafWalletRegistryActivate, Context  {\r\n    \r\n    function assignActivatableAddressToSender(address assignee) public override{\r\n        super.assignActivatableAddressToSender(assignee);\r\n    }\r\n}\r\n\r\n\r\n\r\n    "},"contracts/SusuwatariStorage.sol":{"content":"//SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.18;\r\n\r\nimport {LibDiamond} from \"hardhat-deploy/solc_0.8/diamond/libraries/LibDiamond.sol\";\r\n\r\nbytes32 constant SUSUWATARI_STORAGE_POSITION = keccak256(\"susuwatari.contract.storage\");\r\nbytes32 constant LEAFWALLET_STORAGE_POSITION = keccak256(\"leafwallet.contract.storage\");\r\n\r\nstruct OwnableStorage {\r\n\r\n    address _owner;\r\n}\r\n\r\nstruct SusuwatariStorage {\r\n    \r\n\r\n  bool isInitialized;\r\n}\r\n\r\nstruct LeafWalletStorage {\r\n    mapping(address => address) _deviceOwner;\r\n    mapping(address => address[]) _ownerDevices;\r\n    mapping(address => uint256) _deviceActivationCodes;\r\n}\r\n\r\ncontract StorageHandler {\r\n    function susu() internal pure returns (SusuwatariStorage storage cs) {\r\n        bytes32 position = SUSUWATARI_STORAGE_POSITION;\r\n        assembly {\r\n           cs.slot := position\r\n        }\r\n    }\r\n\r\n    function os() internal pure returns (OwnableStorage storage cs) {\r\n        bytes32 position = keccak256(\"ownable.contract.storage\");\r\n        assembly {\r\n           cs.slot := position\r\n        }\r\n    }\r\n    \r\n    function ds() internal pure returns (LibDiamond.DiamondStorage storage) {\r\n        return LibDiamond.diamondStorage();\r\n    }\r\n\r\n    \r\n    function lw() internal pure returns (LeafWalletStorage storage cs) {\r\n        bytes32 position = keccak256(\"leafwallet.contract.storage\");\r\n        assembly {\r\n           cs.slot := position\r\n        }\r\n    }\r\n}"},"hardhat-deploy/solc_0.8/diamond/interfaces/IDiamondCut.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/******************************************************************************\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\n/******************************************************************************/\n\ninterface IDiamondCut {\n    enum FacetCutAction {Add, Replace, Remove}\n    // Add=0, Replace=1, Remove=2\n\n    struct FacetCut {\n        address facetAddress;\n        FacetCutAction action;\n        bytes4[] functionSelectors;\n    }\n\n    /// @notice Add/replace/remove any number of functions and optionally execute\n    ///         a function with delegatecall\n    /// @param _diamondCut Contains the facet addresses and function selectors\n    /// @param _init The address of the contract or facet to execute _calldata\n    /// @param _calldata A function call, including function selector and arguments\n    ///                  _calldata is executed with delegatecall on _init\n    function diamondCut(\n        FacetCut[] calldata _diamondCut,\n        address _init,\n        bytes calldata _calldata\n    ) external;\n\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\n}\n"},"hardhat-deploy/solc_0.8/diamond/libraries/LibDiamond.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/******************************************************************************\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\n/******************************************************************************/\nimport { IDiamondCut } from \"../interfaces/IDiamondCut.sol\";\n\nlibrary LibDiamond {\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\"diamond.standard.diamond.storage\");\n\n    struct FacetAddressAndPosition {\n        address facetAddress;\n        uint96 functionSelectorPosition; // position in facetFunctionSelectors.functionSelectors array\n    }\n\n    struct FacetFunctionSelectors {\n        bytes4[] functionSelectors;\n        uint256 facetAddressPosition; // position of facetAddress in facetAddresses array\n    }\n\n    struct DiamondStorage {\n        // maps function selector to the facet address and\n        // the position of the selector in the facetFunctionSelectors.selectors array\n        mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\n        // maps facet addresses to function selectors\n        mapping(address => FacetFunctionSelectors) facetFunctionSelectors;\n        // facet addresses\n        address[] facetAddresses;\n        // Used to query if a contract implements an interface.\n        // Used to implement ERC-165.\n        mapping(bytes4 => bool) supportedInterfaces;\n        // owner of the contract\n        address contractOwner;\n    }\n\n    function diamondStorage() internal pure returns (DiamondStorage storage ds) {\n        bytes32 position = DIAMOND_STORAGE_POSITION;\n        assembly {\n            ds.slot := position\n        }\n    }\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    function setContractOwner(address _newOwner) internal {\n        DiamondStorage storage ds = diamondStorage();\n        address previousOwner = ds.contractOwner;\n        ds.contractOwner = _newOwner;\n        emit OwnershipTransferred(previousOwner, _newOwner);\n    }\n\n    function contractOwner() internal view returns (address contractOwner_) {\n        contractOwner_ = diamondStorage().contractOwner;\n    }\n\n    function enforceIsContractOwner() internal view {\n        require(msg.sender == diamondStorage().contractOwner, \"LibDiamond: Must be contract owner\");\n    }\n\n    event DiamondCut(IDiamondCut.FacetCut[] _diamondCut, address _init, bytes _calldata);\n\n    // Internal function version of diamondCut\n    function diamondCut(\n        IDiamondCut.FacetCut[] memory _diamondCut,\n        address _init,\n        bytes memory _calldata\n    ) internal {\n        for (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\n            IDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\n            if (action == IDiamondCut.FacetCutAction.Add) {\n                addFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\n            } else if (action == IDiamondCut.FacetCutAction.Replace) {\n                replaceFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\n            } else if (action == IDiamondCut.FacetCutAction.Remove) {\n                removeFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\n            } else {\n                revert(\"LibDiamondCut: Incorrect FacetCutAction\");\n            }\n        }\n        emit DiamondCut(_diamondCut, _init, _calldata);\n        initializeDiamondCut(_init, _calldata);\n    }\n\n    function addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\n        require(_functionSelectors.length > 0, \"LibDiamondCut: No selectors in facet to cut\");\n        DiamondStorage storage ds = diamondStorage();        \n        require(_facetAddress != address(0), \"LibDiamondCut: Add facet can't be address(0)\");\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\n        // add new facet address if it does not exist\n        if (selectorPosition == 0) {\n            addFacet(ds, _facetAddress);            \n        }\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\n            bytes4 selector = _functionSelectors[selectorIndex];\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\n            require(oldFacetAddress == address(0), \"LibDiamondCut: Can't add function that already exists\");\n            addFunction(ds, selector, selectorPosition, _facetAddress);\n            selectorPosition++;\n        }\n    }\n\n    function replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\n        require(_functionSelectors.length > 0, \"LibDiamondCut: No selectors in facet to cut\");\n        DiamondStorage storage ds = diamondStorage();\n        require(_facetAddress != address(0), \"LibDiamondCut: Add facet can't be address(0)\");\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\n        // add new facet address if it does not exist\n        if (selectorPosition == 0) {\n            addFacet(ds, _facetAddress);\n        }\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\n            bytes4 selector = _functionSelectors[selectorIndex];\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\n            require(oldFacetAddress != _facetAddress, \"LibDiamondCut: Can't replace function with same function\");\n            removeFunction(ds, oldFacetAddress, selector);\n            addFunction(ds, selector, selectorPosition, _facetAddress);\n            selectorPosition++;\n        }\n    }\n\n    function removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\n        require(_functionSelectors.length > 0, \"LibDiamondCut: No selectors in facet to cut\");\n        DiamondStorage storage ds = diamondStorage();\n        // if function does not exist then do nothing and return\n        require(_facetAddress == address(0), \"LibDiamondCut: Remove facet address must be address(0)\");\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\n            bytes4 selector = _functionSelectors[selectorIndex];\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\n            removeFunction(ds, oldFacetAddress, selector);\n        }\n    }\n\n    function addFacet(DiamondStorage storage ds, address _facetAddress) internal {\n        enforceHasContractCode(_facetAddress, \"LibDiamondCut: New facet has no code\");\n        ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = ds.facetAddresses.length;\n        ds.facetAddresses.push(_facetAddress);\n    }    \n\n\n    function addFunction(DiamondStorage storage ds, bytes4 _selector, uint96 _selectorPosition, address _facetAddress) internal {\n        ds.selectorToFacetAndPosition[_selector].functionSelectorPosition = _selectorPosition;\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(_selector);\n        ds.selectorToFacetAndPosition[_selector].facetAddress = _facetAddress;\n    }\n\n    function removeFunction(DiamondStorage storage ds, address _facetAddress, bytes4 _selector) internal {        \n        require(_facetAddress != address(0), \"LibDiamondCut: Can't remove function that doesn't exist\");\n        // an immutable function is a function defined directly in a diamond\n        require(_facetAddress != address(this), \"LibDiamondCut: Can't remove immutable function\");\n        // replace selector with last selector, then delete last selector\n        uint256 selectorPosition = ds.selectorToFacetAndPosition[_selector].functionSelectorPosition;\n        uint256 lastSelectorPosition = ds.facetFunctionSelectors[_facetAddress].functionSelectors.length - 1;\n        // if not the same then replace _selector with lastSelector\n        if (selectorPosition != lastSelectorPosition) {\n            bytes4 lastSelector = ds.facetFunctionSelectors[_facetAddress].functionSelectors[lastSelectorPosition];\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors[selectorPosition] = lastSelector;\n            ds.selectorToFacetAndPosition[lastSelector].functionSelectorPosition = uint96(selectorPosition);\n        }\n        // delete the last selector\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.pop();\n        delete ds.selectorToFacetAndPosition[_selector];\n\n        // if no more selectors for facet address then delete the facet address\n        if (lastSelectorPosition == 0) {\n            // replace facet address with last facet address and delete last facet address\n            uint256 lastFacetAddressPosition = ds.facetAddresses.length - 1;\n            uint256 facetAddressPosition = ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\n            if (facetAddressPosition != lastFacetAddressPosition) {\n                address lastFacetAddress = ds.facetAddresses[lastFacetAddressPosition];\n                ds.facetAddresses[facetAddressPosition] = lastFacetAddress;\n                ds.facetFunctionSelectors[lastFacetAddress].facetAddressPosition = facetAddressPosition;\n            }\n            ds.facetAddresses.pop();\n            delete ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\n        }\n    }\n\n    function initializeDiamondCut(address _init, bytes memory _calldata) internal {\n        if (_init == address(0)) {\n            require(_calldata.length == 0, \"LibDiamondCut: _init is address(0) but_calldata is not empty\");\n        } else {\n            require(_calldata.length > 0, \"LibDiamondCut: _calldata is empty but _init is not address(0)\");\n            if (_init != address(this)) {\n                enforceHasContractCode(_init, \"LibDiamondCut: _init address has no code\");\n            }\n            (bool success, bytes memory error) = _init.delegatecall(_calldata);\n            if (!success) {\n                if (error.length > 0) {\n                    // bubble up the error\n                    revert(string(error));\n                } else {\n                    revert(\"LibDiamondCut: _init function reverted\");\n                }\n            }\n        }\n    }\n\n    function enforceHasContractCode(address _contract, string memory _errorMessage) internal view {\n        uint256 contractSize;\n        assembly {\n            contractSize := extcodesize(_contract)\n        }\n        require(contractSize > 0, _errorMessage);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[29]},"id":30,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:0"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"126:496:0","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":29,"linearizedBaseContracts":[29],"name":"Context","nameLocation":"641:7:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":10,"nodeType":"Block","src":"717:34:0","statements":[{"expression":{"expression":{"id":7,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"738:6:0","memberName":"sender","nodeType":"MemberAccess","src":"734:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6,"id":9,"nodeType":"Return","src":"727:17:0"}]},"id":11,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"664:10:0","nodeType":"FunctionDefinition","parameters":{"id":3,"nodeType":"ParameterList","parameters":[],"src":"674:2:0"},"returnParameters":{"id":6,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11,"src":"708:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:0"},"scope":29,"src":"655:96:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":19,"nodeType":"Block","src":"824:32:0","statements":[{"expression":{"expression":{"id":16,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":17,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"845:4:0","memberName":"data","nodeType":"MemberAccess","src":"841:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":15,"id":18,"nodeType":"Return","src":"834:15:0"}]},"id":20,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"766:8:0","nodeType":"FunctionDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"774:2:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":20,"src":"808:14:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:0"},"scope":29,"src":"757:99:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":27,"nodeType":"Block","src":"934:25:0","statements":[{"expression":{"hexValue":"30","id":25,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":24,"id":26,"nodeType":"Return","src":"944:8:0"}]},"id":28,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"871:20:0","nodeType":"FunctionDefinition","parameters":{"id":21,"nodeType":"ParameterList","parameters":[],"src":"891:2:0"},"returnParameters":{"id":24,"nodeType":"ParameterList","parameters":[{"constant":false,"id":23,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":28,"src":"925:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":22,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:0"},"scope":29,"src":"862:97:0","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":30,"src":"623:338:0","usedErrors":[]}],"src":"101:861:0"},"id":0},"contracts/ILeafWalletRegistryActivate.sol":{"ast":{"absolutePath":"contracts/ILeafWalletRegistryActivate.sol","exportedSymbols":{"ILeafWalletRegistryActivate":[45],"ILeafWalletRegistryCore":[64]},"id":46,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":31,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"34:24:1"},{"absolutePath":"contracts/ILeafWalletRegistryCore.sol","file":"./ILeafWalletRegistryCore.sol","id":32,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":46,"sourceUnit":65,"src":"62:39:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":33,"name":"ILeafWalletRegistryCore","nameLocations":["146:23:1"],"nodeType":"IdentifierPath","referencedDeclaration":64,"src":"146:23:1"},"id":34,"nodeType":"InheritanceSpecifier","src":"146:23:1"}],"canonicalName":"ILeafWalletRegistryActivate","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":45,"linearizedBaseContracts":[45,64],"name":"ILeafWalletRegistryActivate","nameLocation":"115:27:1","nodeType":"ContractDefinition","nodes":[{"functionSelector":"ec949297","id":39,"implemented":false,"kind":"function","modifiers":[],"name":"assignActivatableAddressToSender","nameLocation":"185:32:1","nodeType":"FunctionDefinition","parameters":{"id":37,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36,"mutability":"mutable","name":"assignee","nameLocation":"226:8:1","nodeType":"VariableDeclaration","scope":39,"src":"218:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35,"name":"address","nodeType":"ElementaryTypeName","src":"218:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"217:18:1"},"returnParameters":{"id":38,"nodeType":"ParameterList","parameters":[],"src":"245:0:1"},"scope":45,"src":"176:70:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"58944eb8","id":44,"implemented":false,"kind":"function","modifiers":[],"name":"getActivationCodeOfSender","nameLocation":"261:25:1","nodeType":"FunctionDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[],"src":"286:2:1"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":44,"src":"312:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41,"name":"uint256","nodeType":"ElementaryTypeName","src":"312:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"311:9:1"},"scope":45,"src":"252:69:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":46,"src":"105:219:1","usedErrors":[]}],"src":"34:290:1"},"id":1},"contracts/ILeafWalletRegistryCore.sol":{"ast":{"absolutePath":"contracts/ILeafWalletRegistryCore.sol","exportedSymbols":{"ILeafWalletRegistryCore":[64]},"id":65,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":47,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"34:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"ILeafWalletRegistryCore","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":64,"linearizedBaseContracts":[64],"name":"ILeafWalletRegistryCore","nameLocation":"72:23:2","nodeType":"ContractDefinition","nodes":[{"functionSelector":"3aafa388","id":52,"implemented":false,"kind":"function","modifiers":[],"name":"isSenderRegistered","nameLocation":"112:18:2","nodeType":"FunctionDefinition","parameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"130:2:2"},"returnParameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":52,"src":"156:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":49,"name":"bool","nodeType":"ElementaryTypeName","src":"156:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"155:6:2"},"scope":64,"src":"103:59:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9b8ae375","id":57,"implemented":false,"kind":"function","modifiers":[],"name":"getDeviceOwner","nameLocation":"177:14:2","nodeType":"FunctionDefinition","parameters":{"id":53,"nodeType":"ParameterList","parameters":[],"src":"191:2:2"},"returnParameters":{"id":56,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":57,"src":"217:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":54,"name":"address","nodeType":"ElementaryTypeName","src":"217:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"216:9:2"},"scope":64,"src":"168:58:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e0f64efc","id":63,"implemented":false,"kind":"function","modifiers":[],"name":"getRelatedDevices","nameLocation":"241:17:2","nodeType":"FunctionDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[],"src":"258:2:2"},"returnParameters":{"id":62,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":63,"src":"284:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":59,"name":"address","nodeType":"ElementaryTypeName","src":"284:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":60,"nodeType":"ArrayTypeName","src":"284:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"283:18:2"},"scope":64,"src":"232:70:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":65,"src":"62:243:2","usedErrors":[]}],"src":"34:271:2"},"id":2},"contracts/LeafWalletRegistryActivate.sol":{"ast":{"absolutePath":"contracts/LeafWalletRegistryActivate.sol","exportedSymbols":{"ILeafWalletRegistryActivate":[45],"ILeafWalletRegistryCore":[64],"LeafWalletRegistryActivate":[172],"LeafWalletRegistryCore":[309],"LeafWalletStorage":[369],"StorageHandler":[421]},"id":173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":66,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"34:24:3"},{"absolutePath":"contracts/ILeafWalletRegistryActivate.sol","file":"./ILeafWalletRegistryActivate.sol","id":67,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":173,"sourceUnit":46,"src":"62:43:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/LeafWalletRegistryCore.sol","file":"./LeafWalletRegistryCore.sol","id":68,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":173,"sourceUnit":310,"src":"107:38:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/SusuwatariStorage.sol","file":"./SusuwatariStorage.sol","id":71,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":173,"sourceUnit":422,"src":"147:74:3","symbolAliases":[{"foreign":{"id":69,"name":"LeafWalletStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"155:17:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":70,"name":"StorageHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"173:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":72,"name":"ILeafWalletRegistryActivate","nameLocations":["264:27:3"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"264:27:3"},"id":73,"nodeType":"InheritanceSpecifier","src":"264:27:3"},{"baseName":{"id":74,"name":"LeafWalletRegistryCore","nameLocations":["293:22:3"],"nodeType":"IdentifierPath","referencedDeclaration":309,"src":"293:22:3"},"id":75,"nodeType":"InheritanceSpecifier","src":"293:22:3"}],"canonicalName":"LeafWalletRegistryActivate","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":172,"linearizedBaseContracts":[172,309,421,45,64],"name":"LeafWalletRegistryActivate","nameLocation":"234:26:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"4194273a0171865880e1d7a0089dcb6cfe51ce239b09acde0bf6cc5e071210b0","id":79,"name":"AssignActivatableAddressToSenderReturn","nameLocation":"330:38:3","nodeType":"EventDefinition","parameters":{"id":78,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":79,"src":"369:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":76,"name":"uint256","nodeType":"ElementaryTypeName","src":"369:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"368:9:3"},"src":"324:54:3"},{"baseFunctions":[39],"body":{"id":137,"nodeType":"Block","src":"475:455:3","statements":[{"assignments":[87],"declarations":[{"constant":false,"id":87,"mutability":"mutable","name":"lw","nameLocation":"512:2:3","nodeType":"VariableDeclaration","scope":137,"src":"486:28:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage"},"typeName":{"id":86,"nodeType":"UserDefinedTypeName","pathNode":{"id":85,"name":"LeafWalletStorage","nameLocations":["486:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":369,"src":"486:17:3"},"referencedDeclaration":369,"src":"486:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage"}},"visibility":"internal"}],"id":90,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":88,"name":"lw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"517:2:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_LeafWalletStorage_$369_storage_ptr_$","typeString":"function () pure returns (struct LeafWalletStorage storage pointer)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"517:4:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"486:35:3"},{"expression":{"arguments":[{"id":92,"name":"assignee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"555:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":91,"name":"_assignAddressToSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"532:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":93,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"532:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":94,"nodeType":"ExpressionStatement","src":"532:32:3"},{"assignments":[96],"declarations":[{"constant":false,"id":96,"mutability":"mutable","name":"activationCode","nameLocation":"587:14:3","nodeType":"VariableDeclaration","scope":137,"src":"579:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":95,"name":"uint256","nodeType":"ElementaryTypeName","src":"579:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":113,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":102,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"639:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"645:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"639:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":104,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"656:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"662:10:3","memberName":"prevrandao","nodeType":"MemberAccess","src":"656:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":106,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"674:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"678:6:3","memberName":"sender","nodeType":"MemberAccess","src":"674:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":100,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"622:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"626:12:3","memberName":"encodePacked","nodeType":"MemberAccess","src":"622:16:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"622:63:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":99,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"612:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"612:74:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":98,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"604:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":97,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:3","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"604:83:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"313030","id":111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"690:3:3","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"604:89:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"579:114:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":114,"name":"activationCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"707:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3130","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"722:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"707:17:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":124,"nodeType":"IfStatement","src":"704:82:3","trueBody":{"id":123,"nodeType":"Block","src":"725:61:3","statements":[{"expression":{"id":121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":117,"name":"activationCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"740:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":118,"name":"activationCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"757:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3130","id":119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"772:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"757:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"740:34:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":122,"nodeType":"ExpressionStatement","src":"740:34:3"}]}},{"expression":{"id":131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":125,"name":"lw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"796:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage storage pointer"}},"id":128,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"799:22:3","memberName":"_deviceActivationCodes","nodeType":"MemberAccess","referencedDeclaration":368,"src":"796:25:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":129,"indexExpression":{"id":127,"name":"assignee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"822:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"796:35:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":130,"name":"activationCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"834:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"796:52:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":132,"nodeType":"ExpressionStatement","src":"796:52:3"},{"eventCall":{"arguments":[{"id":134,"name":"activationCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"907:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":133,"name":"AssignActivatableAddressToSenderReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"868:38:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"868:54:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":136,"nodeType":"EmitStatement","src":"863:59:3"}]},"functionSelector":"ec949297","id":138,"implemented":true,"kind":"function","modifiers":[],"name":"assignActivatableAddressToSender","nameLocation":"401:32:3","nodeType":"FunctionDefinition","overrides":{"id":83,"nodeType":"OverrideSpecifier","overrides":[],"src":"467:8:3"},"parameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"assignee","nameLocation":"442:8:3","nodeType":"VariableDeclaration","scope":138,"src":"434:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":80,"name":"address","nodeType":"ElementaryTypeName","src":"434:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"433:18:3"},"returnParameters":{"id":84,"nodeType":"ParameterList","parameters":[],"src":"475:0:3"},"scope":172,"src":"392:538:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[44],"body":{"id":170,"nodeType":"Block","src":"1013:198:3","statements":[{"assignments":[146],"declarations":[{"constant":false,"id":146,"mutability":"mutable","name":"lw","nameLocation":"1050:2:3","nodeType":"VariableDeclaration","scope":170,"src":"1024:28:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage"},"typeName":{"id":145,"nodeType":"UserDefinedTypeName","pathNode":{"id":144,"name":"LeafWalletStorage","nameLocations":["1024:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":369,"src":"1024:17:3"},"referencedDeclaration":369,"src":"1024:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage"}},"visibility":"internal"}],"id":149,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":147,"name":"lw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"1055:2:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_LeafWalletStorage_$369_storage_ptr_$","typeString":"function () pure returns (struct LeafWalletStorage storage pointer)"}},"id":148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1055:4:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"1024:35:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":151,"name":"lw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1078:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage storage pointer"}},"id":152,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1081:12:3","memberName":"_deviceOwner","nodeType":"MemberAccess","referencedDeclaration":359,"src":"1078:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":155,"indexExpression":{"expression":{"id":153,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1094:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1098:6:3","memberName":"sender","nodeType":"MemberAccess","src":"1094:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1078:27:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1117:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1109:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":156,"name":"address","nodeType":"ElementaryTypeName","src":"1109:7:3","typeDescriptions":{}}},"id":159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1109:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1078:41:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"446576696365206e6f74207965742072656769737465726564","id":161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1120:27:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_9898a18bfac4fb07bc794666327c612959e5c409b4b45d5ad738f31955a2bd44","typeString":"literal_string \"Device not yet registered\""},"value":"Device not yet registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9898a18bfac4fb07bc794666327c612959e5c409b4b45d5ad738f31955a2bd44","typeString":"literal_string \"Device not yet registered\""}],"id":150,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1070:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1070:78:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":163,"nodeType":"ExpressionStatement","src":"1070:78:3"},{"expression":{"baseExpression":{"expression":{"id":164,"name":"lw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1166:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage storage pointer"}},"id":165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1169:22:3","memberName":"_deviceActivationCodes","nodeType":"MemberAccess","referencedDeclaration":368,"src":"1166:25:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":168,"indexExpression":{"expression":{"id":166,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1192:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1196:6:3","memberName":"sender","nodeType":"MemberAccess","src":"1192:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1166:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":143,"id":169,"nodeType":"Return","src":"1159:44:3"}]},"functionSelector":"58944eb8","id":171,"implemented":true,"kind":"function","modifiers":[],"name":"getActivationCodeOfSender","nameLocation":"947:25:3","nodeType":"FunctionDefinition","overrides":{"id":140,"nodeType":"OverrideSpecifier","overrides":[],"src":"987:8:3"},"parameters":{"id":139,"nodeType":"ParameterList","parameters":[],"src":"972:2:3"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":171,"src":"1005:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":141,"name":"uint256","nodeType":"ElementaryTypeName","src":"1005:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1004:9:3"},"scope":172,"src":"938:273:3","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":173,"src":"225:993:3","usedErrors":[]}],"src":"34:1196:3"},"id":3},"contracts/LeafWalletRegistryCore.sol":{"ast":{"absolutePath":"contracts/LeafWalletRegistryCore.sol","exportedSymbols":{"ILeafWalletRegistryCore":[64],"LeafWalletRegistryCore":[309],"LeafWalletStorage":[369],"StorageHandler":[421]},"id":310,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":174,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"34:24:4"},{"absolutePath":"contracts/ILeafWalletRegistryCore.sol","file":"./ILeafWalletRegistryCore.sol","id":175,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":310,"sourceUnit":65,"src":"62:39:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/SusuwatariStorage.sol","file":"./SusuwatariStorage.sol","id":178,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":310,"sourceUnit":422,"src":"103:74:4","symbolAliases":[{"foreign":{"id":176,"name":"LeafWalletStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"111:17:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":177,"name":"StorageHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"129:14:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":179,"name":"ILeafWalletRegistryCore","nameLocations":["216:23:4"],"nodeType":"IdentifierPath","referencedDeclaration":64,"src":"216:23:4"},"id":180,"nodeType":"InheritanceSpecifier","src":"216:23:4"},{"baseName":{"id":181,"name":"StorageHandler","nameLocations":["240:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":421,"src":"240:14:4"},"id":182,"nodeType":"InheritanceSpecifier","src":"240:14:4"}],"canonicalName":"LeafWalletRegistryCore","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":309,"linearizedBaseContracts":[309,421,64],"name":"LeafWalletRegistryCore","nameLocation":"190:22:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":244,"nodeType":"Block","src":"330:367:4","statements":[{"assignments":[189],"declarations":[{"constant":false,"id":189,"mutability":"mutable","name":"lw","nameLocation":"367:2:4","nodeType":"VariableDeclaration","scope":244,"src":"341:28:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage"},"typeName":{"id":188,"nodeType":"UserDefinedTypeName","pathNode":{"id":187,"name":"LeafWalletStorage","nameLocations":["341:17:4"],"nodeType":"IdentifierPath","referencedDeclaration":369,"src":"341:17:4"},"referencedDeclaration":369,"src":"341:17:4","typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage"}},"visibility":"internal"}],"id":192,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":190,"name":"lw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"372:2:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_LeafWalletStorage_$369_storage_ptr_$","typeString":"function () pure returns (struct LeafWalletStorage storage pointer)"}},"id":191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"372:4:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"341:35:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":194,"name":"lw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"395:2:4","typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage storage pointer"}},"id":195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"398:12:4","memberName":"_deviceOwner","nodeType":"MemberAccess","referencedDeclaration":359,"src":"395:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":197,"indexExpression":{"id":196,"name":"assignee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"411:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"395:25:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"432:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"424:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":198,"name":"address","nodeType":"ElementaryTypeName","src":"424:7:4","typeDescriptions":{}}},"id":201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"424:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"395:39:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":203,"name":"lw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"438:2:4","typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage storage pointer"}},"id":204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"441:12:4","memberName":"_deviceOwner","nodeType":"MemberAccess","referencedDeclaration":359,"src":"438:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":206,"indexExpression":{"id":205,"name":"assignee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"454:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"438:25:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":207,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"467:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"471:6:4","memberName":"sender","nodeType":"MemberAccess","src":"467:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"438:39:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"395:82:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"44657669636520616c72656164792072656769737465726564","id":211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"478:27:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb4001482305a88cc3313aebfc58d5cbc2cfd0fa781b8f11bcb791672d54dd1d","typeString":"literal_string \"Device already registered\""},"value":"Device already registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb4001482305a88cc3313aebfc58d5cbc2cfd0fa781b8f11bcb791672d54dd1d","typeString":"literal_string \"Device already registered\""}],"id":193,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"387:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"387:119:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":213,"nodeType":"ExpressionStatement","src":"387:119:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":214,"name":"lw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"527:2:4","typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage storage pointer"}},"id":215,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"530:12:4","memberName":"_deviceOwner","nodeType":"MemberAccess","referencedDeclaration":359,"src":"527:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":217,"indexExpression":{"id":216,"name":"assignee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"543:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"527:25:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"564:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"556:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"556:7:4","typeDescriptions":{}}},"id":221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"556:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"527:39:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":243,"nodeType":"IfStatement","src":"524:166:4","trueBody":{"id":242,"nodeType":"Block","src":"567:123:4","statements":[{"expression":{"arguments":[{"id":230,"name":"assignee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"616:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"expression":{"id":223,"name":"lw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"582:2:4","typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage storage pointer"}},"id":227,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"585:13:4","memberName":"_ownerDevices","nodeType":"MemberAccess","referencedDeclaration":364,"src":"582:16:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":228,"indexExpression":{"expression":{"id":225,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"599:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"603:6:4","memberName":"sender","nodeType":"MemberAccess","src":"599:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"582:28:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"611:4:4","memberName":"push","nodeType":"MemberAccess","src":"582:33:4","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"582:43:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":232,"nodeType":"ExpressionStatement","src":"582:43:4"},{"expression":{"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":233,"name":"lw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"640:2:4","typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage storage pointer"}},"id":236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"643:12:4","memberName":"_deviceOwner","nodeType":"MemberAccess","referencedDeclaration":359,"src":"640:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":237,"indexExpression":{"id":235,"name":"assignee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"656:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"640:25:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":238,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"668:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"672:6:4","memberName":"sender","nodeType":"MemberAccess","src":"668:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"640:38:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":241,"nodeType":"ExpressionStatement","src":"640:38:4"}]}}]},"id":245,"implemented":true,"kind":"function","modifiers":[],"name":"_assignAddressToSender","nameLocation":"281:22:4","nodeType":"FunctionDefinition","parameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"assignee","nameLocation":"312:8:4","nodeType":"VariableDeclaration","scope":245,"src":"304:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":183,"name":"address","nodeType":"ElementaryTypeName","src":"304:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"303:18:4"},"returnParameters":{"id":186,"nodeType":"ParameterList","parameters":[],"src":"330:0:4"},"scope":309,"src":"272:425:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[52],"body":{"id":268,"nodeType":"Block","src":"773:113:4","statements":[{"assignments":[253],"declarations":[{"constant":false,"id":253,"mutability":"mutable","name":"lw","nameLocation":"810:2:4","nodeType":"VariableDeclaration","scope":268,"src":"784:28:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage"},"typeName":{"id":252,"nodeType":"UserDefinedTypeName","pathNode":{"id":251,"name":"LeafWalletStorage","nameLocations":["784:17:4"],"nodeType":"IdentifierPath","referencedDeclaration":369,"src":"784:17:4"},"referencedDeclaration":369,"src":"784:17:4","typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage"}},"visibility":"internal"}],"id":256,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":254,"name":"lw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"815:2:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_LeafWalletStorage_$369_storage_ptr_$","typeString":"function () pure returns (struct LeafWalletStorage storage pointer)"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"815:4:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"784:35:4"},{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":257,"name":"lw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"837:2:4","typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage storage pointer"}},"id":258,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"840:12:4","memberName":"_deviceOwner","nodeType":"MemberAccess","referencedDeclaration":359,"src":"837:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":261,"indexExpression":{"expression":{"id":259,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"853:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"857:6:4","memberName":"sender","nodeType":"MemberAccess","src":"853:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"837:27:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"876:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"868:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":262,"name":"address","nodeType":"ElementaryTypeName","src":"868:7:4","typeDescriptions":{}}},"id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"868:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"837:41:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":250,"id":267,"nodeType":"Return","src":"830:48:4"}]},"functionSelector":"3aafa388","id":269,"implemented":true,"kind":"function","modifiers":[],"name":"isSenderRegistered","nameLocation":"716:18:4","nodeType":"FunctionDefinition","overrides":{"id":247,"nodeType":"OverrideSpecifier","overrides":[],"src":"749:8:4"},"parameters":{"id":246,"nodeType":"ParameterList","parameters":[],"src":"734:2:4"},"returnParameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":269,"src":"767:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":248,"name":"bool","nodeType":"ElementaryTypeName","src":"767:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"766:6:4"},"scope":309,"src":"707:179:4","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[57],"body":{"id":287,"nodeType":"Block","src":"959:99:4","statements":[{"assignments":[277],"declarations":[{"constant":false,"id":277,"mutability":"mutable","name":"lw","nameLocation":"996:2:4","nodeType":"VariableDeclaration","scope":287,"src":"970:28:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage"},"typeName":{"id":276,"nodeType":"UserDefinedTypeName","pathNode":{"id":275,"name":"LeafWalletStorage","nameLocations":["970:17:4"],"nodeType":"IdentifierPath","referencedDeclaration":369,"src":"970:17:4"},"referencedDeclaration":369,"src":"970:17:4","typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage"}},"visibility":"internal"}],"id":280,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":278,"name":"lw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"1001:2:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_LeafWalletStorage_$369_storage_ptr_$","typeString":"function () pure returns (struct LeafWalletStorage storage pointer)"}},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1001:4:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"970:35:4"},{"expression":{"baseExpression":{"expression":{"id":281,"name":"lw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"1023:2:4","typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage storage pointer"}},"id":282,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1026:12:4","memberName":"_deviceOwner","nodeType":"MemberAccess","referencedDeclaration":359,"src":"1023:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":285,"indexExpression":{"expression":{"id":283,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1039:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1043:6:4","memberName":"sender","nodeType":"MemberAccess","src":"1039:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1023:27:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":274,"id":286,"nodeType":"Return","src":"1016:34:4"}]},"functionSelector":"9b8ae375","id":288,"implemented":true,"kind":"function","modifiers":[],"name":"getDeviceOwner","nameLocation":"903:14:4","nodeType":"FunctionDefinition","overrides":{"id":271,"nodeType":"OverrideSpecifier","overrides":[],"src":"932:8:4"},"parameters":{"id":270,"nodeType":"ParameterList","parameters":[],"src":"917:2:4"},"returnParameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":288,"src":"950:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":272,"name":"address","nodeType":"ElementaryTypeName","src":"950:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"949:9:4"},"scope":309,"src":"894:164:4","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[63],"body":{"id":307,"nodeType":"Block","src":"1143:100:4","statements":[{"assignments":[297],"declarations":[{"constant":false,"id":297,"mutability":"mutable","name":"lw","nameLocation":"1180:2:4","nodeType":"VariableDeclaration","scope":307,"src":"1154:28:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage"},"typeName":{"id":296,"nodeType":"UserDefinedTypeName","pathNode":{"id":295,"name":"LeafWalletStorage","nameLocations":["1154:17:4"],"nodeType":"IdentifierPath","referencedDeclaration":369,"src":"1154:17:4"},"referencedDeclaration":369,"src":"1154:17:4","typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage"}},"visibility":"internal"}],"id":300,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":298,"name":"lw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"1185:2:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_LeafWalletStorage_$369_storage_ptr_$","typeString":"function () pure returns (struct LeafWalletStorage storage pointer)"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1185:4:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"1154:35:4"},{"expression":{"baseExpression":{"expression":{"id":301,"name":"lw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"1207:2:4","typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage storage pointer"}},"id":302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1210:13:4","memberName":"_ownerDevices","nodeType":"MemberAccess","referencedDeclaration":364,"src":"1207:16:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":305,"indexExpression":{"expression":{"id":303,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1224:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1228:6:4","memberName":"sender","nodeType":"MemberAccess","src":"1224:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1207:28:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":294,"id":306,"nodeType":"Return","src":"1200:35:4"}]},"functionSelector":"e0f64efc","id":308,"implemented":true,"kind":"function","modifiers":[],"name":"getRelatedDevices","nameLocation":"1075:17:4","nodeType":"FunctionDefinition","overrides":{"id":290,"nodeType":"OverrideSpecifier","overrides":[],"src":"1107:8:4"},"parameters":{"id":289,"nodeType":"ParameterList","parameters":[],"src":"1092:2:4"},"returnParameters":{"id":294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":308,"src":"1125:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"1125:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":292,"nodeType":"ArrayTypeName","src":"1125:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1124:18:4"},"scope":309,"src":"1066:177:4","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":310,"src":"181:1079:4","usedErrors":[]}],"src":"34:1238:4"},"id":4},"contracts/SusuwatariLeafWalletFacet.sol":{"ast":{"absolutePath":"contracts/SusuwatariLeafWalletFacet.sol","exportedSymbols":{"Context":[29],"ILeafWalletRegistryActivate":[45],"ILeafWalletRegistryCore":[64],"LeafWalletRegistryActivate":[172],"LeafWalletRegistryCore":[309],"LeafWalletStorage":[369],"LibDiamond":[1293],"StorageHandler":[421],"SusuwatariLeafWalletFacet":[335],"SusuwatariStorage":[355]},"id":336,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":311,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"34:24:5"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"@openzeppelin/contracts/utils/Context.sol","id":312,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":336,"sourceUnit":30,"src":"62:51:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/LeafWalletRegistryActivate.sol","file":"./LeafWalletRegistryActivate.sol","id":313,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":336,"sourceUnit":173,"src":"115:42:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"hardhat-deploy/solc_0.8/diamond/libraries/LibDiamond.sol","file":"hardhat-deploy/solc_0.8/diamond/libraries/LibDiamond.sol","id":315,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":336,"sourceUnit":1294,"src":"159:84:5","symbolAliases":[{"foreign":{"id":314,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"167:10:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/SusuwatariStorage.sol","file":"./SusuwatariStorage.sol","id":317,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":336,"sourceUnit":422,"src":"245:58:5","symbolAliases":[{"foreign":{"id":316,"name":"SusuwatariStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"253:17:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":318,"name":"LeafWalletRegistryActivate","nameLocations":["347:26:5"],"nodeType":"IdentifierPath","referencedDeclaration":172,"src":"347:26:5"},"id":319,"nodeType":"InheritanceSpecifier","src":"347:26:5"},{"baseName":{"id":320,"name":"Context","nameLocations":["375:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":29,"src":"375:7:5"},"id":321,"nodeType":"InheritanceSpecifier","src":"375:7:5"}],"canonicalName":"SusuwatariLeafWalletFacet","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":335,"linearizedBaseContracts":[335,29,172,309,421,45,64],"name":"SusuwatariLeafWalletFacet","nameLocation":"318:25:5","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[138],"body":{"id":333,"nodeType":"Block","src":"472:67:5","statements":[{"expression":{"arguments":[{"id":330,"name":"assignee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"522:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":327,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"483:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_SusuwatariLeafWalletFacet_$335_$","typeString":"type(contract super SusuwatariLeafWalletFacet)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"489:32:5","memberName":"assignActivatableAddressToSender","nodeType":"MemberAccess","referencedDeclaration":138,"src":"483:38:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"483:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":332,"nodeType":"ExpressionStatement","src":"483:48:5"}]},"functionSelector":"ec949297","id":334,"implemented":true,"kind":"function","modifiers":[],"name":"assignActivatableAddressToSender","nameLocation":"406:32:5","nodeType":"FunctionDefinition","overrides":{"id":325,"nodeType":"OverrideSpecifier","overrides":[],"src":"464:8:5"},"parameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"assignee","nameLocation":"447:8:5","nodeType":"VariableDeclaration","scope":334,"src":"439:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"439:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"438:18:5"},"returnParameters":{"id":326,"nodeType":"ParameterList","parameters":[],"src":"472:0:5"},"scope":335,"src":"397:142:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":336,"src":"309:233:5","usedErrors":[]}],"src":"34:520:5"},"id":5},"contracts/SusuwatariStorage.sol":{"ast":{"absolutePath":"contracts/SusuwatariStorage.sol","exportedSymbols":{"LEAFWALLET_STORAGE_POSITION":[349],"LeafWalletStorage":[369],"LibDiamond":[1293],"OwnableStorage":[352],"SUSUWATARI_STORAGE_POSITION":[344],"StorageHandler":[421],"SusuwatariStorage":[355]},"id":422,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":337,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"34:24:6"},{"absolutePath":"hardhat-deploy/solc_0.8/diamond/libraries/LibDiamond.sol","file":"hardhat-deploy/solc_0.8/diamond/libraries/LibDiamond.sol","id":339,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":422,"sourceUnit":1294,"src":"62:84:6","symbolAliases":[{"foreign":{"id":338,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"70:10:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"constant":true,"id":344,"mutability":"constant","name":"SUSUWATARI_STORAGE_POSITION","nameLocation":"167:27:6","nodeType":"VariableDeclaration","scope":422,"src":"150:87:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"150:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"737573757761746172692e636f6e74726163742e73746f72616765","id":342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"207:29:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_202e1867cade063e32a2eb339a246f853a1a233314949ba8d9e2ac766f6ed846","typeString":"literal_string \"susuwatari.contract.storage\""},"value":"susuwatari.contract.storage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_202e1867cade063e32a2eb339a246f853a1a233314949ba8d9e2ac766f6ed846","typeString":"literal_string \"susuwatari.contract.storage\""}],"id":341,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"197:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"197:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":true,"id":349,"mutability":"constant","name":"LEAFWALLET_STORAGE_POSITION","nameLocation":"257:27:6","nodeType":"VariableDeclaration","scope":422,"src":"240:87:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":345,"name":"bytes32","nodeType":"ElementaryTypeName","src":"240:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"6c65616677616c6c65742e636f6e74726163742e73746f72616765","id":347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"297:29:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_83ed3ba29c1d52058c877df3ebd264cf957c42ef7764387349be0ccf6df0b63b","typeString":"literal_string \"leafwallet.contract.storage\""},"value":"leafwallet.contract.storage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_83ed3ba29c1d52058c877df3ebd264cf957c42ef7764387349be0ccf6df0b63b","typeString":"literal_string \"leafwallet.contract.storage\""}],"id":346,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"287:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"287:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"canonicalName":"OwnableStorage","id":352,"members":[{"constant":false,"id":351,"mutability":"mutable","name":"_owner","nameLocation":"371:6:6","nodeType":"VariableDeclaration","scope":352,"src":"363:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":350,"name":"address","nodeType":"ElementaryTypeName","src":"363:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"339:14:6","nodeType":"StructDefinition","scope":422,"src":"332:49:6","visibility":"public"},{"canonicalName":"SusuwatariStorage","id":355,"members":[{"constant":false,"id":354,"mutability":"mutable","name":"isInitialized","nameLocation":"428:13:6","nodeType":"VariableDeclaration","scope":355,"src":"423:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":353,"name":"bool","nodeType":"ElementaryTypeName","src":"423:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"SusuwatariStorage","nameLocation":"392:17:6","nodeType":"StructDefinition","scope":422,"src":"385:60:6","visibility":"public"},{"canonicalName":"LeafWalletStorage","id":369,"members":[{"constant":false,"id":359,"mutability":"mutable","name":"_deviceOwner","nameLocation":"509:12:6","nodeType":"VariableDeclaration","scope":369,"src":"481:40:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":358,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":356,"name":"address","nodeType":"ElementaryTypeName","src":"489:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"481:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"500:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"constant":false,"id":364,"mutability":"mutable","name":"_ownerDevices","nameLocation":"558:13:6","nodeType":"VariableDeclaration","scope":369,"src":"528:43:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[])"},"typeName":{"id":363,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"536:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"528:29:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":361,"name":"address","nodeType":"ElementaryTypeName","src":"547:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":362,"nodeType":"ArrayTypeName","src":"547:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"_deviceActivationCodes","nameLocation":"606:22:6","nodeType":"VariableDeclaration","scope":369,"src":"578:50:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":367,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"586:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"578:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":366,"name":"uint256","nodeType":"ElementaryTypeName","src":"597:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"LeafWalletStorage","nameLocation":"456:17:6","nodeType":"StructDefinition","scope":422,"src":"449:183:6","visibility":"public"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageHandler","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":421,"linearizedBaseContracts":[421],"name":"StorageHandler","nameLocation":"645:14:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":380,"nodeType":"Block","src":"736:128:6","statements":[{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"position","nameLocation":"755:8:6","nodeType":"VariableDeclaration","scope":380,"src":"747:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":375,"name":"bytes32","nodeType":"ElementaryTypeName","src":"747:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":378,"initialValue":{"id":377,"name":"SUSUWATARI_STORAGE_POSITION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"766:27:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"747:46:6"},{"AST":{"nodeType":"YulBlock","src":"813:44:6","statements":[{"nodeType":"YulAssignment","src":"827:19:6","value":{"name":"position","nodeType":"YulIdentifier","src":"838:8:6"},"variableNames":[{"name":"cs.slot","nodeType":"YulIdentifier","src":"827:7:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":373,"isOffset":false,"isSlot":true,"src":"827:7:6","suffix":"slot","valueSize":1},{"declaration":376,"isOffset":false,"isSlot":false,"src":"838:8:6","valueSize":1}],"id":379,"nodeType":"InlineAssembly","src":"804:53:6"}]},"id":381,"implemented":true,"kind":"function","modifiers":[],"name":"susu","nameLocation":"676:4:6","nodeType":"FunctionDefinition","parameters":{"id":370,"nodeType":"ParameterList","parameters":[],"src":"680:2:6"},"returnParameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"cs","nameLocation":"732:2:6","nodeType":"VariableDeclaration","scope":381,"src":"706:28:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_SusuwatariStorage_$355_storage_ptr","typeString":"struct SusuwatariStorage"},"typeName":{"id":372,"nodeType":"UserDefinedTypeName","pathNode":{"id":371,"name":"SusuwatariStorage","nameLocations":["706:17:6"],"nodeType":"IdentifierPath","referencedDeclaration":355,"src":"706:17:6"},"referencedDeclaration":355,"src":"706:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_SusuwatariStorage_$355_storage_ptr","typeString":"struct SusuwatariStorage"}},"visibility":"internal"}],"src":"705:30:6"},"scope":421,"src":"667:197:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":394,"nodeType":"Block","src":"936:138:6","statements":[{"assignments":[388],"declarations":[{"constant":false,"id":388,"mutability":"mutable","name":"position","nameLocation":"955:8:6","nodeType":"VariableDeclaration","scope":394,"src":"947:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"947:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":392,"initialValue":{"arguments":[{"hexValue":"6f776e61626c652e636f6e74726163742e73746f72616765","id":390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"976:26:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba54e5e2df07707c0738a1dc17a9db81c007d13b963ffe942523a0b589b045cf","typeString":"literal_string \"ownable.contract.storage\""},"value":"ownable.contract.storage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ba54e5e2df07707c0738a1dc17a9db81c007d13b963ffe942523a0b589b045cf","typeString":"literal_string \"ownable.contract.storage\""}],"id":389,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"966:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"966:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"947:56:6"},{"AST":{"nodeType":"YulBlock","src":"1023:44:6","statements":[{"nodeType":"YulAssignment","src":"1037:19:6","value":{"name":"position","nodeType":"YulIdentifier","src":"1048:8:6"},"variableNames":[{"name":"cs.slot","nodeType":"YulIdentifier","src":"1037:7:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":385,"isOffset":false,"isSlot":true,"src":"1037:7:6","suffix":"slot","valueSize":1},{"declaration":388,"isOffset":false,"isSlot":false,"src":"1048:8:6","valueSize":1}],"id":393,"nodeType":"InlineAssembly","src":"1014:53:6"}]},"id":395,"implemented":true,"kind":"function","modifiers":[],"name":"os","nameLocation":"881:2:6","nodeType":"FunctionDefinition","parameters":{"id":382,"nodeType":"ParameterList","parameters":[],"src":"883:2:6"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"cs","nameLocation":"932:2:6","nodeType":"VariableDeclaration","scope":395,"src":"909:25:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$352_storage_ptr","typeString":"struct OwnableStorage"},"typeName":{"id":384,"nodeType":"UserDefinedTypeName","pathNode":{"id":383,"name":"OwnableStorage","nameLocations":["909:14:6"],"nodeType":"IdentifierPath","referencedDeclaration":352,"src":"909:14:6"},"referencedDeclaration":352,"src":"909:14:6","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$352_storage_ptr","typeString":"struct OwnableStorage"}},"visibility":"internal"}],"src":"908:27:6"},"scope":421,"src":"872:202:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":405,"nodeType":"Block","src":"1158:53:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":401,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"1176:10:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$1293_$","typeString":"type(library LibDiamond)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1187:14:6","memberName":"diamondStorage","nodeType":"MemberAccess","referencedDeclaration":511,"src":"1176:25:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$499_storage_ptr_$","typeString":"function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1176:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"functionReturnParameters":400,"id":404,"nodeType":"Return","src":"1169:34:6"}]},"id":406,"implemented":true,"kind":"function","modifiers":[],"name":"ds","nameLocation":"1095:2:6","nodeType":"FunctionDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[],"src":"1097:2:6"},"returnParameters":{"id":400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":406,"src":"1123:33:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"},"typeName":{"id":398,"nodeType":"UserDefinedTypeName","pathNode":{"id":397,"name":"LibDiamond.DiamondStorage","nameLocations":["1123:10:6","1134:14:6"],"nodeType":"IdentifierPath","referencedDeclaration":499,"src":"1123:25:6"},"referencedDeclaration":499,"src":"1123:25:6","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"}},"visibility":"internal"}],"src":"1122:35:6"},"scope":421,"src":"1086:125:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":419,"nodeType":"Block","src":"1292:141:6","statements":[{"assignments":[413],"declarations":[{"constant":false,"id":413,"mutability":"mutable","name":"position","nameLocation":"1311:8:6","nodeType":"VariableDeclaration","scope":419,"src":"1303:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":412,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1303:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":417,"initialValue":{"arguments":[{"hexValue":"6c65616677616c6c65742e636f6e74726163742e73746f72616765","id":415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1332:29:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_83ed3ba29c1d52058c877df3ebd264cf957c42ef7764387349be0ccf6df0b63b","typeString":"literal_string \"leafwallet.contract.storage\""},"value":"leafwallet.contract.storage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_83ed3ba29c1d52058c877df3ebd264cf957c42ef7764387349be0ccf6df0b63b","typeString":"literal_string \"leafwallet.contract.storage\""}],"id":414,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1322:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1303:59:6"},{"AST":{"nodeType":"YulBlock","src":"1382:44:6","statements":[{"nodeType":"YulAssignment","src":"1396:19:6","value":{"name":"position","nodeType":"YulIdentifier","src":"1407:8:6"},"variableNames":[{"name":"cs.slot","nodeType":"YulIdentifier","src":"1396:7:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":410,"isOffset":false,"isSlot":true,"src":"1396:7:6","suffix":"slot","valueSize":1},{"declaration":413,"isOffset":false,"isSlot":false,"src":"1407:8:6","valueSize":1}],"id":418,"nodeType":"InlineAssembly","src":"1373:53:6"}]},"id":420,"implemented":true,"kind":"function","modifiers":[],"name":"lw","nameLocation":"1234:2:6","nodeType":"FunctionDefinition","parameters":{"id":407,"nodeType":"ParameterList","parameters":[],"src":"1236:2:6"},"returnParameters":{"id":411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"mutability":"mutable","name":"cs","nameLocation":"1288:2:6","nodeType":"VariableDeclaration","scope":420,"src":"1262:28:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage"},"typeName":{"id":409,"nodeType":"UserDefinedTypeName","pathNode":{"id":408,"name":"LeafWalletStorage","nameLocations":["1262:17:6"],"nodeType":"IdentifierPath","referencedDeclaration":369,"src":"1262:17:6"},"referencedDeclaration":369,"src":"1262:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_LeafWalletStorage_$369_storage_ptr","typeString":"struct LeafWalletStorage"}},"visibility":"internal"}],"src":"1261:30:6"},"scope":421,"src":"1225:208:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":422,"src":"636:800:6","usedErrors":[]}],"src":"34:1402:6"},"id":6},"hardhat-deploy/solc_0.8/diamond/interfaces/IDiamondCut.sol":{"ast":{"absolutePath":"hardhat-deploy/solc_0.8/diamond/interfaces/IDiamondCut.sol","exportedSymbols":{"IDiamondCut":[459]},"id":460,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":423,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IDiamondCut","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":459,"linearizedBaseContracts":[459],"name":"IDiamondCut","nameLocation":"372:11:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IDiamondCut.FacetCutAction","id":427,"members":[{"id":424,"name":"Add","nameLocation":"411:3:7","nodeType":"EnumValue","src":"411:3:7"},{"id":425,"name":"Replace","nameLocation":"416:7:7","nodeType":"EnumValue","src":"416:7:7"},{"id":426,"name":"Remove","nameLocation":"425:6:7","nodeType":"EnumValue","src":"425:6:7"}],"name":"FacetCutAction","nameLocation":"395:14:7","nodeType":"EnumDefinition","src":"390:42:7"},{"canonicalName":"IDiamondCut.FacetCut","id":436,"members":[{"constant":false,"id":429,"mutability":"mutable","name":"facetAddress","nameLocation":"506:12:7","nodeType":"VariableDeclaration","scope":436,"src":"498:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":428,"name":"address","nodeType":"ElementaryTypeName","src":"498:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":432,"mutability":"mutable","name":"action","nameLocation":"543:6:7","nodeType":"VariableDeclaration","scope":436,"src":"528:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_FacetCutAction_$427","typeString":"enum IDiamondCut.FacetCutAction"},"typeName":{"id":431,"nodeType":"UserDefinedTypeName","pathNode":{"id":430,"name":"FacetCutAction","nameLocations":["528:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":427,"src":"528:14:7"},"referencedDeclaration":427,"src":"528:14:7","typeDescriptions":{"typeIdentifier":"t_enum$_FacetCutAction_$427","typeString":"enum IDiamondCut.FacetCutAction"}},"visibility":"internal"},{"constant":false,"id":435,"mutability":"mutable","name":"functionSelectors","nameLocation":"568:17:7","nodeType":"VariableDeclaration","scope":436,"src":"559:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":433,"name":"bytes4","nodeType":"ElementaryTypeName","src":"559:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":434,"nodeType":"ArrayTypeName","src":"559:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"}],"name":"FacetCut","nameLocation":"479:8:7","nodeType":"StructDefinition","scope":459,"src":"472:120:7","visibility":"public"},{"documentation":{"id":437,"nodeType":"StructuredDocumentation","src":"598:438:7","text":"@notice Add/replace/remove any number of functions and optionally execute\n         a function with delegatecall\n @param _diamondCut Contains the facet addresses and function selectors\n @param _init The address of the contract or facet to execute _calldata\n @param _calldata A function call, including function selector and arguments\n                  _calldata is executed with delegatecall on _init"},"functionSelector":"1f931c1c","id":448,"implemented":false,"kind":"function","modifiers":[],"name":"diamondCut","nameLocation":"1050:10:7","nodeType":"FunctionDefinition","parameters":{"id":446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"_diamondCut","nameLocation":"1090:11:7","nodeType":"VariableDeclaration","scope":448,"src":"1070:31:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$436_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IDiamondCut.FacetCut[]"},"typeName":{"baseType":{"id":439,"nodeType":"UserDefinedTypeName","pathNode":{"id":438,"name":"FacetCut","nameLocations":["1070:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":436,"src":"1070:8:7"},"referencedDeclaration":436,"src":"1070:8:7","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$436_storage_ptr","typeString":"struct IDiamondCut.FacetCut"}},"id":440,"nodeType":"ArrayTypeName","src":"1070:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$436_storage_$dyn_storage_ptr","typeString":"struct IDiamondCut.FacetCut[]"}},"visibility":"internal"},{"constant":false,"id":443,"mutability":"mutable","name":"_init","nameLocation":"1119:5:7","nodeType":"VariableDeclaration","scope":448,"src":"1111:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":442,"name":"address","nodeType":"ElementaryTypeName","src":"1111:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":445,"mutability":"mutable","name":"_calldata","nameLocation":"1149:9:7","nodeType":"VariableDeclaration","scope":448,"src":"1134:24:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":444,"name":"bytes","nodeType":"ElementaryTypeName","src":"1134:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1060:104:7"},"returnParameters":{"id":447,"nodeType":"ParameterList","parameters":[],"src":"1173:0:7"},"scope":459,"src":"1041:133:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"eventSelector":"8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673","id":458,"name":"DiamondCut","nameLocation":"1186:10:7","nodeType":"EventDefinition","parameters":{"id":457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"indexed":false,"mutability":"mutable","name":"_diamondCut","nameLocation":"1208:11:7","nodeType":"VariableDeclaration","scope":458,"src":"1197:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$436_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut[]"},"typeName":{"baseType":{"id":450,"nodeType":"UserDefinedTypeName","pathNode":{"id":449,"name":"FacetCut","nameLocations":["1197:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":436,"src":"1197:8:7"},"referencedDeclaration":436,"src":"1197:8:7","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$436_storage_ptr","typeString":"struct IDiamondCut.FacetCut"}},"id":451,"nodeType":"ArrayTypeName","src":"1197:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$436_storage_$dyn_storage_ptr","typeString":"struct IDiamondCut.FacetCut[]"}},"visibility":"internal"},{"constant":false,"id":454,"indexed":false,"mutability":"mutable","name":"_init","nameLocation":"1229:5:7","nodeType":"VariableDeclaration","scope":458,"src":"1221:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":453,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":456,"indexed":false,"mutability":"mutable","name":"_calldata","nameLocation":"1242:9:7","nodeType":"VariableDeclaration","scope":458,"src":"1236:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":455,"name":"bytes","nodeType":"ElementaryTypeName","src":"1236:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1196:56:7"},"src":"1180:73:7"}],"scope":460,"src":"362:893:7","usedErrors":[]}],"src":"32:1224:7"},"id":7},"hardhat-deploy/solc_0.8/diamond/libraries/LibDiamond.sol":{"ast":{"absolutePath":"hardhat-deploy/solc_0.8/diamond/libraries/LibDiamond.sol","exportedSymbols":{"IDiamondCut":[459],"LibDiamond":[1293]},"id":1294,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":461,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:8"},{"absolutePath":"hardhat-deploy/solc_0.8/diamond/interfaces/IDiamondCut.sol","file":"../interfaces/IDiamondCut.sol","id":463,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1294,"sourceUnit":460,"src":"361:60:8","symbolAliases":[{"foreign":{"id":462,"name":"IDiamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"370:11:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"LibDiamond","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":1293,"linearizedBaseContracts":[1293],"name":"LibDiamond","nameLocation":"431:10:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":468,"mutability":"constant","name":"DIAMOND_STORAGE_POSITION","nameLocation":"465:24:8","nodeType":"VariableDeclaration","scope":1293,"src":"448:89:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":464,"name":"bytes32","nodeType":"ElementaryTypeName","src":"448:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"6469616d6f6e642e7374616e646172642e6469616d6f6e642e73746f72616765","id":466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"502:34:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c","typeString":"literal_string \"diamond.standard.diamond.storage\""},"value":"diamond.standard.diamond.storage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c","typeString":"literal_string \"diamond.standard.diamond.storage\""}],"id":465,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"492:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"492:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"canonicalName":"LibDiamond.FacetAddressAndPosition","id":473,"members":[{"constant":false,"id":470,"mutability":"mutable","name":"facetAddress","nameLocation":"593:12:8","nodeType":"VariableDeclaration","scope":473,"src":"585:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"585:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":472,"mutability":"mutable","name":"functionSelectorPosition","nameLocation":"622:24:8","nodeType":"VariableDeclaration","scope":473,"src":"615:31:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":471,"name":"uint96","nodeType":"ElementaryTypeName","src":"615:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"name":"FacetAddressAndPosition","nameLocation":"551:23:8","nodeType":"StructDefinition","scope":1293,"src":"544:171:8","visibility":"public"},{"canonicalName":"LibDiamond.FacetFunctionSelectors","id":479,"members":[{"constant":false,"id":476,"mutability":"mutable","name":"functionSelectors","nameLocation":"770:17:8","nodeType":"VariableDeclaration","scope":479,"src":"761:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":474,"name":"bytes4","nodeType":"ElementaryTypeName","src":"761:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":475,"nodeType":"ArrayTypeName","src":"761:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"},{"constant":false,"id":478,"mutability":"mutable","name":"facetAddressPosition","nameLocation":"805:20:8","nodeType":"VariableDeclaration","scope":479,"src":"797:28:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":477,"name":"uint256","nodeType":"ElementaryTypeName","src":"797:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FacetFunctionSelectors","nameLocation":"728:22:8","nodeType":"StructDefinition","scope":1293,"src":"721:163:8","visibility":"public"},{"canonicalName":"LibDiamond.DiamondStorage","id":499,"members":[{"constant":false,"id":484,"mutability":"mutable","name":"selectorToFacetAndPosition","nameLocation":"1110:26:8","nodeType":"VariableDeclaration","scope":499,"src":"1067:69:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$473_storage_$","typeString":"mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition)"},"typeName":{"id":483,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":480,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1075:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"Mapping","src":"1067:42:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$473_storage_$","typeString":"mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":482,"nodeType":"UserDefinedTypeName","pathNode":{"id":481,"name":"FacetAddressAndPosition","nameLocations":["1085:23:8"],"nodeType":"IdentifierPath","referencedDeclaration":473,"src":"1085:23:8"},"referencedDeclaration":473,"src":"1085:23:8","typeDescriptions":{"typeIdentifier":"t_struct$_FacetAddressAndPosition_$473_storage_ptr","typeString":"struct LibDiamond.FacetAddressAndPosition"}}},"visibility":"internal"},{"constant":false,"id":489,"mutability":"mutable","name":"facetFunctionSelectors","nameLocation":"1243:22:8","nodeType":"VariableDeclaration","scope":499,"src":"1200:65:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$479_storage_$","typeString":"mapping(address => struct LibDiamond.FacetFunctionSelectors)"},"typeName":{"id":488,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":485,"name":"address","nodeType":"ElementaryTypeName","src":"1208:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1200:42:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$479_storage_$","typeString":"mapping(address => struct LibDiamond.FacetFunctionSelectors)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":487,"nodeType":"UserDefinedTypeName","pathNode":{"id":486,"name":"FacetFunctionSelectors","nameLocations":["1219:22:8"],"nodeType":"IdentifierPath","referencedDeclaration":479,"src":"1219:22:8"},"referencedDeclaration":479,"src":"1219:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_FacetFunctionSelectors_$479_storage_ptr","typeString":"struct LibDiamond.FacetFunctionSelectors"}}},"visibility":"internal"},{"constant":false,"id":492,"mutability":"mutable","name":"facetAddresses","nameLocation":"1312:14:8","nodeType":"VariableDeclaration","scope":499,"src":"1302:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":490,"name":"address","nodeType":"ElementaryTypeName","src":"1302:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":491,"nodeType":"ArrayTypeName","src":"1302:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":496,"mutability":"mutable","name":"supportedInterfaces","nameLocation":"1462:19:8","nodeType":"VariableDeclaration","scope":499,"src":"1438:43:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"},"typeName":{"id":495,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":493,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1446:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"Mapping","src":"1438:23:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":494,"name":"bool","nodeType":"ElementaryTypeName","src":"1456:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":498,"mutability":"mutable","name":"contractOwner","nameLocation":"1532:13:8","nodeType":"VariableDeclaration","scope":499,"src":"1524:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":497,"name":"address","nodeType":"ElementaryTypeName","src":"1524:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"DiamondStorage","nameLocation":"897:14:8","nodeType":"StructDefinition","scope":1293,"src":"890:662:8","visibility":"public"},{"body":{"id":510,"nodeType":"Block","src":"1634:121:8","statements":[{"assignments":[506],"declarations":[{"constant":false,"id":506,"mutability":"mutable","name":"position","nameLocation":"1652:8:8","nodeType":"VariableDeclaration","scope":510,"src":"1644:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":505,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1644:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":508,"initialValue":{"id":507,"name":"DIAMOND_STORAGE_POSITION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"1663:24:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1644:43:8"},{"AST":{"nodeType":"YulBlock","src":"1706:43:8","statements":[{"nodeType":"YulAssignment","src":"1720:19:8","value":{"name":"position","nodeType":"YulIdentifier","src":"1731:8:8"},"variableNames":[{"name":"ds.slot","nodeType":"YulIdentifier","src":"1720:7:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":503,"isOffset":false,"isSlot":true,"src":"1720:7:8","suffix":"slot","valueSize":1},{"declaration":506,"isOffset":false,"isSlot":false,"src":"1731:8:8","valueSize":1}],"id":509,"nodeType":"InlineAssembly","src":"1697:52:8"}]},"id":511,"implemented":true,"kind":"function","modifiers":[],"name":"diamondStorage","nameLocation":"1567:14:8","nodeType":"FunctionDefinition","parameters":{"id":500,"nodeType":"ParameterList","parameters":[],"src":"1581:2:8"},"returnParameters":{"id":504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":503,"mutability":"mutable","name":"ds","nameLocation":"1630:2:8","nodeType":"VariableDeclaration","scope":511,"src":"1607:25:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"},"typeName":{"id":502,"nodeType":"UserDefinedTypeName","pathNode":{"id":501,"name":"DiamondStorage","nameLocations":["1607:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":499,"src":"1607:14:8"},"referencedDeclaration":499,"src":"1607:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"}},"visibility":"internal"}],"src":"1606:27:8"},"scope":1293,"src":"1558:197:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":517,"name":"OwnershipTransferred","nameLocation":"1767:20:8","nodeType":"EventDefinition","parameters":{"id":516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":513,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1804:13:8","nodeType":"VariableDeclaration","scope":517,"src":"1788:29:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"1788:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":515,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1835:8:8","nodeType":"VariableDeclaration","scope":517,"src":"1819:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":514,"name":"address","nodeType":"ElementaryTypeName","src":"1819:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1787:57:8"},"src":"1761:84:8"},{"body":{"id":544,"nodeType":"Block","src":"1905:210:8","statements":[{"assignments":[524],"declarations":[{"constant":false,"id":524,"mutability":"mutable","name":"ds","nameLocation":"1938:2:8","nodeType":"VariableDeclaration","scope":544,"src":"1915:25:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"},"typeName":{"id":523,"nodeType":"UserDefinedTypeName","pathNode":{"id":522,"name":"DiamondStorage","nameLocations":["1915:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":499,"src":"1915:14:8"},"referencedDeclaration":499,"src":"1915:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"}},"visibility":"internal"}],"id":527,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":525,"name":"diamondStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"1943:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$499_storage_ptr_$","typeString":"function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1943:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"1915:44:8"},{"assignments":[529],"declarations":[{"constant":false,"id":529,"mutability":"mutable","name":"previousOwner","nameLocation":"1977:13:8","nodeType":"VariableDeclaration","scope":544,"src":"1969:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"1969:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":532,"initialValue":{"expression":{"id":530,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"1993:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":531,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1996:13:8","memberName":"contractOwner","nodeType":"MemberAccess","referencedDeclaration":498,"src":"1993:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1969:40:8"},{"expression":{"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":533,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"2019:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":535,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2022:13:8","memberName":"contractOwner","nodeType":"MemberAccess","referencedDeclaration":498,"src":"2019:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":536,"name":"_newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"2038:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2019:28:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":538,"nodeType":"ExpressionStatement","src":"2019:28:8"},{"eventCall":{"arguments":[{"id":540,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"2083:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":541,"name":"_newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"2098:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":539,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"2062:20:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2062:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":543,"nodeType":"EmitStatement","src":"2057:51:8"}]},"id":545,"implemented":true,"kind":"function","modifiers":[],"name":"setContractOwner","nameLocation":"1860:16:8","nodeType":"FunctionDefinition","parameters":{"id":520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"_newOwner","nameLocation":"1885:9:8","nodeType":"VariableDeclaration","scope":545,"src":"1877:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"1877:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1876:19:8"},"returnParameters":{"id":521,"nodeType":"ParameterList","parameters":[],"src":"1905:0:8"},"scope":1293,"src":"1851:264:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":556,"nodeType":"Block","src":"2193:64:8","statements":[{"expression":{"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":550,"name":"contractOwner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"2203:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":551,"name":"diamondStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"2220:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$499_storage_ptr_$","typeString":"function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2220:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":553,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2237:13:8","memberName":"contractOwner","nodeType":"MemberAccess","referencedDeclaration":498,"src":"2220:30:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2203:47:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":555,"nodeType":"ExpressionStatement","src":"2203:47:8"}]},"id":557,"implemented":true,"kind":"function","modifiers":[],"name":"contractOwner","nameLocation":"2130:13:8","nodeType":"FunctionDefinition","parameters":{"id":546,"nodeType":"ParameterList","parameters":[],"src":"2143:2:8"},"returnParameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":548,"mutability":"mutable","name":"contractOwner_","nameLocation":"2177:14:8","nodeType":"VariableDeclaration","scope":557,"src":"2169:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":547,"name":"address","nodeType":"ElementaryTypeName","src":"2169:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2168:24:8"},"scope":1293,"src":"2121:136:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":570,"nodeType":"Block","src":"2311:108:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":561,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2329:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2333:6:8","memberName":"sender","nodeType":"MemberAccess","src":"2329:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":563,"name":"diamondStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"2343:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$499_storage_ptr_$","typeString":"function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":565,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2360:13:8","memberName":"contractOwner","nodeType":"MemberAccess","referencedDeclaration":498,"src":"2343:30:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2329:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e6572","id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2375:36:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d4ae41009c51fd276653a54d7793c24f266ddc8c56ce21f8be5e2c6595ab3ac","typeString":"literal_string \"LibDiamond: Must be contract owner\""},"value":"LibDiamond: Must be contract owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d4ae41009c51fd276653a54d7793c24f266ddc8c56ce21f8be5e2c6595ab3ac","typeString":"literal_string \"LibDiamond: Must be contract owner\""}],"id":560,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2321:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2321:91:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":569,"nodeType":"ExpressionStatement","src":"2321:91:8"}]},"id":571,"implemented":true,"kind":"function","modifiers":[],"name":"enforceIsContractOwner","nameLocation":"2272:22:8","nodeType":"FunctionDefinition","parameters":{"id":558,"nodeType":"ParameterList","parameters":[],"src":"2294:2:8"},"returnParameters":{"id":559,"nodeType":"ParameterList","parameters":[],"src":"2311:0:8"},"scope":1293,"src":"2263:156:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"anonymous":false,"eventSelector":"8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673","id":581,"name":"DiamondCut","nameLocation":"2431:10:8","nodeType":"EventDefinition","parameters":{"id":580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"indexed":false,"mutability":"mutable","name":"_diamondCut","nameLocation":"2465:11:8","nodeType":"VariableDeclaration","scope":581,"src":"2442:34:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$436_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut[]"},"typeName":{"baseType":{"id":573,"nodeType":"UserDefinedTypeName","pathNode":{"id":572,"name":"IDiamondCut.FacetCut","nameLocations":["2442:11:8","2454:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":436,"src":"2442:20:8"},"referencedDeclaration":436,"src":"2442:20:8","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$436_storage_ptr","typeString":"struct IDiamondCut.FacetCut"}},"id":574,"nodeType":"ArrayTypeName","src":"2442:22:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$436_storage_$dyn_storage_ptr","typeString":"struct IDiamondCut.FacetCut[]"}},"visibility":"internal"},{"constant":false,"id":577,"indexed":false,"mutability":"mutable","name":"_init","nameLocation":"2486:5:8","nodeType":"VariableDeclaration","scope":581,"src":"2478:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"2478:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":579,"indexed":false,"mutability":"mutable","name":"_calldata","nameLocation":"2499:9:8","nodeType":"VariableDeclaration","scope":581,"src":"2493:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":578,"name":"bytes","nodeType":"ElementaryTypeName","src":"2493:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2441:68:8"},"src":"2425:85:8"},{"body":{"id":684,"nodeType":"Block","src":"2704:926:8","statements":[{"body":{"id":671,"nodeType":"Block","src":"2786:734:8","statements":[{"assignments":[606],"declarations":[{"constant":false,"id":606,"mutability":"mutable","name":"action","nameLocation":"2827:6:8","nodeType":"VariableDeclaration","scope":671,"src":"2800:33:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_FacetCutAction_$427","typeString":"enum IDiamondCut.FacetCutAction"},"typeName":{"id":605,"nodeType":"UserDefinedTypeName","pathNode":{"id":604,"name":"IDiamondCut.FacetCutAction","nameLocations":["2800:11:8","2812:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":427,"src":"2800:26:8"},"referencedDeclaration":427,"src":"2800:26:8","typeDescriptions":{"typeIdentifier":"t_enum$_FacetCutAction_$427","typeString":"enum IDiamondCut.FacetCutAction"}},"visibility":"internal"}],"id":611,"initialValue":{"expression":{"baseExpression":{"id":607,"name":"_diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"2836:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$436_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},"id":609,"indexExpression":{"id":608,"name":"facetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"2848:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2836:23:8","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$436_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory"}},"id":610,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2860:6:8","memberName":"action","nodeType":"MemberAccess","referencedDeclaration":432,"src":"2836:30:8","typeDescriptions":{"typeIdentifier":"t_enum$_FacetCutAction_$427","typeString":"enum IDiamondCut.FacetCutAction"}},"nodeType":"VariableDeclarationStatement","src":"2800:66:8"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_FacetCutAction_$427","typeString":"enum IDiamondCut.FacetCutAction"},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":612,"name":"action","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"2884:6:8","typeDescriptions":{"typeIdentifier":"t_enum$_FacetCutAction_$427","typeString":"enum IDiamondCut.FacetCutAction"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":613,"name":"IDiamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"2894:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IDiamondCut_$459_$","typeString":"type(contract IDiamondCut)"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2906:14:8","memberName":"FacetCutAction","nodeType":"MemberAccess","referencedDeclaration":427,"src":"2894:26:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_FacetCutAction_$427_$","typeString":"type(enum IDiamondCut.FacetCutAction)"}},"id":615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2921:3:8","memberName":"Add","nodeType":"MemberAccess","referencedDeclaration":424,"src":"2894:30:8","typeDescriptions":{"typeIdentifier":"t_enum$_FacetCutAction_$427","typeString":"enum IDiamondCut.FacetCutAction"}},"src":"2884:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_FacetCutAction_$427","typeString":"enum IDiamondCut.FacetCutAction"},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":629,"name":"action","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"3062:6:8","typeDescriptions":{"typeIdentifier":"t_enum$_FacetCutAction_$427","typeString":"enum IDiamondCut.FacetCutAction"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":630,"name":"IDiamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"3072:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IDiamondCut_$459_$","typeString":"type(contract IDiamondCut)"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:14:8","memberName":"FacetCutAction","nodeType":"MemberAccess","referencedDeclaration":427,"src":"3072:26:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_FacetCutAction_$427_$","typeString":"type(enum IDiamondCut.FacetCutAction)"}},"id":632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3099:7:8","memberName":"Replace","nodeType":"MemberAccess","referencedDeclaration":425,"src":"3072:34:8","typeDescriptions":{"typeIdentifier":"t_enum$_FacetCutAction_$427","typeString":"enum IDiamondCut.FacetCutAction"}},"src":"3062:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_FacetCutAction_$427","typeString":"enum IDiamondCut.FacetCutAction"},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":646,"name":"action","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"3248:6:8","typeDescriptions":{"typeIdentifier":"t_enum$_FacetCutAction_$427","typeString":"enum IDiamondCut.FacetCutAction"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":647,"name":"IDiamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"3258:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IDiamondCut_$459_$","typeString":"type(contract IDiamondCut)"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3270:14:8","memberName":"FacetCutAction","nodeType":"MemberAccess","referencedDeclaration":427,"src":"3258:26:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_FacetCutAction_$427_$","typeString":"type(enum IDiamondCut.FacetCutAction)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3285:6:8","memberName":"Remove","nodeType":"MemberAccess","referencedDeclaration":426,"src":"3258:33:8","typeDescriptions":{"typeIdentifier":"t_enum$_FacetCutAction_$427","typeString":"enum IDiamondCut.FacetCutAction"}},"src":"3248:43:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":667,"nodeType":"Block","src":"3428:82:8","statements":[{"expression":{"arguments":[{"hexValue":"4c69624469616d6f6e644375743a20496e636f7272656374204661636574437574416374696f6e","id":664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3453:41:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_48267d8daf5ea9c6bbad1fe9c53dc4c04a2a01b2b85bad432956cf42f45b2f54","typeString":"literal_string \"LibDiamondCut: Incorrect FacetCutAction\""},"value":"LibDiamondCut: Incorrect FacetCutAction"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_48267d8daf5ea9c6bbad1fe9c53dc4c04a2a01b2b85bad432956cf42f45b2f54","typeString":"literal_string \"LibDiamondCut: Incorrect FacetCutAction\""}],"id":663,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3446:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3446:49:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":666,"nodeType":"ExpressionStatement","src":"3446:49:8"}]},"id":668,"nodeType":"IfStatement","src":"3244:266:8","trueBody":{"id":662,"nodeType":"Block","src":"3293:129:8","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":652,"name":"_diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"3327:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$436_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},"id":654,"indexExpression":{"id":653,"name":"facetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"3339:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3327:23:8","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$436_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory"}},"id":655,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3351:12:8","memberName":"facetAddress","nodeType":"MemberAccess","referencedDeclaration":429,"src":"3327:36:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":656,"name":"_diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"3365:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$436_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},"id":658,"indexExpression":{"id":657,"name":"facetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"3377:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3365:23:8","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$436_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory"}},"id":659,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3389:17:8","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":435,"src":"3365:41:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}],"id":651,"name":"removeFunctions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"3311:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_bytes4_$dyn_memory_ptr_$returns$__$","typeString":"function (address,bytes4[] memory)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3311:96:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":661,"nodeType":"ExpressionStatement","src":"3311:96:8"}]}},"id":669,"nodeType":"IfStatement","src":"3058:452:8","trueBody":{"id":645,"nodeType":"Block","src":"3108:130:8","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":635,"name":"_diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"3143:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$436_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},"id":637,"indexExpression":{"id":636,"name":"facetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"3155:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3143:23:8","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$436_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory"}},"id":638,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3167:12:8","memberName":"facetAddress","nodeType":"MemberAccess","referencedDeclaration":429,"src":"3143:36:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":639,"name":"_diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"3181:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$436_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},"id":641,"indexExpression":{"id":640,"name":"facetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"3193:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3181:23:8","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$436_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory"}},"id":642,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3205:17:8","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":435,"src":"3181:41:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}],"id":634,"name":"replaceFunctions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"3126:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_bytes4_$dyn_memory_ptr_$returns$__$","typeString":"function (address,bytes4[] memory)"}},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3126:97:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":644,"nodeType":"ExpressionStatement","src":"3126:97:8"}]}},"id":670,"nodeType":"IfStatement","src":"2880:630:8","trueBody":{"id":628,"nodeType":"Block","src":"2926:126:8","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":618,"name":"_diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"2957:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$436_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},"id":620,"indexExpression":{"id":619,"name":"facetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"2969:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2957:23:8","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$436_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory"}},"id":621,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2981:12:8","memberName":"facetAddress","nodeType":"MemberAccess","referencedDeclaration":429,"src":"2957:36:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":622,"name":"_diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"2995:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$436_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},"id":624,"indexExpression":{"id":623,"name":"facetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"3007:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2995:23:8","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$436_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory"}},"id":625,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3019:17:8","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":435,"src":"2995:41:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}],"id":617,"name":"addFunctions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"2944:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_bytes4_$dyn_memory_ptr_$returns$__$","typeString":"function (address,bytes4[] memory)"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2944:93:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":627,"nodeType":"ExpressionStatement","src":"2944:93:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":595,"name":"facetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"2739:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":596,"name":"_diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"2752:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$436_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2764:6:8","memberName":"length","nodeType":"MemberAccess","src":"2752:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2739:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":672,"initializationExpression":{"assignments":[593],"declarations":[{"constant":false,"id":593,"mutability":"mutable","name":"facetIndex","nameLocation":"2727:10:8","nodeType":"VariableDeclaration","scope":672,"src":"2719:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":592,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":594,"nodeType":"VariableDeclarationStatement","src":"2719:18:8"},"loopExpression":{"expression":{"id":600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2772:12:8","subExpression":{"id":599,"name":"facetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"2772:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":601,"nodeType":"ExpressionStatement","src":"2772:12:8"},"nodeType":"ForStatement","src":"2714:806:8"},{"eventCall":{"arguments":[{"id":674,"name":"_diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"3545:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$436_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},{"id":675,"name":"_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"3558:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":676,"name":"_calldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"3565:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_FacetCut_$436_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":673,"name":"DiamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"3534:10:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_array$_t_struct$_FacetCut_$436_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct IDiamondCut.FacetCut memory[] memory,address,bytes memory)"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":678,"nodeType":"EmitStatement","src":"3529:46:8"},{"expression":{"arguments":[{"id":680,"name":"_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"3606:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":681,"name":"_calldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"3613:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":679,"name":"initializeDiamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"3585:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":683,"nodeType":"ExpressionStatement","src":"3585:38:8"}]},"id":685,"implemented":true,"kind":"function","modifiers":[],"name":"diamondCut","nameLocation":"2572:10:8","nodeType":"FunctionDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":585,"mutability":"mutable","name":"_diamondCut","nameLocation":"2622:11:8","nodeType":"VariableDeclaration","scope":685,"src":"2592:41:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$436_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut[]"},"typeName":{"baseType":{"id":583,"nodeType":"UserDefinedTypeName","pathNode":{"id":582,"name":"IDiamondCut.FacetCut","nameLocations":["2592:11:8","2604:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":436,"src":"2592:20:8"},"referencedDeclaration":436,"src":"2592:20:8","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$436_storage_ptr","typeString":"struct IDiamondCut.FacetCut"}},"id":584,"nodeType":"ArrayTypeName","src":"2592:22:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$436_storage_$dyn_storage_ptr","typeString":"struct IDiamondCut.FacetCut[]"}},"visibility":"internal"},{"constant":false,"id":587,"mutability":"mutable","name":"_init","nameLocation":"2651:5:8","nodeType":"VariableDeclaration","scope":685,"src":"2643:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"2643:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"_calldata","nameLocation":"2679:9:8","nodeType":"VariableDeclaration","scope":685,"src":"2666:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":588,"name":"bytes","nodeType":"ElementaryTypeName","src":"2666:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2582:112:8"},"returnParameters":{"id":591,"nodeType":"ParameterList","parameters":[],"src":"2704:0:8"},"scope":1293,"src":"2563:1067:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":785,"nodeType":"Block","src":"3726:999:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":694,"name":"_functionSelectors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"3744:18:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3763:6:8","memberName":"length","nodeType":"MemberAccess","src":"3744:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3772:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3744:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e20666163657420746f20637574","id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3775:45:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffc682bcfedefd5e93ba9ed0c2d1bc0b18319886e3b4bd28a03a3d3729f85c0","typeString":"literal_string \"LibDiamondCut: No selectors in facet to cut\""},"value":"LibDiamondCut: No selectors in facet to cut"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffc682bcfedefd5e93ba9ed0c2d1bc0b18319886e3b4bd28a03a3d3729f85c0","typeString":"literal_string \"LibDiamondCut: No selectors in facet to cut\""}],"id":693,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3736:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3736:85:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":700,"nodeType":"ExpressionStatement","src":"3736:85:8"},{"assignments":[703],"declarations":[{"constant":false,"id":703,"mutability":"mutable","name":"ds","nameLocation":"3854:2:8","nodeType":"VariableDeclaration","scope":785,"src":"3831:25:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"},"typeName":{"id":702,"nodeType":"UserDefinedTypeName","pathNode":{"id":701,"name":"DiamondStorage","nameLocations":["3831:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":499,"src":"3831:14:8"},"referencedDeclaration":499,"src":"3831:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"}},"visibility":"internal"}],"id":706,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":704,"name":"diamondStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"3859:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$499_storage_ptr_$","typeString":"function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3831:44:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":708,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"3901:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3926:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3918:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"3918:7:8","typeDescriptions":{}}},"id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3918:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3901:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e644375743a204164642066616365742063616e27742062652061646472657373283029","id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3930:46:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_64609d8b93c93a06b98d7db7a87b04044cd4a52c5661d603bb9b90ad8b914a3a","typeString":"literal_string \"LibDiamondCut: Add facet can't be address(0)\""},"value":"LibDiamondCut: Add facet can't be address(0)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_64609d8b93c93a06b98d7db7a87b04044cd4a52c5661d603bb9b90ad8b914a3a","typeString":"literal_string \"LibDiamondCut: Add facet can't be address(0)\""}],"id":707,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3893:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3893:84:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":716,"nodeType":"ExpressionStatement","src":"3893:84:8"},{"assignments":[718],"declarations":[{"constant":false,"id":718,"mutability":"mutable","name":"selectorPosition","nameLocation":"3994:16:8","nodeType":"VariableDeclaration","scope":785,"src":"3987:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":717,"name":"uint96","nodeType":"ElementaryTypeName","src":"3987:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":728,"initialValue":{"arguments":[{"expression":{"expression":{"baseExpression":{"expression":{"id":721,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"4020:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":722,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4023:22:8","memberName":"facetFunctionSelectors","nodeType":"MemberAccess","referencedDeclaration":489,"src":"4020:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$479_storage_$","typeString":"mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"}},"id":724,"indexExpression":{"id":723,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"4046:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4020:40:8","typeDescriptions":{"typeIdentifier":"t_struct$_FacetFunctionSelectors_$479_storage","typeString":"struct LibDiamond.FacetFunctionSelectors storage ref"}},"id":725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4061:17:8","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":476,"src":"4020:58:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage","typeString":"bytes4[] storage ref"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4079:6:8","memberName":"length","nodeType":"MemberAccess","src":"4020:65:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4013:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":719,"name":"uint96","nodeType":"ElementaryTypeName","src":"4013:6:8","typeDescriptions":{}}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4013:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"3987:99:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":729,"name":"selectorPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"4154:16:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4174:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4154:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":738,"nodeType":"IfStatement","src":"4150:91:8","trueBody":{"id":737,"nodeType":"Block","src":"4177:64:8","statements":[{"expression":{"arguments":[{"id":733,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"4200:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},{"id":734,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"4204:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"},{"typeIdentifier":"t_address","typeString":"address"}],"id":732,"name":"addFacet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"4191:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_DiamondStorage_$499_storage_ptr_$_t_address_$returns$__$","typeString":"function (struct LibDiamond.DiamondStorage storage pointer,address)"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":736,"nodeType":"ExpressionStatement","src":"4191:27:8"}]}},{"body":{"id":783,"nodeType":"Block","src":"4338:381:8","statements":[{"assignments":[750],"declarations":[{"constant":false,"id":750,"mutability":"mutable","name":"selector","nameLocation":"4359:8:8","nodeType":"VariableDeclaration","scope":783,"src":"4352:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":749,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4352:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":754,"initialValue":{"baseExpression":{"id":751,"name":"_functionSelectors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"4370:18:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":753,"indexExpression":{"id":752,"name":"selectorIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"4389:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4370:33:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"4352:51:8"},{"assignments":[756],"declarations":[{"constant":false,"id":756,"mutability":"mutable","name":"oldFacetAddress","nameLocation":"4425:15:8","nodeType":"VariableDeclaration","scope":783,"src":"4417:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"4417:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":762,"initialValue":{"expression":{"baseExpression":{"expression":{"id":757,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"4443:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":758,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4446:26:8","memberName":"selectorToFacetAndPosition","nodeType":"MemberAccess","referencedDeclaration":484,"src":"4443:29:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$473_storage_$","typeString":"mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"}},"id":760,"indexExpression":{"id":759,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"4473:8:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4443:39:8","typeDescriptions":{"typeIdentifier":"t_struct$_FacetAddressAndPosition_$473_storage","typeString":"struct LibDiamond.FacetAddressAndPosition storage ref"}},"id":761,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4483:12:8","memberName":"facetAddress","nodeType":"MemberAccess","referencedDeclaration":470,"src":"4443:52:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4417:78:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":764,"name":"oldFacetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"4517:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4544:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4536:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":765,"name":"address","nodeType":"ElementaryTypeName","src":"4536:7:8","typeDescriptions":{}}},"id":768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4536:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4517:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f6e207468617420616c726561647920657869737473","id":770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4548:55:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_99a7418ee014d613f46da44561258cdbb58064508097483a319062b99fa37700","typeString":"literal_string \"LibDiamondCut: Can't add function that already exists\""},"value":"LibDiamondCut: Can't add function that already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_99a7418ee014d613f46da44561258cdbb58064508097483a319062b99fa37700","typeString":"literal_string \"LibDiamondCut: Can't add function that already exists\""}],"id":763,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4509:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4509:95:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":772,"nodeType":"ExpressionStatement","src":"4509:95:8"},{"expression":{"arguments":[{"id":774,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"4630:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},{"id":775,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"4634:8:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":776,"name":"selectorPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"4644:16:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":777,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"4662:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_address","typeString":"address"}],"id":773,"name":"addFunction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"4618:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_DiamondStorage_$499_storage_ptr_$_t_bytes4_$_t_uint96_$_t_address_$returns$__$","typeString":"function (struct LibDiamond.DiamondStorage storage pointer,bytes4,uint96,address)"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4618:58:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":779,"nodeType":"ExpressionStatement","src":"4618:58:8"},{"expression":{"id":781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4690:18:8","subExpression":{"id":780,"name":"selectorPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"4690:16:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":782,"nodeType":"ExpressionStatement","src":"4690:18:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":742,"name":"selectorIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"4278:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":743,"name":"_functionSelectors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"4294:18:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4313:6:8","memberName":"length","nodeType":"MemberAccess","src":"4294:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4278:41:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":784,"initializationExpression":{"assignments":[740],"declarations":[{"constant":false,"id":740,"mutability":"mutable","name":"selectorIndex","nameLocation":"4263:13:8","nodeType":"VariableDeclaration","scope":784,"src":"4255:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":739,"name":"uint256","nodeType":"ElementaryTypeName","src":"4255:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":741,"nodeType":"VariableDeclarationStatement","src":"4255:21:8"},"loopExpression":{"expression":{"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4321:15:8","subExpression":{"id":746,"name":"selectorIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"4321:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":748,"nodeType":"ExpressionStatement","src":"4321:15:8"},"nodeType":"ForStatement","src":"4250:469:8"}]},"id":786,"implemented":true,"kind":"function","modifiers":[],"name":"addFunctions","nameLocation":"3645:12:8","nodeType":"FunctionDefinition","parameters":{"id":691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":687,"mutability":"mutable","name":"_facetAddress","nameLocation":"3666:13:8","nodeType":"VariableDeclaration","scope":786,"src":"3658:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":686,"name":"address","nodeType":"ElementaryTypeName","src":"3658:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":690,"mutability":"mutable","name":"_functionSelectors","nameLocation":"3697:18:8","nodeType":"VariableDeclaration","scope":786,"src":"3681:34:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":688,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3681:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":689,"nodeType":"ArrayTypeName","src":"3681:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"}],"src":"3657:59:8"},"returnParameters":{"id":692,"nodeType":"ParameterList","parameters":[],"src":"3726:0:8"},"scope":1293,"src":"3636:1089:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":889,"nodeType":"Block","src":"4825:1044:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":795,"name":"_functionSelectors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"4843:18:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4862:6:8","memberName":"length","nodeType":"MemberAccess","src":"4843:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4871:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4843:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e20666163657420746f20637574","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4874:45:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffc682bcfedefd5e93ba9ed0c2d1bc0b18319886e3b4bd28a03a3d3729f85c0","typeString":"literal_string \"LibDiamondCut: No selectors in facet to cut\""},"value":"LibDiamondCut: No selectors in facet to cut"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffc682bcfedefd5e93ba9ed0c2d1bc0b18319886e3b4bd28a03a3d3729f85c0","typeString":"literal_string \"LibDiamondCut: No selectors in facet to cut\""}],"id":794,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4835:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4835:85:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":801,"nodeType":"ExpressionStatement","src":"4835:85:8"},{"assignments":[804],"declarations":[{"constant":false,"id":804,"mutability":"mutable","name":"ds","nameLocation":"4953:2:8","nodeType":"VariableDeclaration","scope":889,"src":"4930:25:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"},"typeName":{"id":803,"nodeType":"UserDefinedTypeName","pathNode":{"id":802,"name":"DiamondStorage","nameLocations":["4930:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":499,"src":"4930:14:8"},"referencedDeclaration":499,"src":"4930:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"}},"visibility":"internal"}],"id":807,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":805,"name":"diamondStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"4958:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$499_storage_ptr_$","typeString":"function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4958:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4930:44:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":809,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"4992:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5017:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5009:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"5009:7:8","typeDescriptions":{}}},"id":813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5009:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4992:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e644375743a204164642066616365742063616e27742062652061646472657373283029","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5021:46:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_64609d8b93c93a06b98d7db7a87b04044cd4a52c5661d603bb9b90ad8b914a3a","typeString":"literal_string \"LibDiamondCut: Add facet can't be address(0)\""},"value":"LibDiamondCut: Add facet can't be address(0)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_64609d8b93c93a06b98d7db7a87b04044cd4a52c5661d603bb9b90ad8b914a3a","typeString":"literal_string \"LibDiamondCut: Add facet can't be address(0)\""}],"id":808,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4984:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4984:84:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":817,"nodeType":"ExpressionStatement","src":"4984:84:8"},{"assignments":[819],"declarations":[{"constant":false,"id":819,"mutability":"mutable","name":"selectorPosition","nameLocation":"5085:16:8","nodeType":"VariableDeclaration","scope":889,"src":"5078:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":818,"name":"uint96","nodeType":"ElementaryTypeName","src":"5078:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":829,"initialValue":{"arguments":[{"expression":{"expression":{"baseExpression":{"expression":{"id":822,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"5111:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":823,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5114:22:8","memberName":"facetFunctionSelectors","nodeType":"MemberAccess","referencedDeclaration":489,"src":"5111:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$479_storage_$","typeString":"mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"}},"id":825,"indexExpression":{"id":824,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"5137:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5111:40:8","typeDescriptions":{"typeIdentifier":"t_struct$_FacetFunctionSelectors_$479_storage","typeString":"struct LibDiamond.FacetFunctionSelectors storage ref"}},"id":826,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5152:17:8","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":476,"src":"5111:58:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage","typeString":"bytes4[] storage ref"}},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5170:6:8","memberName":"length","nodeType":"MemberAccess","src":"5111:65:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5104:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":820,"name":"uint96","nodeType":"ElementaryTypeName","src":"5104:6:8","typeDescriptions":{}}},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5104:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"5078:99:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":830,"name":"selectorPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"5245:16:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5265:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5245:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":839,"nodeType":"IfStatement","src":"5241:79:8","trueBody":{"id":838,"nodeType":"Block","src":"5268:52:8","statements":[{"expression":{"arguments":[{"id":834,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"5291:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},{"id":835,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"5295:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"},{"typeIdentifier":"t_address","typeString":"address"}],"id":833,"name":"addFacet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"5282:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_DiamondStorage_$499_storage_ptr_$_t_address_$returns$__$","typeString":"function (struct LibDiamond.DiamondStorage storage pointer,address)"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5282:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":837,"nodeType":"ExpressionStatement","src":"5282:27:8"}]}},{"body":{"id":887,"nodeType":"Block","src":"5417:446:8","statements":[{"assignments":[851],"declarations":[{"constant":false,"id":851,"mutability":"mutable","name":"selector","nameLocation":"5438:8:8","nodeType":"VariableDeclaration","scope":887,"src":"5431:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":850,"name":"bytes4","nodeType":"ElementaryTypeName","src":"5431:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":855,"initialValue":{"baseExpression":{"id":852,"name":"_functionSelectors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"5449:18:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":854,"indexExpression":{"id":853,"name":"selectorIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"5468:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5449:33:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"5431:51:8"},{"assignments":[857],"declarations":[{"constant":false,"id":857,"mutability":"mutable","name":"oldFacetAddress","nameLocation":"5504:15:8","nodeType":"VariableDeclaration","scope":887,"src":"5496:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"5496:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":863,"initialValue":{"expression":{"baseExpression":{"expression":{"id":858,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"5522:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":859,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5525:26:8","memberName":"selectorToFacetAndPosition","nodeType":"MemberAccess","referencedDeclaration":484,"src":"5522:29:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$473_storage_$","typeString":"mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"}},"id":861,"indexExpression":{"id":860,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"5552:8:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5522:39:8","typeDescriptions":{"typeIdentifier":"t_struct$_FacetAddressAndPosition_$473_storage","typeString":"struct LibDiamond.FacetAddressAndPosition storage ref"}},"id":862,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5562:12:8","memberName":"facetAddress","nodeType":"MemberAccess","referencedDeclaration":470,"src":"5522:52:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5496:78:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":865,"name":"oldFacetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"5596:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":866,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"5615:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5596:32:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e6374696f6e20776974682073616d652066756e6374696f6e","id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5630:58:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5a7112edf707196456f338fdcc19cd849be6cb8c0d166bcd035f4cfb00e7078","typeString":"literal_string \"LibDiamondCut: Can't replace function with same function\""},"value":"LibDiamondCut: Can't replace function with same function"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b5a7112edf707196456f338fdcc19cd849be6cb8c0d166bcd035f4cfb00e7078","typeString":"literal_string \"LibDiamondCut: Can't replace function with same function\""}],"id":864,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5588:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5588:101:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":870,"nodeType":"ExpressionStatement","src":"5588:101:8"},{"expression":{"arguments":[{"id":872,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"5718:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},{"id":873,"name":"oldFacetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"5722:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":874,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"5739:8:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":871,"name":"removeFunction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"5703:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_DiamondStorage_$499_storage_ptr_$_t_address_$_t_bytes4_$returns$__$","typeString":"function (struct LibDiamond.DiamondStorage storage pointer,address,bytes4)"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5703:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":876,"nodeType":"ExpressionStatement","src":"5703:45:8"},{"expression":{"arguments":[{"id":878,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"5774:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},{"id":879,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"5778:8:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":880,"name":"selectorPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"5788:16:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":881,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"5806:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_address","typeString":"address"}],"id":877,"name":"addFunction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"5762:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_DiamondStorage_$499_storage_ptr_$_t_bytes4_$_t_uint96_$_t_address_$returns$__$","typeString":"function (struct LibDiamond.DiamondStorage storage pointer,bytes4,uint96,address)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5762:58:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":883,"nodeType":"ExpressionStatement","src":"5762:58:8"},{"expression":{"id":885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5834:18:8","subExpression":{"id":884,"name":"selectorPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"5834:16:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":886,"nodeType":"ExpressionStatement","src":"5834:18:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":843,"name":"selectorIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"5357:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":844,"name":"_functionSelectors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"5373:18:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5392:6:8","memberName":"length","nodeType":"MemberAccess","src":"5373:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:41:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":888,"initializationExpression":{"assignments":[841],"declarations":[{"constant":false,"id":841,"mutability":"mutable","name":"selectorIndex","nameLocation":"5342:13:8","nodeType":"VariableDeclaration","scope":888,"src":"5334:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":840,"name":"uint256","nodeType":"ElementaryTypeName","src":"5334:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":842,"nodeType":"VariableDeclarationStatement","src":"5334:21:8"},"loopExpression":{"expression":{"id":848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5400:15:8","subExpression":{"id":847,"name":"selectorIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"5400:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":849,"nodeType":"ExpressionStatement","src":"5400:15:8"},"nodeType":"ForStatement","src":"5329:534:8"}]},"id":890,"implemented":true,"kind":"function","modifiers":[],"name":"replaceFunctions","nameLocation":"4740:16:8","nodeType":"FunctionDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":788,"mutability":"mutable","name":"_facetAddress","nameLocation":"4765:13:8","nodeType":"VariableDeclaration","scope":890,"src":"4757:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":787,"name":"address","nodeType":"ElementaryTypeName","src":"4757:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":791,"mutability":"mutable","name":"_functionSelectors","nameLocation":"4796:18:8","nodeType":"VariableDeclaration","scope":890,"src":"4780:34:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":789,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4780:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":790,"nodeType":"ArrayTypeName","src":"4780:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"}],"src":"4756:59:8"},"returnParameters":{"id":793,"nodeType":"ParameterList","parameters":[],"src":"4825:0:8"},"scope":1293,"src":"4731:1138:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":954,"nodeType":"Block","src":"5968:649:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":899,"name":"_functionSelectors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"5986:18:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6005:6:8","memberName":"length","nodeType":"MemberAccess","src":"5986:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6014:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5986:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e20666163657420746f20637574","id":903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6017:45:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffc682bcfedefd5e93ba9ed0c2d1bc0b18319886e3b4bd28a03a3d3729f85c0","typeString":"literal_string \"LibDiamondCut: No selectors in facet to cut\""},"value":"LibDiamondCut: No selectors in facet to cut"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffc682bcfedefd5e93ba9ed0c2d1bc0b18319886e3b4bd28a03a3d3729f85c0","typeString":"literal_string \"LibDiamondCut: No selectors in facet to cut\""}],"id":898,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5978:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5978:85:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":905,"nodeType":"ExpressionStatement","src":"5978:85:8"},{"assignments":[908],"declarations":[{"constant":false,"id":908,"mutability":"mutable","name":"ds","nameLocation":"6096:2:8","nodeType":"VariableDeclaration","scope":954,"src":"6073:25:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"},"typeName":{"id":907,"nodeType":"UserDefinedTypeName","pathNode":{"id":906,"name":"DiamondStorage","nameLocations":["6073:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":499,"src":"6073:14:8"},"referencedDeclaration":499,"src":"6073:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"}},"visibility":"internal"}],"id":911,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":909,"name":"diamondStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"6101:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$499_storage_ptr_$","typeString":"function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6101:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6073:44:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":913,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"6200:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6225:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6217:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":914,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:8","typeDescriptions":{}}},"id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6217:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6200:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e644375743a2052656d6f76652066616365742061646472657373206d7573742062652061646472657373283029","id":919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6229:56:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_b739aae768f79b96e91d9f66398733516895e39eb09ee54a795b49dcc77504d4","typeString":"literal_string \"LibDiamondCut: Remove facet address must be address(0)\""},"value":"LibDiamondCut: Remove facet address must be address(0)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b739aae768f79b96e91d9f66398733516895e39eb09ee54a795b49dcc77504d4","typeString":"literal_string \"LibDiamondCut: Remove facet address must be address(0)\""}],"id":912,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6192:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6192:94:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":921,"nodeType":"ExpressionStatement","src":"6192:94:8"},{"body":{"id":952,"nodeType":"Block","src":"6384:227:8","statements":[{"assignments":[933],"declarations":[{"constant":false,"id":933,"mutability":"mutable","name":"selector","nameLocation":"6405:8:8","nodeType":"VariableDeclaration","scope":952,"src":"6398:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":932,"name":"bytes4","nodeType":"ElementaryTypeName","src":"6398:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":937,"initialValue":{"baseExpression":{"id":934,"name":"_functionSelectors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"6416:18:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":936,"indexExpression":{"id":935,"name":"selectorIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"6435:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6416:33:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"6398:51:8"},{"assignments":[939],"declarations":[{"constant":false,"id":939,"mutability":"mutable","name":"oldFacetAddress","nameLocation":"6471:15:8","nodeType":"VariableDeclaration","scope":952,"src":"6463:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":938,"name":"address","nodeType":"ElementaryTypeName","src":"6463:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":945,"initialValue":{"expression":{"baseExpression":{"expression":{"id":940,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"6489:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":941,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6492:26:8","memberName":"selectorToFacetAndPosition","nodeType":"MemberAccess","referencedDeclaration":484,"src":"6489:29:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$473_storage_$","typeString":"mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"}},"id":943,"indexExpression":{"id":942,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"6519:8:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6489:39:8","typeDescriptions":{"typeIdentifier":"t_struct$_FacetAddressAndPosition_$473_storage","typeString":"struct LibDiamond.FacetAddressAndPosition storage ref"}},"id":944,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6529:12:8","memberName":"facetAddress","nodeType":"MemberAccess","referencedDeclaration":470,"src":"6489:52:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6463:78:8"},{"expression":{"arguments":[{"id":947,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"6570:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},{"id":948,"name":"oldFacetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"6574:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":949,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"6591:8:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":946,"name":"removeFunction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"6555:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_DiamondStorage_$499_storage_ptr_$_t_address_$_t_bytes4_$returns$__$","typeString":"function (struct LibDiamond.DiamondStorage storage pointer,address,bytes4)"}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6555:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":951,"nodeType":"ExpressionStatement","src":"6555:45:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":925,"name":"selectorIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"6324:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":926,"name":"_functionSelectors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"6340:18:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6359:6:8","memberName":"length","nodeType":"MemberAccess","src":"6340:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6324:41:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":953,"initializationExpression":{"assignments":[923],"declarations":[{"constant":false,"id":923,"mutability":"mutable","name":"selectorIndex","nameLocation":"6309:13:8","nodeType":"VariableDeclaration","scope":953,"src":"6301:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":922,"name":"uint256","nodeType":"ElementaryTypeName","src":"6301:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":924,"nodeType":"VariableDeclarationStatement","src":"6301:21:8"},"loopExpression":{"expression":{"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6367:15:8","subExpression":{"id":929,"name":"selectorIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"6367:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":931,"nodeType":"ExpressionStatement","src":"6367:15:8"},"nodeType":"ForStatement","src":"6296:315:8"}]},"id":955,"implemented":true,"kind":"function","modifiers":[],"name":"removeFunctions","nameLocation":"5884:15:8","nodeType":"FunctionDefinition","parameters":{"id":896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"mutability":"mutable","name":"_facetAddress","nameLocation":"5908:13:8","nodeType":"VariableDeclaration","scope":955,"src":"5900:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"5900:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":895,"mutability":"mutable","name":"_functionSelectors","nameLocation":"5939:18:8","nodeType":"VariableDeclaration","scope":955,"src":"5923:34:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":893,"name":"bytes4","nodeType":"ElementaryTypeName","src":"5923:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":894,"nodeType":"ArrayTypeName","src":"5923:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"}],"src":"5899:59:8"},"returnParameters":{"id":897,"nodeType":"ParameterList","parameters":[],"src":"5968:0:8"},"scope":1293,"src":"5875:742:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":987,"nodeType":"Block","src":"6700:239:8","statements":[{"expression":{"arguments":[{"id":964,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"6733:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"4c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465","id":965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6748:38:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_846ccbeb9c32d4d40d2c1bf991251db6ab65744a2f52b273947cee088a65504b","typeString":"literal_string \"LibDiamondCut: New facet has no code\""},"value":"LibDiamondCut: New facet has no code"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_846ccbeb9c32d4d40d2c1bf991251db6ab65744a2f52b273947cee088a65504b","typeString":"literal_string \"LibDiamondCut: New facet has no code\""}],"id":963,"name":"enforceHasContractCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"6710:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory) view"}},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6710:77:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":967,"nodeType":"ExpressionStatement","src":"6710:77:8"},{"expression":{"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":968,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"6797:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6800:22:8","memberName":"facetFunctionSelectors","nodeType":"MemberAccess","referencedDeclaration":489,"src":"6797:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$479_storage_$","typeString":"mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"}},"id":972,"indexExpression":{"id":970,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"6823:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6797:40:8","typeDescriptions":{"typeIdentifier":"t_struct$_FacetFunctionSelectors_$479_storage","typeString":"struct LibDiamond.FacetFunctionSelectors storage ref"}},"id":973,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6838:20:8","memberName":"facetAddressPosition","nodeType":"MemberAccess","referencedDeclaration":478,"src":"6797:61:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":974,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"6861:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":975,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6864:14:8","memberName":"facetAddresses","nodeType":"MemberAccess","referencedDeclaration":492,"src":"6861:17:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6879:6:8","memberName":"length","nodeType":"MemberAccess","src":"6861:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6797:88:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":978,"nodeType":"ExpressionStatement","src":"6797:88:8"},{"expression":{"arguments":[{"id":984,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"6918:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":979,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"6895:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":982,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6898:14:8","memberName":"facetAddresses","nodeType":"MemberAccess","referencedDeclaration":492,"src":"6895:17:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6913:4:8","memberName":"push","nodeType":"MemberAccess","src":"6895:22:8","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6895:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":986,"nodeType":"ExpressionStatement","src":"6895:37:8"}]},"id":988,"implemented":true,"kind":"function","modifiers":[],"name":"addFacet","nameLocation":"6632:8:8","nodeType":"FunctionDefinition","parameters":{"id":961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"mutability":"mutable","name":"ds","nameLocation":"6664:2:8","nodeType":"VariableDeclaration","scope":988,"src":"6641:25:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"},"typeName":{"id":957,"nodeType":"UserDefinedTypeName","pathNode":{"id":956,"name":"DiamondStorage","nameLocations":["6641:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":499,"src":"6641:14:8"},"referencedDeclaration":499,"src":"6641:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"_facetAddress","nameLocation":"6676:13:8","nodeType":"VariableDeclaration","scope":988,"src":"6668:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":959,"name":"address","nodeType":"ElementaryTypeName","src":"6668:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6640:50:8"},"returnParameters":{"id":962,"nodeType":"ParameterList","parameters":[],"src":"6700:0:8"},"scope":1293,"src":"6623:316:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1028,"nodeType":"Block","src":"7074:265:8","statements":[{"expression":{"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":1000,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"7084:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":1003,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7087:26:8","memberName":"selectorToFacetAndPosition","nodeType":"MemberAccess","referencedDeclaration":484,"src":"7084:29:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$473_storage_$","typeString":"mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"}},"id":1004,"indexExpression":{"id":1002,"name":"_selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"7114:9:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7084:40:8","typeDescriptions":{"typeIdentifier":"t_struct$_FacetAddressAndPosition_$473_storage","typeString":"struct LibDiamond.FacetAddressAndPosition storage ref"}},"id":1005,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7125:24:8","memberName":"functionSelectorPosition","nodeType":"MemberAccess","referencedDeclaration":472,"src":"7084:65:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1006,"name":"_selectorPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"7152:17:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"7084:85:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1008,"nodeType":"ExpressionStatement","src":"7084:85:8"},{"expression":{"arguments":[{"id":1016,"name":"_selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"7243:9:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"expression":{"baseExpression":{"expression":{"id":1009,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"7179:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":1012,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7182:22:8","memberName":"facetFunctionSelectors","nodeType":"MemberAccess","referencedDeclaration":489,"src":"7179:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$479_storage_$","typeString":"mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"}},"id":1013,"indexExpression":{"id":1011,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"7205:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7179:40:8","typeDescriptions":{"typeIdentifier":"t_struct$_FacetFunctionSelectors_$479_storage","typeString":"struct LibDiamond.FacetFunctionSelectors storage ref"}},"id":1014,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7220:17:8","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":476,"src":"7179:58:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage","typeString":"bytes4[] storage ref"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7238:4:8","memberName":"push","nodeType":"MemberAccess","src":"7179:63:8","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes4_$dyn_storage_ptr_$_t_bytes4_$returns$__$attached_to$_t_array$_t_bytes4_$dyn_storage_ptr_$","typeString":"function (bytes4[] storage pointer,bytes4)"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7179:74:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1018,"nodeType":"ExpressionStatement","src":"7179:74:8"},{"expression":{"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":1019,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"7263:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":1022,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7266:26:8","memberName":"selectorToFacetAndPosition","nodeType":"MemberAccess","referencedDeclaration":484,"src":"7263:29:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$473_storage_$","typeString":"mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"}},"id":1023,"indexExpression":{"id":1021,"name":"_selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"7293:9:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7263:40:8","typeDescriptions":{"typeIdentifier":"t_struct$_FacetAddressAndPosition_$473_storage","typeString":"struct LibDiamond.FacetAddressAndPosition storage ref"}},"id":1024,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7304:12:8","memberName":"facetAddress","nodeType":"MemberAccess","referencedDeclaration":470,"src":"7263:53:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1025,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"7319:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7263:69:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1027,"nodeType":"ExpressionStatement","src":"7263:69:8"}]},"id":1029,"implemented":true,"kind":"function","modifiers":[],"name":"addFunction","nameLocation":"6959:11:8","nodeType":"FunctionDefinition","parameters":{"id":998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":991,"mutability":"mutable","name":"ds","nameLocation":"6994:2:8","nodeType":"VariableDeclaration","scope":1029,"src":"6971:25:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"},"typeName":{"id":990,"nodeType":"UserDefinedTypeName","pathNode":{"id":989,"name":"DiamondStorage","nameLocations":["6971:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":499,"src":"6971:14:8"},"referencedDeclaration":499,"src":"6971:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"}},"visibility":"internal"},{"constant":false,"id":993,"mutability":"mutable","name":"_selector","nameLocation":"7005:9:8","nodeType":"VariableDeclaration","scope":1029,"src":"6998:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":992,"name":"bytes4","nodeType":"ElementaryTypeName","src":"6998:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":995,"mutability":"mutable","name":"_selectorPosition","nameLocation":"7023:17:8","nodeType":"VariableDeclaration","scope":1029,"src":"7016:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":994,"name":"uint96","nodeType":"ElementaryTypeName","src":"7016:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":997,"mutability":"mutable","name":"_facetAddress","nameLocation":"7050:13:8","nodeType":"VariableDeclaration","scope":1029,"src":"7042:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":996,"name":"address","nodeType":"ElementaryTypeName","src":"7042:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6970:94:8"},"returnParameters":{"id":999,"nodeType":"ParameterList","parameters":[],"src":"7074:0:8"},"scope":1293,"src":"6950:389:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1195,"nodeType":"Block","src":"7446:2089:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1040,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"7472:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7497:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7489:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1041,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:8","typeDescriptions":{}}},"id":1044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7489:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7472:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6374696f6e207468617420646f65736e2774206578697374","id":1046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7501:57:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c590e498c4d56c984a7092fd5e89a68b9f4541ce9f97252fb74e44a00ffbb71","typeString":"literal_string \"LibDiamondCut: Can't remove function that doesn't exist\""},"value":"LibDiamondCut: Can't remove function that doesn't exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c590e498c4d56c984a7092fd5e89a68b9f4541ce9f97252fb74e44a00ffbb71","typeString":"literal_string \"LibDiamondCut: Can't remove function that doesn't exist\""}],"id":1039,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7464:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7464:95:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1048,"nodeType":"ExpressionStatement","src":"7464:95:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1050,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"7654:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":1053,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7679:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_LibDiamond_$1293","typeString":"library LibDiamond"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LibDiamond_$1293","typeString":"library LibDiamond"}],"id":1052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7671:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1051,"name":"address","nodeType":"ElementaryTypeName","src":"7671:7:8","typeDescriptions":{}}},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7671:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7654:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d757461626c652066756e6374696f6e","id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7686:48:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ba063dfaa4be2d2cbe73dbb1364728b0f7031ac048441d5fad19e9541992b21","typeString":"literal_string \"LibDiamondCut: Can't remove immutable function\""},"value":"LibDiamondCut: Can't remove immutable function"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ba063dfaa4be2d2cbe73dbb1364728b0f7031ac048441d5fad19e9541992b21","typeString":"literal_string \"LibDiamondCut: Can't remove immutable function\""}],"id":1049,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7646:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7646:89:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1058,"nodeType":"ExpressionStatement","src":"7646:89:8"},{"assignments":[1060],"declarations":[{"constant":false,"id":1060,"mutability":"mutable","name":"selectorPosition","nameLocation":"7827:16:8","nodeType":"VariableDeclaration","scope":1195,"src":"7819:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1059,"name":"uint256","nodeType":"ElementaryTypeName","src":"7819:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1066,"initialValue":{"expression":{"baseExpression":{"expression":{"id":1061,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"7846:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":1062,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7849:26:8","memberName":"selectorToFacetAndPosition","nodeType":"MemberAccess","referencedDeclaration":484,"src":"7846:29:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$473_storage_$","typeString":"mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"}},"id":1064,"indexExpression":{"id":1063,"name":"_selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"7876:9:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7846:40:8","typeDescriptions":{"typeIdentifier":"t_struct$_FacetAddressAndPosition_$473_storage","typeString":"struct LibDiamond.FacetAddressAndPosition storage ref"}},"id":1065,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7887:24:8","memberName":"functionSelectorPosition","nodeType":"MemberAccess","referencedDeclaration":472,"src":"7846:65:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"7819:92:8"},{"assignments":[1068],"declarations":[{"constant":false,"id":1068,"mutability":"mutable","name":"lastSelectorPosition","nameLocation":"7929:20:8","nodeType":"VariableDeclaration","scope":1195,"src":"7921:28:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1067,"name":"uint256","nodeType":"ElementaryTypeName","src":"7921:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1077,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"baseExpression":{"expression":{"id":1069,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"7952:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":1070,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7955:22:8","memberName":"facetFunctionSelectors","nodeType":"MemberAccess","referencedDeclaration":489,"src":"7952:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$479_storage_$","typeString":"mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"}},"id":1072,"indexExpression":{"id":1071,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"7978:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7952:40:8","typeDescriptions":{"typeIdentifier":"t_struct$_FacetFunctionSelectors_$479_storage","typeString":"struct LibDiamond.FacetFunctionSelectors storage ref"}},"id":1073,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7993:17:8","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":476,"src":"7952:58:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage","typeString":"bytes4[] storage ref"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8011:6:8","memberName":"length","nodeType":"MemberAccess","src":"7952:65:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8020:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7952:69:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7921:100:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1078,"name":"selectorPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"8103:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1079,"name":"lastSelectorPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"8123:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8103:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1115,"nodeType":"IfStatement","src":"8099:387:8","trueBody":{"id":1114,"nodeType":"Block","src":"8145:341:8","statements":[{"assignments":[1082],"declarations":[{"constant":false,"id":1082,"mutability":"mutable","name":"lastSelector","nameLocation":"8166:12:8","nodeType":"VariableDeclaration","scope":1114,"src":"8159:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1081,"name":"bytes4","nodeType":"ElementaryTypeName","src":"8159:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":1090,"initialValue":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":1083,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"8181:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":1084,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8184:22:8","memberName":"facetFunctionSelectors","nodeType":"MemberAccess","referencedDeclaration":489,"src":"8181:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$479_storage_$","typeString":"mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"}},"id":1086,"indexExpression":{"id":1085,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"8207:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8181:40:8","typeDescriptions":{"typeIdentifier":"t_struct$_FacetFunctionSelectors_$479_storage","typeString":"struct LibDiamond.FacetFunctionSelectors storage ref"}},"id":1087,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8222:17:8","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":476,"src":"8181:58:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage","typeString":"bytes4[] storage ref"}},"id":1089,"indexExpression":{"id":1088,"name":"lastSelectorPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"8240:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8181:80:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"8159:102:8"},{"expression":{"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":1091,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"8275:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":1094,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8278:22:8","memberName":"facetFunctionSelectors","nodeType":"MemberAccess","referencedDeclaration":489,"src":"8275:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$479_storage_$","typeString":"mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"}},"id":1095,"indexExpression":{"id":1093,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"8301:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8275:40:8","typeDescriptions":{"typeIdentifier":"t_struct$_FacetFunctionSelectors_$479_storage","typeString":"struct LibDiamond.FacetFunctionSelectors storage ref"}},"id":1096,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8316:17:8","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":476,"src":"8275:58:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage","typeString":"bytes4[] storage ref"}},"id":1098,"indexExpression":{"id":1097,"name":"selectorPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"8334:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8275:76:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1099,"name":"lastSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"8354:12:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"8275:91:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1101,"nodeType":"ExpressionStatement","src":"8275:91:8"},{"expression":{"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":1102,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"8380:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":1105,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8383:26:8","memberName":"selectorToFacetAndPosition","nodeType":"MemberAccess","referencedDeclaration":484,"src":"8380:29:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$473_storage_$","typeString":"mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"}},"id":1106,"indexExpression":{"id":1104,"name":"lastSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"8410:12:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8380:43:8","typeDescriptions":{"typeIdentifier":"t_struct$_FacetAddressAndPosition_$473_storage","typeString":"struct LibDiamond.FacetAddressAndPosition storage ref"}},"id":1107,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8424:24:8","memberName":"functionSelectorPosition","nodeType":"MemberAccess","referencedDeclaration":472,"src":"8380:68:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1110,"name":"selectorPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"8458:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8451:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1108,"name":"uint96","nodeType":"ElementaryTypeName","src":"8451:6:8","typeDescriptions":{}}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8451:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"8380:95:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1113,"nodeType":"ExpressionStatement","src":"8380:95:8"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"baseExpression":{"expression":{"id":1116,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"8531:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":1119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8534:22:8","memberName":"facetFunctionSelectors","nodeType":"MemberAccess","referencedDeclaration":489,"src":"8531:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$479_storage_$","typeString":"mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"}},"id":1120,"indexExpression":{"id":1118,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"8557:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8531:40:8","typeDescriptions":{"typeIdentifier":"t_struct$_FacetFunctionSelectors_$479_storage","typeString":"struct LibDiamond.FacetFunctionSelectors storage ref"}},"id":1121,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8572:17:8","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":476,"src":"8531:58:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage","typeString":"bytes4[] storage ref"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8590:3:8","memberName":"pop","nodeType":"MemberAccess","src":"8531:62:8","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes4_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes4_$dyn_storage_ptr_$","typeString":"function (bytes4[] storage pointer)"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8531:64:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1124,"nodeType":"ExpressionStatement","src":"8531:64:8"},{"expression":{"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"8605:47:8","subExpression":{"baseExpression":{"expression":{"id":1125,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"8612:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":1126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8615:26:8","memberName":"selectorToFacetAndPosition","nodeType":"MemberAccess","referencedDeclaration":484,"src":"8612:29:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$473_storage_$","typeString":"mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"}},"id":1128,"indexExpression":{"id":1127,"name":"_selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"8642:9:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8612:40:8","typeDescriptions":{"typeIdentifier":"t_struct$_FacetAddressAndPosition_$473_storage","typeString":"struct LibDiamond.FacetAddressAndPosition storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1130,"nodeType":"ExpressionStatement","src":"8605:47:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1131,"name":"lastSelectorPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"8747:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8771:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8747:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1194,"nodeType":"IfStatement","src":"8743:786:8","trueBody":{"id":1193,"nodeType":"Block","src":"8774:755:8","statements":[{"assignments":[1135],"declarations":[{"constant":false,"id":1135,"mutability":"mutable","name":"lastFacetAddressPosition","nameLocation":"8887:24:8","nodeType":"VariableDeclaration","scope":1193,"src":"8879:32:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1134,"name":"uint256","nodeType":"ElementaryTypeName","src":"8879:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1141,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1136,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"8914:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":1137,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8917:14:8","memberName":"facetAddresses","nodeType":"MemberAccess","referencedDeclaration":492,"src":"8914:17:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8932:6:8","memberName":"length","nodeType":"MemberAccess","src":"8914:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8941:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8914:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8879:63:8"},{"assignments":[1143],"declarations":[{"constant":false,"id":1143,"mutability":"mutable","name":"facetAddressPosition","nameLocation":"8964:20:8","nodeType":"VariableDeclaration","scope":1193,"src":"8956:28:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1142,"name":"uint256","nodeType":"ElementaryTypeName","src":"8956:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1149,"initialValue":{"expression":{"baseExpression":{"expression":{"id":1144,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"8987:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":1145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8990:22:8","memberName":"facetFunctionSelectors","nodeType":"MemberAccess","referencedDeclaration":489,"src":"8987:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$479_storage_$","typeString":"mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"}},"id":1147,"indexExpression":{"id":1146,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"9013:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8987:40:8","typeDescriptions":{"typeIdentifier":"t_struct$_FacetFunctionSelectors_$479_storage","typeString":"struct LibDiamond.FacetFunctionSelectors storage ref"}},"id":1148,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9028:20:8","memberName":"facetAddressPosition","nodeType":"MemberAccess","referencedDeclaration":478,"src":"8987:61:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8956:92:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1150,"name":"facetAddressPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"9066:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1151,"name":"lastFacetAddressPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"9090:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9066:48:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1178,"nodeType":"IfStatement","src":"9062:338:8","trueBody":{"id":1177,"nodeType":"Block","src":"9116:284:8","statements":[{"assignments":[1154],"declarations":[{"constant":false,"id":1154,"mutability":"mutable","name":"lastFacetAddress","nameLocation":"9142:16:8","nodeType":"VariableDeclaration","scope":1177,"src":"9134:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1153,"name":"address","nodeType":"ElementaryTypeName","src":"9134:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1159,"initialValue":{"baseExpression":{"expression":{"id":1155,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"9161:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":1156,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9164:14:8","memberName":"facetAddresses","nodeType":"MemberAccess","referencedDeclaration":492,"src":"9161:17:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1158,"indexExpression":{"id":1157,"name":"lastFacetAddressPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"9179:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9161:43:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9134:70:8"},{"expression":{"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1160,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"9222:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":1163,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9225:14:8","memberName":"facetAddresses","nodeType":"MemberAccess","referencedDeclaration":492,"src":"9222:17:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1164,"indexExpression":{"id":1162,"name":"facetAddressPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"9240:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9222:39:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1165,"name":"lastFacetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"9264:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9222:58:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1167,"nodeType":"ExpressionStatement","src":"9222:58:8"},{"expression":{"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":1168,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"9298:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":1171,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9301:22:8","memberName":"facetFunctionSelectors","nodeType":"MemberAccess","referencedDeclaration":489,"src":"9298:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$479_storage_$","typeString":"mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"}},"id":1172,"indexExpression":{"id":1170,"name":"lastFacetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"9324:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9298:43:8","typeDescriptions":{"typeIdentifier":"t_struct$_FacetFunctionSelectors_$479_storage","typeString":"struct LibDiamond.FacetFunctionSelectors storage ref"}},"id":1173,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9342:20:8","memberName":"facetAddressPosition","nodeType":"MemberAccess","referencedDeclaration":478,"src":"9298:64:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1174,"name":"facetAddressPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"9365:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9298:87:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1176,"nodeType":"ExpressionStatement","src":"9298:87:8"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":1179,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"9413:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":1182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9416:14:8","memberName":"facetAddresses","nodeType":"MemberAccess","referencedDeclaration":492,"src":"9413:17:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9431:3:8","memberName":"pop","nodeType":"MemberAccess","src":"9413:21:8","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9413:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1185,"nodeType":"ExpressionStatement","src":"9413:23:8"},{"expression":{"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"9450:68:8","subExpression":{"expression":{"baseExpression":{"expression":{"id":1186,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"9457:2:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":1187,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9460:22:8","memberName":"facetFunctionSelectors","nodeType":"MemberAccess","referencedDeclaration":489,"src":"9457:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$479_storage_$","typeString":"mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"}},"id":1189,"indexExpression":{"id":1188,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"9483:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9457:40:8","typeDescriptions":{"typeIdentifier":"t_struct$_FacetFunctionSelectors_$479_storage","typeString":"struct LibDiamond.FacetFunctionSelectors storage ref"}},"id":1190,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9498:20:8","memberName":"facetAddressPosition","nodeType":"MemberAccess","referencedDeclaration":478,"src":"9457:61:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1192,"nodeType":"ExpressionStatement","src":"9450:68:8"}]}}]},"id":1196,"implemented":true,"kind":"function","modifiers":[],"name":"removeFunction","nameLocation":"7354:14:8","nodeType":"FunctionDefinition","parameters":{"id":1037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"mutability":"mutable","name":"ds","nameLocation":"7392:2:8","nodeType":"VariableDeclaration","scope":1196,"src":"7369:25:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"},"typeName":{"id":1031,"nodeType":"UserDefinedTypeName","pathNode":{"id":1030,"name":"DiamondStorage","nameLocations":["7369:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":499,"src":"7369:14:8"},"referencedDeclaration":499,"src":"7369:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$499_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"}},"visibility":"internal"},{"constant":false,"id":1034,"mutability":"mutable","name":"_facetAddress","nameLocation":"7404:13:8","nodeType":"VariableDeclaration","scope":1196,"src":"7396:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1033,"name":"address","nodeType":"ElementaryTypeName","src":"7396:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1036,"mutability":"mutable","name":"_selector","nameLocation":"7426:9:8","nodeType":"VariableDeclaration","scope":1196,"src":"7419:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1035,"name":"bytes4","nodeType":"ElementaryTypeName","src":"7419:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"7368:68:8"},"returnParameters":{"id":1038,"nodeType":"ParameterList","parameters":[],"src":"7446:0:8"},"scope":1293,"src":"7345:2190:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1272,"nodeType":"Block","src":"9619:793:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1203,"name":"_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"9633:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9650:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9642:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1204,"name":"address","nodeType":"ElementaryTypeName","src":"9642:7:8","typeDescriptions":{}}},"id":1207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9642:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9633:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1270,"nodeType":"Block","src":"9779:627:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1219,"name":"_calldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"9801:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9811:6:8","memberName":"length","nodeType":"MemberAccess","src":"9801:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9820:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9801:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d70747920627574205f696e6974206973206e6f742061646472657373283029","id":1223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9823:63:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_868d165ec2461661b624442252aed6a645399bfae7b60083a77ea1b61b084042","typeString":"literal_string \"LibDiamondCut: _calldata is empty but _init is not address(0)\""},"value":"LibDiamondCut: _calldata is empty but _init is not address(0)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_868d165ec2461661b624442252aed6a645399bfae7b60083a77ea1b61b084042","typeString":"literal_string \"LibDiamondCut: _calldata is empty but _init is not address(0)\""}],"id":1218,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9793:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9793:94:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1225,"nodeType":"ExpressionStatement","src":"9793:94:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1226,"name":"_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"9905:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":1229,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9922:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_LibDiamond_$1293","typeString":"library LibDiamond"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LibDiamond_$1293","typeString":"library LibDiamond"}],"id":1228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9914:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1227,"name":"address","nodeType":"ElementaryTypeName","src":"9914:7:8","typeDescriptions":{}}},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9914:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9905:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1238,"nodeType":"IfStatement","src":"9901:134:8","trueBody":{"id":1237,"nodeType":"Block","src":"9929:106:8","statements":[{"expression":{"arguments":[{"id":1233,"name":"_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"9970:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f6465","id":1234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9977:42:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_460f8f0920c649146ef02741816b1cf9ce4f02ea288ceb73adf027cefe9069a0","typeString":"literal_string \"LibDiamondCut: _init address has no code\""},"value":"LibDiamondCut: _init address has no code"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_460f8f0920c649146ef02741816b1cf9ce4f02ea288ceb73adf027cefe9069a0","typeString":"literal_string \"LibDiamondCut: _init address has no code\""}],"id":1232,"name":"enforceHasContractCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"9947:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory) view"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9947:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1236,"nodeType":"ExpressionStatement","src":"9947:73:8"}]}},{"assignments":[1240,1242],"declarations":[{"constant":false,"id":1240,"mutability":"mutable","name":"success","nameLocation":"10054:7:8","nodeType":"VariableDeclaration","scope":1270,"src":"10049:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1239,"name":"bool","nodeType":"ElementaryTypeName","src":"10049:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"error","nameLocation":"10076:5:8","nodeType":"VariableDeclaration","scope":1270,"src":"10063:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1241,"name":"bytes","nodeType":"ElementaryTypeName","src":"10063:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1247,"initialValue":{"arguments":[{"id":1245,"name":"_calldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"10104:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1243,"name":"_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"10085:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10091:12:8","memberName":"delegatecall","nodeType":"MemberAccess","src":"10085:18:8","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"10048:66:8"},{"condition":{"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10132:8:8","subExpression":{"id":1248,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"10133:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1269,"nodeType":"IfStatement","src":"10128:268:8","trueBody":{"id":1268,"nodeType":"Block","src":"10142:254:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1250,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"10164:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10170:6:8","memberName":"length","nodeType":"MemberAccess","src":"10164:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10179:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10164:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1266,"nodeType":"Block","src":"10293:89:8","statements":[{"expression":{"arguments":[{"hexValue":"4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e207265766572746564","id":1263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10322:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_080b2fe78815767d522290509c8fce2af708c8a54455ca1b0cc978c92822465d","typeString":"literal_string \"LibDiamondCut: _init function reverted\""},"value":"LibDiamondCut: _init function reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_080b2fe78815767d522290509c8fce2af708c8a54455ca1b0cc978c92822465d","typeString":"literal_string \"LibDiamondCut: _init function reverted\""}],"id":1262,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"10315:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10315:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1265,"nodeType":"ExpressionStatement","src":"10315:48:8"}]},"id":1267,"nodeType":"IfStatement","src":"10160:222:8","trueBody":{"id":1261,"nodeType":"Block","src":"10182:105:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1257,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"10261:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10254:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1255,"name":"string","nodeType":"ElementaryTypeName","src":"10254:6:8","typeDescriptions":{}}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10254:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1254,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"10247:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10247:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1260,"nodeType":"ExpressionStatement","src":"10247:21:8"}]}}]}}]},"id":1271,"nodeType":"IfStatement","src":"9629:777:8","trueBody":{"id":1217,"nodeType":"Block","src":"9654:119:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1210,"name":"_calldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"9676:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9686:6:8","memberName":"length","nodeType":"MemberAccess","src":"9676:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9696:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9676:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e644375743a205f696e69742069732061646472657373283029206275745f63616c6c64617461206973206e6f7420656d707479","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9699:62:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_046c761a688d1dc3c500562bc5aaa3544f01f394f9bb3b69aa2a950a45afb1f8","typeString":"literal_string \"LibDiamondCut: _init is address(0) but_calldata is not empty\""},"value":"LibDiamondCut: _init is address(0) but_calldata is not empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_046c761a688d1dc3c500562bc5aaa3544f01f394f9bb3b69aa2a950a45afb1f8","typeString":"literal_string \"LibDiamondCut: _init is address(0) but_calldata is not empty\""}],"id":1209,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9668:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9668:94:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1216,"nodeType":"ExpressionStatement","src":"9668:94:8"}]}}]},"id":1273,"implemented":true,"kind":"function","modifiers":[],"name":"initializeDiamondCut","nameLocation":"9550:20:8","nodeType":"FunctionDefinition","parameters":{"id":1201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1198,"mutability":"mutable","name":"_init","nameLocation":"9579:5:8","nodeType":"VariableDeclaration","scope":1273,"src":"9571:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1197,"name":"address","nodeType":"ElementaryTypeName","src":"9571:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1200,"mutability":"mutable","name":"_calldata","nameLocation":"9599:9:8","nodeType":"VariableDeclaration","scope":1273,"src":"9586:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1199,"name":"bytes","nodeType":"ElementaryTypeName","src":"9586:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9570:39:8"},"returnParameters":{"id":1202,"nodeType":"ParameterList","parameters":[],"src":"9619:0:8"},"scope":1293,"src":"9541:871:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1291,"nodeType":"Block","src":"10512:167:8","statements":[{"assignments":[1281],"declarations":[{"constant":false,"id":1281,"mutability":"mutable","name":"contractSize","nameLocation":"10530:12:8","nodeType":"VariableDeclaration","scope":1291,"src":"10522:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1280,"name":"uint256","nodeType":"ElementaryTypeName","src":"10522:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1282,"nodeType":"VariableDeclarationStatement","src":"10522:20:8"},{"AST":{"nodeType":"YulBlock","src":"10561:62:8","statements":[{"nodeType":"YulAssignment","src":"10575:38:8","value":{"arguments":[{"name":"_contract","nodeType":"YulIdentifier","src":"10603:9:8"}],"functionName":{"name":"extcodesize","nodeType":"YulIdentifier","src":"10591:11:8"},"nodeType":"YulFunctionCall","src":"10591:22:8"},"variableNames":[{"name":"contractSize","nodeType":"YulIdentifier","src":"10575:12:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1275,"isOffset":false,"isSlot":false,"src":"10603:9:8","valueSize":1},{"declaration":1281,"isOffset":false,"isSlot":false,"src":"10575:12:8","valueSize":1}],"id":1283,"nodeType":"InlineAssembly","src":"10552:71:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1285,"name":"contractSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"10640:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10640:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1288,"name":"_errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"10658:13:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1284,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10632:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10632:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1290,"nodeType":"ExpressionStatement","src":"10632:40:8"}]},"id":1292,"implemented":true,"kind":"function","modifiers":[],"name":"enforceHasContractCode","nameLocation":"10427:22:8","nodeType":"FunctionDefinition","parameters":{"id":1278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1275,"mutability":"mutable","name":"_contract","nameLocation":"10458:9:8","nodeType":"VariableDeclaration","scope":1292,"src":"10450:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1274,"name":"address","nodeType":"ElementaryTypeName","src":"10450:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1277,"mutability":"mutable","name":"_errorMessage","nameLocation":"10483:13:8","nodeType":"VariableDeclaration","scope":1292,"src":"10469:27:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1276,"name":"string","nodeType":"ElementaryTypeName","src":"10469:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10449:48:8"},"returnParameters":{"id":1279,"nodeType":"ParameterList","parameters":[],"src":"10512:0:8"},"scope":1293,"src":"10418:261:8","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1294,"src":"423:10258:8","usedErrors":[]}],"src":"32:10650:8"},"id":8}},"contracts":{"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/ILeafWalletRegistryActivate.sol":{"ILeafWalletRegistryActivate":{"abi":[{"inputs":[{"internalType":"address","name":"assignee","type":"address"}],"name":"assignActivatableAddressToSender","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getActivationCodeOfSender","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeviceOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRelatedDevices","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isSenderRegistered","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"assignActivatableAddressToSender(address)":"ec949297","getActivationCodeOfSender()":"58944eb8","getDeviceOwner()":"9b8ae375","getRelatedDevices()":"e0f64efc","isSenderRegistered()":"3aafa388"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assignee\",\"type\":\"address\"}],\"name\":\"assignActivatableAddressToSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActivationCodeOfSender\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeviceOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRelatedDevices\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSenderRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ILeafWalletRegistryActivate.sol\":\"ILeafWalletRegistryActivate\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/ILeafWalletRegistryActivate.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\nimport \\\"./ILeafWalletRegistryCore.sol\\\";\\r\\n\\r\\ninterface ILeafWalletRegistryActivate is ILeafWalletRegistryCore{\\r\\n    function assignActivatableAddressToSender(address assignee)  external;\\r\\n    function getActivationCodeOfSender() external view returns (uint256);\\r\\n}\",\"keccak256\":\"0x822f13bd8b0d72f4d88a6824ddc6114eb682e6b183aa0f2367ae4cc3a25edcf2\",\"license\":\"MIT\"},\"contracts/ILeafWalletRegistryCore.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\ninterface ILeafWalletRegistryCore {\\r\\n    function isSenderRegistered() external view returns (bool);\\r\\n    function getDeviceOwner() external view returns (address);\\r\\n    function getRelatedDevices() external view returns (address[] memory);\\r\\n}\",\"keccak256\":\"0x3c21ce0ba8cfdd89401a502d15673006dbd41aeee58211c53fc33c2e187adbec\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/ILeafWalletRegistryCore.sol":{"ILeafWalletRegistryCore":{"abi":[{"inputs":[],"name":"getDeviceOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRelatedDevices","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isSenderRegistered","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getDeviceOwner()":"9b8ae375","getRelatedDevices()":"e0f64efc","isSenderRegistered()":"3aafa388"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getDeviceOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRelatedDevices\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSenderRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ILeafWalletRegistryCore.sol\":\"ILeafWalletRegistryCore\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/ILeafWalletRegistryCore.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\ninterface ILeafWalletRegistryCore {\\r\\n    function isSenderRegistered() external view returns (bool);\\r\\n    function getDeviceOwner() external view returns (address);\\r\\n    function getRelatedDevices() external view returns (address[] memory);\\r\\n}\",\"keccak256\":\"0x3c21ce0ba8cfdd89401a502d15673006dbd41aeee58211c53fc33c2e187adbec\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/LeafWalletRegistryActivate.sol":{"LeafWalletRegistryActivate":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"","type":"uint256"}],"name":"AssignActivatableAddressToSenderReturn","type":"event"},{"inputs":[{"internalType":"address","name":"assignee","type":"address"}],"name":"assignActivatableAddressToSender","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getActivationCodeOfSender","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeviceOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRelatedDevices","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isSenderRegistered","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523461001657610534908161001c8239f35b600080fdfe60806040908082526004918236101561001757600080fd5b600091823560e01c9081633aafa388146104a25750806358944eb8146103ea5780639b8ae375146103ac578063e0f64efc146102ae5763ec9492971461005c57600080fd5b346102aa57602090816003193601126102a65783356001600160a01b03808216908183036102a2578186526000805160206104df833981519152908186528085882054168015908115610298575b5015610255578287528186528487205416156101ae575b505081518381019042825244848201523360601b6060820152605481526080810181811067ffffffffffffffff82111761019b5784525190206064900694600a8610610172575b5090846101697f4194273a0171865880e1d7a0089dcb6cfe51ce239b09acde0bf6cc5e071210b095969360018060a01b03166000527f83ed3ba29c1d52058c877df3ebd264cf957c42ef7764387349be0ccf6df0b63d602052604060002090565b5551908152a180f35b94600a8101809111610188579450610169610108565b634e487b7160e01b855260118652602485fd5b634e487b7160e01b875260418852602487fd5b3360009081527f83ed3ba29c1d52058c877df3ebd264cf957c42ef7764387349be0ccf6df0b63c6020526040902080549068010000000000000000821015610242576001820180825582101561022f5787528587200180546001600160a01b03199081168417909155918652845282852080549091163317905538806100c1565b634e487b7160e01b885260328952602488fd5b634e487b7160e01b885260418952602488fd5b845162461bcd60e51b8152808901879052601960248201527f44657669636520616c72656164792072656769737465726564000000000000006044820152606490fd5b90503314386100aa565b8580fd5b8280fd5b5080fd5b50346102aa57816003193601126102aa573360009081527f83ed3ba29c1d52058c877df3ebd264cf957c42ef7764387349be0ccf6df0b63c6020526040902091815190819284548084526020809401908196845284842090845b8682821061038f5750505050849003601f01601f191684019567ffffffffffffffff87118588101761037c575085815282865292518583018190528594938501939290915b82811061035c57505050500390f35b83516001600160a01b03168552869550938101939281019260010161034d565b634e487b7160e01b835260419052602482fd5b83546001600160a01b031685529093019260019283019201610308565b50346102aa57816003193601126102aa573382526000805160206104df8339815191526020908152918190205490516001600160a01b039091168152f35b5091903461049f578060031936011261049f573381526000805160206104df833981519152602052829020546001600160a01b03161561045d573360009081527f83ed3ba29c1d52058c877df3ebd264cf957c42ef7764387349be0ccf6df0b63d60209081526040909120548351908152f35b6020606492519162461bcd60e51b8352820152601960248201527f446576696365206e6f74207965742072656769737465726564000000000000006044820152fd5b80fd5b919050346102a657826003193601126102a6573383526000805160206104df83398151915260209081529220546001600160a01b031615158152f3fe83ed3ba29c1d52058c877df3ebd264cf957c42ef7764387349be0ccf6df0b63ba26469706673582212207b93c332acc661116936bcddebb85b4194e5f8c8bb9436da6697c10362cb29e664736f6c63430008120033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x534 SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x3AAFA388 EQ PUSH2 0x4A2 JUMPI POP DUP1 PUSH4 0x58944EB8 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0x9B8AE375 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0xE0F64EFC EQ PUSH2 0x2AE JUMPI PUSH4 0xEC949297 EQ PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A6 JUMPI DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP1 DUP2 DUP4 SUB PUSH2 0x2A2 JUMPI DUP2 DUP7 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP2 DUP7 MSTORE DUP1 DUP6 DUP9 KECCAK256 SLOAD AND DUP1 ISZERO SWAP1 DUP2 ISZERO PUSH2 0x298 JUMPI JUMPDEST POP ISZERO PUSH2 0x255 JUMPI DUP3 DUP8 MSTORE DUP2 DUP7 MSTORE DUP5 DUP8 KECCAK256 SLOAD AND ISZERO PUSH2 0x1AE JUMPI JUMPDEST POP POP DUP2 MLOAD DUP4 DUP2 ADD SWAP1 TIMESTAMP DUP3 MSTORE PREVRANDAO DUP5 DUP3 ADD MSTORE CALLER PUSH1 0x60 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x54 DUP2 MSTORE PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x19B JUMPI DUP5 MSTORE MLOAD SWAP1 KECCAK256 PUSH1 0x64 SWAP1 MOD SWAP5 PUSH1 0xA DUP7 LT PUSH2 0x172 JUMPI JUMPDEST POP SWAP1 DUP5 PUSH2 0x169 PUSH32 0x4194273A0171865880E1D7A0089DCB6CFE51CE239B09ACDE0BF6CC5E071210B0 SWAP6 SWAP7 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH32 0x83ED3BA29C1D52058C877DF3EBD264CF957C42EF7764387349BE0CCF6DF0B63D PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST SWAP5 PUSH1 0xA DUP2 ADD DUP1 SWAP2 GT PUSH2 0x188 JUMPI SWAP5 POP PUSH2 0x169 PUSH2 0x108 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 DUP7 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 DUP9 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x83ED3BA29C1D52058C877DF3EBD264CF957C42EF7764387349BE0CCF6DF0B63C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x242 JUMPI PUSH1 0x1 DUP3 ADD DUP1 DUP3 SSTORE DUP3 LT ISZERO PUSH2 0x22F JUMPI DUP8 MSTORE DUP6 DUP8 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP2 DUP7 MSTORE DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND CALLER OR SWAP1 SSTORE CODESIZE DUP1 PUSH2 0xC1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x32 DUP10 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 DUP10 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP8 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44657669636520616C7265616479207265676973746572656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP CALLER EQ CODESIZE PUSH2 0xAA JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2AA JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2AA JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x83ED3BA29C1D52058C877DF3EBD264CF957C42EF7764387349BE0CCF6DF0B63C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 DUP2 MLOAD SWAP1 DUP2 SWAP3 DUP5 SLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 SWAP5 ADD SWAP1 DUP2 SWAP7 DUP5 MSTORE DUP5 DUP5 KECCAK256 SWAP1 DUP5 JUMPDEST DUP7 DUP3 DUP3 LT PUSH2 0x38F JUMPI POP POP POP POP DUP5 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP5 ADD SWAP6 PUSH8 0xFFFFFFFFFFFFFFFF DUP8 GT DUP6 DUP9 LT OR PUSH2 0x37C JUMPI POP DUP6 DUP2 MSTORE DUP3 DUP7 MSTORE SWAP3 MLOAD DUP6 DUP4 ADD DUP2 SWAP1 MSTORE DUP6 SWAP5 SWAP4 DUP6 ADD SWAP4 SWAP3 SWAP1 SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x35C JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x34D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x308 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2AA JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2AA JUMPI CALLER DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x49F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x49F JUMPI CALLER DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE DUP3 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x45D JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x83ED3BA29C1D52058C877DF3EBD264CF957C42EF7764387349BE0CCF6DF0B63D PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD DUP4 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446576696365206E6F7420796574207265676973746572656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x2A6 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A6 JUMPI CALLER DUP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO DUP2 MSTORE RETURN INVALID DUP4 0xED EXTCODESIZE LOG2 SWAP13 SAR MSTORE SDIV DUP13 DUP8 PUSH30 0xF3EBD264CF957C42EF7764387349BE0CCF6DF0B63BA26469706673582212 KECCAK256 PUSH28 0x93C332ACC661116936BCDDEBB85B4194E5F8C8BB9436DA6697C10362 0xCB 0x29 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"225:993:3:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address_4288":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60806040908082526004918236101561001757600080fd5b600091823560e01c9081633aafa388146104a25750806358944eb8146103ea5780639b8ae375146103ac578063e0f64efc146102ae5763ec9492971461005c57600080fd5b346102aa57602090816003193601126102a65783356001600160a01b03808216908183036102a2578186526000805160206104df833981519152908186528085882054168015908115610298575b5015610255578287528186528487205416156101ae575b505081518381019042825244848201523360601b6060820152605481526080810181811067ffffffffffffffff82111761019b5784525190206064900694600a8610610172575b5090846101697f4194273a0171865880e1d7a0089dcb6cfe51ce239b09acde0bf6cc5e071210b095969360018060a01b03166000527f83ed3ba29c1d52058c877df3ebd264cf957c42ef7764387349be0ccf6df0b63d602052604060002090565b5551908152a180f35b94600a8101809111610188579450610169610108565b634e487b7160e01b855260118652602485fd5b634e487b7160e01b875260418852602487fd5b3360009081527f83ed3ba29c1d52058c877df3ebd264cf957c42ef7764387349be0ccf6df0b63c6020526040902080549068010000000000000000821015610242576001820180825582101561022f5787528587200180546001600160a01b03199081168417909155918652845282852080549091163317905538806100c1565b634e487b7160e01b885260328952602488fd5b634e487b7160e01b885260418952602488fd5b845162461bcd60e51b8152808901879052601960248201527f44657669636520616c72656164792072656769737465726564000000000000006044820152606490fd5b90503314386100aa565b8580fd5b8280fd5b5080fd5b50346102aa57816003193601126102aa573360009081527f83ed3ba29c1d52058c877df3ebd264cf957c42ef7764387349be0ccf6df0b63c6020526040902091815190819284548084526020809401908196845284842090845b8682821061038f5750505050849003601f01601f191684019567ffffffffffffffff87118588101761037c575085815282865292518583018190528594938501939290915b82811061035c57505050500390f35b83516001600160a01b03168552869550938101939281019260010161034d565b634e487b7160e01b835260419052602482fd5b83546001600160a01b031685529093019260019283019201610308565b50346102aa57816003193601126102aa573382526000805160206104df8339815191526020908152918190205490516001600160a01b039091168152f35b5091903461049f578060031936011261049f573381526000805160206104df833981519152602052829020546001600160a01b03161561045d573360009081527f83ed3ba29c1d52058c877df3ebd264cf957c42ef7764387349be0ccf6df0b63d60209081526040909120548351908152f35b6020606492519162461bcd60e51b8352820152601960248201527f446576696365206e6f74207965742072656769737465726564000000000000006044820152fd5b80fd5b919050346102a657826003193601126102a6573383526000805160206104df83398151915260209081529220546001600160a01b031615158152f3fe83ed3ba29c1d52058c877df3ebd264cf957c42ef7764387349be0ccf6df0b63ba26469706673582212207b93c332acc661116936bcddebb85b4194e5f8c8bb9436da6697c10362cb29e664736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x3AAFA388 EQ PUSH2 0x4A2 JUMPI POP DUP1 PUSH4 0x58944EB8 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0x9B8AE375 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0xE0F64EFC EQ PUSH2 0x2AE JUMPI PUSH4 0xEC949297 EQ PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A6 JUMPI DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP1 DUP2 DUP4 SUB PUSH2 0x2A2 JUMPI DUP2 DUP7 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP2 DUP7 MSTORE DUP1 DUP6 DUP9 KECCAK256 SLOAD AND DUP1 ISZERO SWAP1 DUP2 ISZERO PUSH2 0x298 JUMPI JUMPDEST POP ISZERO PUSH2 0x255 JUMPI DUP3 DUP8 MSTORE DUP2 DUP7 MSTORE DUP5 DUP8 KECCAK256 SLOAD AND ISZERO PUSH2 0x1AE JUMPI JUMPDEST POP POP DUP2 MLOAD DUP4 DUP2 ADD SWAP1 TIMESTAMP DUP3 MSTORE PREVRANDAO DUP5 DUP3 ADD MSTORE CALLER PUSH1 0x60 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x54 DUP2 MSTORE PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x19B JUMPI DUP5 MSTORE MLOAD SWAP1 KECCAK256 PUSH1 0x64 SWAP1 MOD SWAP5 PUSH1 0xA DUP7 LT PUSH2 0x172 JUMPI JUMPDEST POP SWAP1 DUP5 PUSH2 0x169 PUSH32 0x4194273A0171865880E1D7A0089DCB6CFE51CE239B09ACDE0BF6CC5E071210B0 SWAP6 SWAP7 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH32 0x83ED3BA29C1D52058C877DF3EBD264CF957C42EF7764387349BE0CCF6DF0B63D PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST SWAP5 PUSH1 0xA DUP2 ADD DUP1 SWAP2 GT PUSH2 0x188 JUMPI SWAP5 POP PUSH2 0x169 PUSH2 0x108 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 DUP7 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 DUP9 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x83ED3BA29C1D52058C877DF3EBD264CF957C42EF7764387349BE0CCF6DF0B63C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x242 JUMPI PUSH1 0x1 DUP3 ADD DUP1 DUP3 SSTORE DUP3 LT ISZERO PUSH2 0x22F JUMPI DUP8 MSTORE DUP6 DUP8 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP2 DUP7 MSTORE DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND CALLER OR SWAP1 SSTORE CODESIZE DUP1 PUSH2 0xC1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x32 DUP10 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 DUP10 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP8 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44657669636520616C7265616479207265676973746572656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP CALLER EQ CODESIZE PUSH2 0xAA JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2AA JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2AA JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x83ED3BA29C1D52058C877DF3EBD264CF957C42EF7764387349BE0CCF6DF0B63C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 DUP2 MLOAD SWAP1 DUP2 SWAP3 DUP5 SLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 SWAP5 ADD SWAP1 DUP2 SWAP7 DUP5 MSTORE DUP5 DUP5 KECCAK256 SWAP1 DUP5 JUMPDEST DUP7 DUP3 DUP3 LT PUSH2 0x38F JUMPI POP POP POP POP DUP5 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP5 ADD SWAP6 PUSH8 0xFFFFFFFFFFFFFFFF DUP8 GT DUP6 DUP9 LT OR PUSH2 0x37C JUMPI POP DUP6 DUP2 MSTORE DUP3 DUP7 MSTORE SWAP3 MLOAD DUP6 DUP4 ADD DUP2 SWAP1 MSTORE DUP6 SWAP5 SWAP4 DUP6 ADD SWAP4 SWAP3 SWAP1 SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x35C JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x34D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x308 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2AA JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2AA JUMPI CALLER DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x49F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x49F JUMPI CALLER DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE DUP3 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x45D JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x83ED3BA29C1D52058C877DF3EBD264CF957C42EF7764387349BE0CCF6DF0B63D PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD DUP4 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446576696365206E6F7420796574207265676973746572656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x2A6 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A6 JUMPI CALLER DUP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO DUP2 MSTORE RETURN INVALID DUP4 0xED EXTCODESIZE LOG2 SWAP13 SAR MSTORE SDIV DUP13 DUP8 PUSH30 0xF3EBD264CF957C42EF7764387349BE0CCF6DF0B63BA26469706673582212 KECCAK256 PUSH28 0x93C332ACC661116936BCDDEBB85B4194E5F8C8BB9436DA6697C10362 0xCB 0x29 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"225:993:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;225:993:3;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;225:993:3;;;;;;;;;;395:39:4;;:82;;;;;225:993:3;;;;;;;;;;;;;;;;527:39:4;524:166;;225:993:3;;;;;622:63;;;639:15;;225:993;;656:16;225:993;;;;674:10;225:993;;;;;;622:63;;;225:993;;;;;;;;;;;;;;;612:74;;690:3;225:993;;;722:2;707:17;;704:82;;225:993;796:35;;;;868:54;796:35;;;225:993;;;;;;;;1166:25;225:993;;;;;;;796:35;225:993;;;;;868:54;225:993;;704:82;225:993;722:2;225:993;;;;;;;740:34;-1:-1:-1;796:35:3;704:82;;225:993;-1:-1:-1;;;225:993:3;;;;;;;;;-1:-1:-1;;;225:993:3;;;;;;;;524:166:4;599:10;225:993:3;;;;1207:16:4;225:993:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;225:993:3;;;;;;;;;;;;;;;;;;;;;599:10:4;225:993:3;;;524:166:4;;;;225:993:3;-1:-1:-1;;;225:993:3;;;;;;;;;-1:-1:-1;;;225:993:3;;;;;;;;;;;-1:-1:-1;;;225:993:3;;;;;;;;;;;;;;;;;;;;;395:82:4;467:10;;;438:39;395:82;;;225:993:3;;;;;;;;;;;;;;;;;;;;;;;;;1224:10:4;225:993:3;;;;1207:16:4;225:993:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;225:993:3;;;;;-1:-1:-1;;225:993:3;;;;;;;;;;;;;-1:-1:-1;225:993:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;225:993:3;;;;;-1:-1:-1;225:993:3;;;;;;;;1207:16:4;225:993:3;;;;-1:-1:-1;;;225:993:3;;;;;;;;;;;-1:-1:-1;;;;;225:993:3;;;;;;;1207:16:4;225:993:3;;;;;;;;;;;;;;;;;;;;1039:10:4;225:993:3;;-1:-1:-1;;;;;;;;;;;225:993:3;;;;;;;;;;;-1:-1:-1;;;;;225:993:3;;;;;;;;;;;;;;;;;;;;;1094:10;225:993;;-1:-1:-1;;;;;;;;;;;225:993:3;;;;;;-1:-1:-1;;;;;225:993:3;1078:41;225:993;;1094:10;225:993;;;;1166:25;225:993;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;853:10:4;225:993:3;;-1:-1:-1;;;;;;;;;;;225:993:3;;;;;;;-1:-1:-1;;;;;225:993:3;837:41:4;;225:993:3;;"},"gasEstimates":{"creation":{"codeDepositCost":"266400","executionCost":"313","totalCost":"266713"},"external":{"assignActivatableAddressToSender(address)":"infinite","getActivationCodeOfSender()":"infinite","getDeviceOwner()":"infinite","getRelatedDevices()":"infinite","isSenderRegistered()":"2392"}},"methodIdentifiers":{"assignActivatableAddressToSender(address)":"ec949297","getActivationCodeOfSender()":"58944eb8","getDeviceOwner()":"9b8ae375","getRelatedDevices()":"e0f64efc","isSenderRegistered()":"3aafa388"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"AssignActivatableAddressToSenderReturn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assignee\",\"type\":\"address\"}],\"name\":\"assignActivatableAddressToSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActivationCodeOfSender\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeviceOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRelatedDevices\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSenderRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LeafWalletRegistryActivate.sol\":\"LeafWalletRegistryActivate\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/ILeafWalletRegistryActivate.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\nimport \\\"./ILeafWalletRegistryCore.sol\\\";\\r\\n\\r\\ninterface ILeafWalletRegistryActivate is ILeafWalletRegistryCore{\\r\\n    function assignActivatableAddressToSender(address assignee)  external;\\r\\n    function getActivationCodeOfSender() external view returns (uint256);\\r\\n}\",\"keccak256\":\"0x822f13bd8b0d72f4d88a6824ddc6114eb682e6b183aa0f2367ae4cc3a25edcf2\",\"license\":\"MIT\"},\"contracts/ILeafWalletRegistryCore.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\ninterface ILeafWalletRegistryCore {\\r\\n    function isSenderRegistered() external view returns (bool);\\r\\n    function getDeviceOwner() external view returns (address);\\r\\n    function getRelatedDevices() external view returns (address[] memory);\\r\\n}\",\"keccak256\":\"0x3c21ce0ba8cfdd89401a502d15673006dbd41aeee58211c53fc33c2e187adbec\",\"license\":\"MIT\"},\"contracts/LeafWalletRegistryActivate.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\nimport \\\"./ILeafWalletRegistryActivate.sol\\\";\\r\\nimport \\\"./LeafWalletRegistryCore.sol\\\";\\r\\nimport {LeafWalletStorage,StorageHandler} from  \\\"./SusuwatariStorage.sol\\\";\\r\\n\\r\\ncontract LeafWalletRegistryActivate is ILeafWalletRegistryActivate, LeafWalletRegistryCore  {\\r\\n    event AssignActivatableAddressToSenderReturn(uint256);\\r\\n    \\r\\n\\r\\n    function assignActivatableAddressToSender(address assignee) public virtual override{\\r\\n        LeafWalletStorage storage lw = lw();\\r\\n        _assignAddressToSender(assignee);\\r\\n\\r\\n\\r\\n        uint256 activationCode = uint256(keccak256(abi.encodePacked(block.timestamp, block.prevrandao, msg.sender))) % 100;\\r\\n        if(activationCode<10){\\r\\n            activationCode = activationCode+10;\\r\\n        }\\r\\n        lw._deviceActivationCodes[assignee] = activationCode;\\r\\n\\r\\n\\r\\n        emit AssignActivatableAddressToSenderReturn(activationCode);\\r\\n    }\\r\\n\\r\\n    function getActivationCodeOfSender() public view override returns (uint256){\\r\\n        LeafWalletStorage storage lw = lw();\\r\\n        require(lw._deviceOwner[msg.sender] != address(0),\\\"Device not yet registered\\\");\\r\\n        return lw._deviceActivationCodes[msg.sender];\\r\\n    }\\r\\n\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n    \",\"keccak256\":\"0x9199e4fb9795851bfd7c748e5d4b8d4c33d87cf197223c3a554f7fc4ae2ce78b\",\"license\":\"MIT\"},\"contracts/LeafWalletRegistryCore.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\nimport \\\"./ILeafWalletRegistryCore.sol\\\";\\r\\nimport {LeafWalletStorage,StorageHandler} from  \\\"./SusuwatariStorage.sol\\\";\\r\\n\\r\\ncontract LeafWalletRegistryCore is ILeafWalletRegistryCore,StorageHandler {\\r\\n\\r\\n    \\r\\n\\r\\n    function _assignAddressToSender(address assignee) internal{\\r\\n        LeafWalletStorage storage lw = lw();\\r\\n        require(lw._deviceOwner[assignee] == address(0) || lw._deviceOwner[assignee] == msg.sender,\\\"Device already registered\\\");\\r\\n     \\r\\n        if(lw._deviceOwner[assignee] == address(0)){\\r\\n            lw._ownerDevices[msg.sender].push(assignee);\\r\\n            lw._deviceOwner[assignee] = msg.sender;\\r\\n        }\\r\\n    }\\r\\n\\r\\n\\r\\n    function isSenderRegistered() public view override returns (bool) {\\r\\n        LeafWalletStorage storage lw = lw();\\r\\n        return lw._deviceOwner[msg.sender] != address(0);\\r\\n    }\\r\\n\\r\\n    function getDeviceOwner() public view override returns (address) {\\r\\n        LeafWalletStorage storage lw = lw();\\r\\n        return lw._deviceOwner[msg.sender];\\r\\n    }\\r\\n\\r\\n    function getRelatedDevices() public view override returns (address[] memory) {\\r\\n        LeafWalletStorage storage lw = lw();\\r\\n        return lw._ownerDevices[msg.sender];\\r\\n    }\\r\\n\\r\\n\\r\\n    \\r\\n\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n    \",\"keccak256\":\"0xff10bf2d25fd7de2410411975b7ac4a8bdb2c829a94b91fbed4426a44a65438b\",\"license\":\"MIT\"},\"contracts/SusuwatariStorage.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\nimport {LibDiamond} from \\\"hardhat-deploy/solc_0.8/diamond/libraries/LibDiamond.sol\\\";\\r\\n\\r\\nbytes32 constant SUSUWATARI_STORAGE_POSITION = keccak256(\\\"susuwatari.contract.storage\\\");\\r\\nbytes32 constant LEAFWALLET_STORAGE_POSITION = keccak256(\\\"leafwallet.contract.storage\\\");\\r\\n\\r\\nstruct OwnableStorage {\\r\\n\\r\\n    address _owner;\\r\\n}\\r\\n\\r\\nstruct SusuwatariStorage {\\r\\n    \\r\\n\\r\\n  bool isInitialized;\\r\\n}\\r\\n\\r\\nstruct LeafWalletStorage {\\r\\n    mapping(address => address) _deviceOwner;\\r\\n    mapping(address => address[]) _ownerDevices;\\r\\n    mapping(address => uint256) _deviceActivationCodes;\\r\\n}\\r\\n\\r\\ncontract StorageHandler {\\r\\n    function susu() internal pure returns (SusuwatariStorage storage cs) {\\r\\n        bytes32 position = SUSUWATARI_STORAGE_POSITION;\\r\\n        assembly {\\r\\n           cs.slot := position\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function os() internal pure returns (OwnableStorage storage cs) {\\r\\n        bytes32 position = keccak256(\\\"ownable.contract.storage\\\");\\r\\n        assembly {\\r\\n           cs.slot := position\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    function ds() internal pure returns (LibDiamond.DiamondStorage storage) {\\r\\n        return LibDiamond.diamondStorage();\\r\\n    }\\r\\n\\r\\n    \\r\\n    function lw() internal pure returns (LeafWalletStorage storage cs) {\\r\\n        bytes32 position = keccak256(\\\"leafwallet.contract.storage\\\");\\r\\n        assembly {\\r\\n           cs.slot := position\\r\\n        }\\r\\n    }\\r\\n}\",\"keccak256\":\"0xdf2fb80f5b3fd1b3fbaa4481353d252834072978fd4eb242b4ab23f894bafd16\",\"license\":\"MIT\"},\"hardhat-deploy/solc_0.8/diamond/interfaces/IDiamondCut.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\ninterface IDiamondCut {\\n    enum FacetCutAction {Add, Replace, Remove}\\n    // Add=0, Replace=1, Remove=2\\n\\n    struct FacetCut {\\n        address facetAddress;\\n        FacetCutAction action;\\n        bytes4[] functionSelectors;\\n    }\\n\\n    /// @notice Add/replace/remove any number of functions and optionally execute\\n    ///         a function with delegatecall\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\n    /// @param _init The address of the contract or facet to execute _calldata\\n    /// @param _calldata A function call, including function selector and arguments\\n    ///                  _calldata is executed with delegatecall on _init\\n    function diamondCut(\\n        FacetCut[] calldata _diamondCut,\\n        address _init,\\n        bytes calldata _calldata\\n    ) external;\\n\\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\\n}\\n\",\"keccak256\":\"0xc00c16bfa30a3fa5f3dc684f7f8ba62c259962b25f647d9588739458989717fc\",\"license\":\"MIT\"},\"hardhat-deploy/solc_0.8/diamond/libraries/LibDiamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\nimport { IDiamondCut } from \\\"../interfaces/IDiamondCut.sol\\\";\\n\\nlibrary LibDiamond {\\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\\\"diamond.standard.diamond.storage\\\");\\n\\n    struct FacetAddressAndPosition {\\n        address facetAddress;\\n        uint96 functionSelectorPosition; // position in facetFunctionSelectors.functionSelectors array\\n    }\\n\\n    struct FacetFunctionSelectors {\\n        bytes4[] functionSelectors;\\n        uint256 facetAddressPosition; // position of facetAddress in facetAddresses array\\n    }\\n\\n    struct DiamondStorage {\\n        // maps function selector to the facet address and\\n        // the position of the selector in the facetFunctionSelectors.selectors array\\n        mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\\n        // maps facet addresses to function selectors\\n        mapping(address => FacetFunctionSelectors) facetFunctionSelectors;\\n        // facet addresses\\n        address[] facetAddresses;\\n        // Used to query if a contract implements an interface.\\n        // Used to implement ERC-165.\\n        mapping(bytes4 => bool) supportedInterfaces;\\n        // owner of the contract\\n        address contractOwner;\\n    }\\n\\n    function diamondStorage() internal pure returns (DiamondStorage storage ds) {\\n        bytes32 position = DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n    }\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    function setContractOwner(address _newOwner) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        address previousOwner = ds.contractOwner;\\n        ds.contractOwner = _newOwner;\\n        emit OwnershipTransferred(previousOwner, _newOwner);\\n    }\\n\\n    function contractOwner() internal view returns (address contractOwner_) {\\n        contractOwner_ = diamondStorage().contractOwner;\\n    }\\n\\n    function enforceIsContractOwner() internal view {\\n        require(msg.sender == diamondStorage().contractOwner, \\\"LibDiamond: Must be contract owner\\\");\\n    }\\n\\n    event DiamondCut(IDiamondCut.FacetCut[] _diamondCut, address _init, bytes _calldata);\\n\\n    // Internal function version of diamondCut\\n    function diamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        for (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\\n            IDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\\n            if (action == IDiamondCut.FacetCutAction.Add) {\\n                addFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Replace) {\\n                replaceFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Remove) {\\n                removeFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else {\\n                revert(\\\"LibDiamondCut: Incorrect FacetCutAction\\\");\\n            }\\n        }\\n        emit DiamondCut(_diamondCut, _init, _calldata);\\n        initializeDiamondCut(_init, _calldata);\\n    }\\n\\n    function addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();        \\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            addFacet(ds, _facetAddress);            \\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress == address(0), \\\"LibDiamondCut: Can't add function that already exists\\\");\\n            addFunction(ds, selector, selectorPosition, _facetAddress);\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            addFacet(ds, _facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress != _facetAddress, \\\"LibDiamondCut: Can't replace function with same function\\\");\\n            removeFunction(ds, oldFacetAddress, selector);\\n            addFunction(ds, selector, selectorPosition, _facetAddress);\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // if function does not exist then do nothing and return\\n        require(_facetAddress == address(0), \\\"LibDiamondCut: Remove facet address must be address(0)\\\");\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            removeFunction(ds, oldFacetAddress, selector);\\n        }\\n    }\\n\\n    function addFacet(DiamondStorage storage ds, address _facetAddress) internal {\\n        enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n        ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = ds.facetAddresses.length;\\n        ds.facetAddresses.push(_facetAddress);\\n    }    \\n\\n\\n    function addFunction(DiamondStorage storage ds, bytes4 _selector, uint96 _selectorPosition, address _facetAddress) internal {\\n        ds.selectorToFacetAndPosition[_selector].functionSelectorPosition = _selectorPosition;\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(_selector);\\n        ds.selectorToFacetAndPosition[_selector].facetAddress = _facetAddress;\\n    }\\n\\n    function removeFunction(DiamondStorage storage ds, address _facetAddress, bytes4 _selector) internal {        \\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Can't remove function that doesn't exist\\\");\\n        // an immutable function is a function defined directly in a diamond\\n        require(_facetAddress != address(this), \\\"LibDiamondCut: Can't remove immutable function\\\");\\n        // replace selector with last selector, then delete last selector\\n        uint256 selectorPosition = ds.selectorToFacetAndPosition[_selector].functionSelectorPosition;\\n        uint256 lastSelectorPosition = ds.facetFunctionSelectors[_facetAddress].functionSelectors.length - 1;\\n        // if not the same then replace _selector with lastSelector\\n        if (selectorPosition != lastSelectorPosition) {\\n            bytes4 lastSelector = ds.facetFunctionSelectors[_facetAddress].functionSelectors[lastSelectorPosition];\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors[selectorPosition] = lastSelector;\\n            ds.selectorToFacetAndPosition[lastSelector].functionSelectorPosition = uint96(selectorPosition);\\n        }\\n        // delete the last selector\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.pop();\\n        delete ds.selectorToFacetAndPosition[_selector];\\n\\n        // if no more selectors for facet address then delete the facet address\\n        if (lastSelectorPosition == 0) {\\n            // replace facet address with last facet address and delete last facet address\\n            uint256 lastFacetAddressPosition = ds.facetAddresses.length - 1;\\n            uint256 facetAddressPosition = ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n            if (facetAddressPosition != lastFacetAddressPosition) {\\n                address lastFacetAddress = ds.facetAddresses[lastFacetAddressPosition];\\n                ds.facetAddresses[facetAddressPosition] = lastFacetAddress;\\n                ds.facetFunctionSelectors[lastFacetAddress].facetAddressPosition = facetAddressPosition;\\n            }\\n            ds.facetAddresses.pop();\\n            delete ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n        }\\n    }\\n\\n    function initializeDiamondCut(address _init, bytes memory _calldata) internal {\\n        if (_init == address(0)) {\\n            require(_calldata.length == 0, \\\"LibDiamondCut: _init is address(0) but_calldata is not empty\\\");\\n        } else {\\n            require(_calldata.length > 0, \\\"LibDiamondCut: _calldata is empty but _init is not address(0)\\\");\\n            if (_init != address(this)) {\\n                enforceHasContractCode(_init, \\\"LibDiamondCut: _init address has no code\\\");\\n            }\\n            (bool success, bytes memory error) = _init.delegatecall(_calldata);\\n            if (!success) {\\n                if (error.length > 0) {\\n                    // bubble up the error\\n                    revert(string(error));\\n                } else {\\n                    revert(\\\"LibDiamondCut: _init function reverted\\\");\\n                }\\n            }\\n        }\\n    }\\n\\n    function enforceHasContractCode(address _contract, string memory _errorMessage) internal view {\\n        uint256 contractSize;\\n        assembly {\\n            contractSize := extcodesize(_contract)\\n        }\\n        require(contractSize > 0, _errorMessage);\\n    }\\n}\\n\",\"keccak256\":\"0x2205345e83eb86f5281f159a9215a096cb6d404782619f9b8e9d7a4a46c32a37\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/LeafWalletRegistryCore.sol":{"LeafWalletRegistryCore":{"abi":[{"inputs":[],"name":"getDeviceOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRelatedDevices","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isSenderRegistered","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608080604052346100165761021c908161001c8239f35b600080fdfe6080604090808252600436101561001557600080fd5b600090813560e01c9081633aafa38814610194575080639b8ae3751461013f5763e0f64efc1461004457600080fd5b3461013c578060031936011261013c573381526020907f83ed3ba29c1d52058c877df3ebd264cf957c42ef7764387349be0ccf6df0b63c825282812091835191828285549182815201908195835283832090835b8582821061011f5750505050839003601f01601f191683019467ffffffffffffffff86118487101761010b5785815282865292518583018190528594938501939290915b8281106100eb57505050500390f35b83516001600160a01b0316855286955093810193928101926001016100dc565b634e487b7160e01b82526041600452602482fd5b83546001600160a01b031685529093019260019283019201610098565b80fd5b5090346101905781600319360112610190573382527f83ed3ba29c1d52058c877df3ebd264cf957c42ef7764387349be0ccf6df0b63b6020908152918190205490516001600160a01b039091168152f35b5080fd5b905082346101e257826003193601126101e2573383527f83ed3ba29c1d52058c877df3ebd264cf957c42ef7764387349be0ccf6df0b63b60209081529220546001600160a01b031615158152f35b8280fdfea2646970667358221220153bf0ca16a86cf9e99164fe2d62eff5f61f60d7a4f68a91de685a88f00f5db264736f6c63430008120033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x21C SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x3AAFA388 EQ PUSH2 0x194 JUMPI POP DUP1 PUSH4 0x9B8AE375 EQ PUSH2 0x13F JUMPI PUSH4 0xE0F64EFC EQ PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x13C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI CALLER DUP2 MSTORE PUSH1 0x20 SWAP1 PUSH32 0x83ED3BA29C1D52058C877DF3EBD264CF957C42EF7764387349BE0CCF6DF0B63C DUP3 MSTORE DUP3 DUP2 KECCAK256 SWAP2 DUP4 MLOAD SWAP2 DUP3 DUP3 DUP6 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP6 DUP4 MSTORE DUP4 DUP4 KECCAK256 SWAP1 DUP4 JUMPDEST DUP6 DUP3 DUP3 LT PUSH2 0x11F JUMPI POP POP POP POP DUP4 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP5 PUSH8 0xFFFFFFFFFFFFFFFF DUP7 GT DUP5 DUP8 LT OR PUSH2 0x10B JUMPI DUP6 DUP2 MSTORE DUP3 DUP7 MSTORE SWAP3 MLOAD DUP6 DUP4 ADD DUP2 SWAP1 MSTORE DUP6 SWAP5 SWAP4 DUP6 ADD SWAP4 SWAP3 SWAP1 SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0xEB JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xDC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x98 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x190 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x190 JUMPI CALLER DUP3 MSTORE PUSH32 0x83ED3BA29C1D52058C877DF3EBD264CF957C42EF7764387349BE0CCF6DF0B63B PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x1E2 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E2 JUMPI CALLER DUP4 MSTORE PUSH32 0x83ED3BA29C1D52058C877DF3EBD264CF957C42EF7764387349BE0CCF6DF0B63B PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP3 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO EXTCODESIZE CREATE 0xCA AND 0xA8 PUSH13 0xF9E99164FE2D62EFF5F61F60D7 LOG4 0xF6 DUP11 SWAP2 0xDE PUSH9 0x5A88F00F5DB264736F PUSH13 0x63430008120033000000000000 ","sourceMap":"181:1079:4:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604090808252600436101561001557600080fd5b600090813560e01c9081633aafa38814610194575080639b8ae3751461013f5763e0f64efc1461004457600080fd5b3461013c578060031936011261013c573381526020907f83ed3ba29c1d52058c877df3ebd264cf957c42ef7764387349be0ccf6df0b63c825282812091835191828285549182815201908195835283832090835b8582821061011f5750505050839003601f01601f191683019467ffffffffffffffff86118487101761010b5785815282865292518583018190528594938501939290915b8281106100eb57505050500390f35b83516001600160a01b0316855286955093810193928101926001016100dc565b634e487b7160e01b82526041600452602482fd5b83546001600160a01b031685529093019260019283019201610098565b80fd5b5090346101905781600319360112610190573382527f83ed3ba29c1d52058c877df3ebd264cf957c42ef7764387349be0ccf6df0b63b6020908152918190205490516001600160a01b039091168152f35b5080fd5b905082346101e257826003193601126101e2573383527f83ed3ba29c1d52058c877df3ebd264cf957c42ef7764387349be0ccf6df0b63b60209081529220546001600160a01b031615158152f35b8280fdfea2646970667358221220153bf0ca16a86cf9e99164fe2d62eff5f61f60d7a4f68a91de685a88f00f5db264736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x3AAFA388 EQ PUSH2 0x194 JUMPI POP DUP1 PUSH4 0x9B8AE375 EQ PUSH2 0x13F JUMPI PUSH4 0xE0F64EFC EQ PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x13C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI CALLER DUP2 MSTORE PUSH1 0x20 SWAP1 PUSH32 0x83ED3BA29C1D52058C877DF3EBD264CF957C42EF7764387349BE0CCF6DF0B63C DUP3 MSTORE DUP3 DUP2 KECCAK256 SWAP2 DUP4 MLOAD SWAP2 DUP3 DUP3 DUP6 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP6 DUP4 MSTORE DUP4 DUP4 KECCAK256 SWAP1 DUP4 JUMPDEST DUP6 DUP3 DUP3 LT PUSH2 0x11F JUMPI POP POP POP POP DUP4 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP5 PUSH8 0xFFFFFFFFFFFFFFFF DUP7 GT DUP5 DUP8 LT OR PUSH2 0x10B JUMPI DUP6 DUP2 MSTORE DUP3 DUP7 MSTORE SWAP3 MLOAD DUP6 DUP4 ADD DUP2 SWAP1 MSTORE DUP6 SWAP5 SWAP4 DUP6 ADD SWAP4 SWAP3 SWAP1 SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0xEB JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xDC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x98 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x190 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x190 JUMPI CALLER DUP3 MSTORE PUSH32 0x83ED3BA29C1D52058C877DF3EBD264CF957C42EF7764387349BE0CCF6DF0B63B PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x1E2 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E2 JUMPI CALLER DUP4 MSTORE PUSH32 0x83ED3BA29C1D52058C877DF3EBD264CF957C42EF7764387349BE0CCF6DF0B63B PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP3 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO EXTCODESIZE CREATE 0xCA AND 0xA8 PUSH13 0xF9E99164FE2D62EFF5F61F60D7 LOG4 0xF6 DUP11 SWAP2 0xDE PUSH9 0x5A88F00F5DB264736F PUSH13 0x63430008120033000000000000 ","sourceMap":"181:1079:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1224:10;181:1079;;;;1207:16;181:1079;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;181:1079:4;;;;;-1:-1:-1;;181:1079:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;181:1079:4;;;;;-1:-1:-1;181:1079:4;;;;;;;;1207:16;181:1079;;;;-1:-1:-1;;;181:1079:4;;;;;;;;;;;-1:-1:-1;;;;;181:1079:4;;;;;;;1207:16;181:1079;;;;;;;;;;;;;;;;;;;;;;;;1039:10;181:1079;;1322:40:6;181:1079:4;;;;;;;;;;;-1:-1:-1;;;;;181:1079:4;;;;;;;;;;;;;;;;;;;;;;;;;853:10;181:1079;;1322:40:6;181:1079:4;;;;;;;-1:-1:-1;;;;;181:1079:4;837:41;;181:1079;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"108000","executionCost":"159","totalCost":"108159"},"external":{"getDeviceOwner()":"2386","getRelatedDevices()":"infinite","isSenderRegistered()":"2353"},"internal":{"_assignAddressToSender(address)":"infinite"}},"methodIdentifiers":{"getDeviceOwner()":"9b8ae375","getRelatedDevices()":"e0f64efc","isSenderRegistered()":"3aafa388"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getDeviceOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRelatedDevices\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSenderRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LeafWalletRegistryCore.sol\":\"LeafWalletRegistryCore\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/ILeafWalletRegistryCore.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\ninterface ILeafWalletRegistryCore {\\r\\n    function isSenderRegistered() external view returns (bool);\\r\\n    function getDeviceOwner() external view returns (address);\\r\\n    function getRelatedDevices() external view returns (address[] memory);\\r\\n}\",\"keccak256\":\"0x3c21ce0ba8cfdd89401a502d15673006dbd41aeee58211c53fc33c2e187adbec\",\"license\":\"MIT\"},\"contracts/LeafWalletRegistryCore.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\nimport \\\"./ILeafWalletRegistryCore.sol\\\";\\r\\nimport {LeafWalletStorage,StorageHandler} from  \\\"./SusuwatariStorage.sol\\\";\\r\\n\\r\\ncontract LeafWalletRegistryCore is ILeafWalletRegistryCore,StorageHandler {\\r\\n\\r\\n    \\r\\n\\r\\n    function _assignAddressToSender(address assignee) internal{\\r\\n        LeafWalletStorage storage lw = lw();\\r\\n        require(lw._deviceOwner[assignee] == address(0) || lw._deviceOwner[assignee] == msg.sender,\\\"Device already registered\\\");\\r\\n     \\r\\n        if(lw._deviceOwner[assignee] == address(0)){\\r\\n            lw._ownerDevices[msg.sender].push(assignee);\\r\\n            lw._deviceOwner[assignee] = msg.sender;\\r\\n        }\\r\\n    }\\r\\n\\r\\n\\r\\n    function isSenderRegistered() public view override returns (bool) {\\r\\n        LeafWalletStorage storage lw = lw();\\r\\n        return lw._deviceOwner[msg.sender] != address(0);\\r\\n    }\\r\\n\\r\\n    function getDeviceOwner() public view override returns (address) {\\r\\n        LeafWalletStorage storage lw = lw();\\r\\n        return lw._deviceOwner[msg.sender];\\r\\n    }\\r\\n\\r\\n    function getRelatedDevices() public view override returns (address[] memory) {\\r\\n        LeafWalletStorage storage lw = lw();\\r\\n        return lw._ownerDevices[msg.sender];\\r\\n    }\\r\\n\\r\\n\\r\\n    \\r\\n\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n    \",\"keccak256\":\"0xff10bf2d25fd7de2410411975b7ac4a8bdb2c829a94b91fbed4426a44a65438b\",\"license\":\"MIT\"},\"contracts/SusuwatariStorage.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\nimport {LibDiamond} from \\\"hardhat-deploy/solc_0.8/diamond/libraries/LibDiamond.sol\\\";\\r\\n\\r\\nbytes32 constant SUSUWATARI_STORAGE_POSITION = keccak256(\\\"susuwatari.contract.storage\\\");\\r\\nbytes32 constant LEAFWALLET_STORAGE_POSITION = keccak256(\\\"leafwallet.contract.storage\\\");\\r\\n\\r\\nstruct OwnableStorage {\\r\\n\\r\\n    address _owner;\\r\\n}\\r\\n\\r\\nstruct SusuwatariStorage {\\r\\n    \\r\\n\\r\\n  bool isInitialized;\\r\\n}\\r\\n\\r\\nstruct LeafWalletStorage {\\r\\n    mapping(address => address) _deviceOwner;\\r\\n    mapping(address => address[]) _ownerDevices;\\r\\n    mapping(address => uint256) _deviceActivationCodes;\\r\\n}\\r\\n\\r\\ncontract StorageHandler {\\r\\n    function susu() internal pure returns (SusuwatariStorage storage cs) {\\r\\n        bytes32 position = SUSUWATARI_STORAGE_POSITION;\\r\\n        assembly {\\r\\n           cs.slot := position\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function os() internal pure returns (OwnableStorage storage cs) {\\r\\n        bytes32 position = keccak256(\\\"ownable.contract.storage\\\");\\r\\n        assembly {\\r\\n           cs.slot := position\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    function ds() internal pure returns (LibDiamond.DiamondStorage storage) {\\r\\n        return LibDiamond.diamondStorage();\\r\\n    }\\r\\n\\r\\n    \\r\\n    function lw() internal pure returns (LeafWalletStorage storage cs) {\\r\\n        bytes32 position = keccak256(\\\"leafwallet.contract.storage\\\");\\r\\n        assembly {\\r\\n           cs.slot := position\\r\\n        }\\r\\n    }\\r\\n}\",\"keccak256\":\"0xdf2fb80f5b3fd1b3fbaa4481353d252834072978fd4eb242b4ab23f894bafd16\",\"license\":\"MIT\"},\"hardhat-deploy/solc_0.8/diamond/interfaces/IDiamondCut.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\ninterface IDiamondCut {\\n    enum FacetCutAction {Add, Replace, Remove}\\n    // Add=0, Replace=1, Remove=2\\n\\n    struct FacetCut {\\n        address facetAddress;\\n        FacetCutAction action;\\n        bytes4[] functionSelectors;\\n    }\\n\\n    /// @notice Add/replace/remove any number of functions and optionally execute\\n    ///         a function with delegatecall\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\n    /// @param _init The address of the contract or facet to execute _calldata\\n    /// @param _calldata A function call, including function selector and arguments\\n    ///                  _calldata is executed with delegatecall on _init\\n    function diamondCut(\\n        FacetCut[] calldata _diamondCut,\\n        address _init,\\n        bytes calldata _calldata\\n    ) external;\\n\\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\\n}\\n\",\"keccak256\":\"0xc00c16bfa30a3fa5f3dc684f7f8ba62c259962b25f647d9588739458989717fc\",\"license\":\"MIT\"},\"hardhat-deploy/solc_0.8/diamond/libraries/LibDiamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\nimport { IDiamondCut } from \\\"../interfaces/IDiamondCut.sol\\\";\\n\\nlibrary LibDiamond {\\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\\\"diamond.standard.diamond.storage\\\");\\n\\n    struct FacetAddressAndPosition {\\n        address facetAddress;\\n        uint96 functionSelectorPosition; // position in facetFunctionSelectors.functionSelectors array\\n    }\\n\\n    struct FacetFunctionSelectors {\\n        bytes4[] functionSelectors;\\n        uint256 facetAddressPosition; // position of facetAddress in facetAddresses array\\n    }\\n\\n    struct DiamondStorage {\\n        // maps function selector to the facet address and\\n        // the position of the selector in the facetFunctionSelectors.selectors array\\n        mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\\n        // maps facet addresses to function selectors\\n        mapping(address => FacetFunctionSelectors) facetFunctionSelectors;\\n        // facet addresses\\n        address[] facetAddresses;\\n        // Used to query if a contract implements an interface.\\n        // Used to implement ERC-165.\\n        mapping(bytes4 => bool) supportedInterfaces;\\n        // owner of the contract\\n        address contractOwner;\\n    }\\n\\n    function diamondStorage() internal pure returns (DiamondStorage storage ds) {\\n        bytes32 position = DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n    }\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    function setContractOwner(address _newOwner) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        address previousOwner = ds.contractOwner;\\n        ds.contractOwner = _newOwner;\\n        emit OwnershipTransferred(previousOwner, _newOwner);\\n    }\\n\\n    function contractOwner() internal view returns (address contractOwner_) {\\n        contractOwner_ = diamondStorage().contractOwner;\\n    }\\n\\n    function enforceIsContractOwner() internal view {\\n        require(msg.sender == diamondStorage().contractOwner, \\\"LibDiamond: Must be contract owner\\\");\\n    }\\n\\n    event DiamondCut(IDiamondCut.FacetCut[] _diamondCut, address _init, bytes _calldata);\\n\\n    // Internal function version of diamondCut\\n    function diamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        for (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\\n            IDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\\n            if (action == IDiamondCut.FacetCutAction.Add) {\\n                addFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Replace) {\\n                replaceFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Remove) {\\n                removeFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else {\\n                revert(\\\"LibDiamondCut: Incorrect FacetCutAction\\\");\\n            }\\n        }\\n        emit DiamondCut(_diamondCut, _init, _calldata);\\n        initializeDiamondCut(_init, _calldata);\\n    }\\n\\n    function addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();        \\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            addFacet(ds, _facetAddress);            \\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress == address(0), \\\"LibDiamondCut: Can't add function that already exists\\\");\\n            addFunction(ds, selector, selectorPosition, _facetAddress);\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            addFacet(ds, _facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress != _facetAddress, \\\"LibDiamondCut: Can't replace function with same function\\\");\\n            removeFunction(ds, oldFacetAddress, selector);\\n            addFunction(ds, selector, selectorPosition, _facetAddress);\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // if function does not exist then do nothing and return\\n        require(_facetAddress == address(0), \\\"LibDiamondCut: Remove facet address must be address(0)\\\");\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            removeFunction(ds, oldFacetAddress, selector);\\n        }\\n    }\\n\\n    function addFacet(DiamondStorage storage ds, address _facetAddress) internal {\\n        enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n        ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = ds.facetAddresses.length;\\n        ds.facetAddresses.push(_facetAddress);\\n    }    \\n\\n\\n    function addFunction(DiamondStorage storage ds, bytes4 _selector, uint96 _selectorPosition, address _facetAddress) internal {\\n        ds.selectorToFacetAndPosition[_selector].functionSelectorPosition = _selectorPosition;\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(_selector);\\n        ds.selectorToFacetAndPosition[_selector].facetAddress = _facetAddress;\\n    }\\n\\n    function removeFunction(DiamondStorage storage ds, address _facetAddress, bytes4 _selector) internal {        \\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Can't remove function that doesn't exist\\\");\\n        // an immutable function is a function defined directly in a diamond\\n        require(_facetAddress != address(this), \\\"LibDiamondCut: Can't remove immutable function\\\");\\n        // replace selector with last selector, then delete last selector\\n        uint256 selectorPosition = ds.selectorToFacetAndPosition[_selector].functionSelectorPosition;\\n        uint256 lastSelectorPosition = ds.facetFunctionSelectors[_facetAddress].functionSelectors.length - 1;\\n        // if not the same then replace _selector with lastSelector\\n        if (selectorPosition != lastSelectorPosition) {\\n            bytes4 lastSelector = ds.facetFunctionSelectors[_facetAddress].functionSelectors[lastSelectorPosition];\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors[selectorPosition] = lastSelector;\\n            ds.selectorToFacetAndPosition[lastSelector].functionSelectorPosition = uint96(selectorPosition);\\n        }\\n        // delete the last selector\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.pop();\\n        delete ds.selectorToFacetAndPosition[_selector];\\n\\n        // if no more selectors for facet address then delete the facet address\\n        if (lastSelectorPosition == 0) {\\n            // replace facet address with last facet address and delete last facet address\\n            uint256 lastFacetAddressPosition = ds.facetAddresses.length - 1;\\n            uint256 facetAddressPosition = ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n            if (facetAddressPosition != lastFacetAddressPosition) {\\n                address lastFacetAddress = ds.facetAddresses[lastFacetAddressPosition];\\n                ds.facetAddresses[facetAddressPosition] = lastFacetAddress;\\n                ds.facetFunctionSelectors[lastFacetAddress].facetAddressPosition = facetAddressPosition;\\n            }\\n            ds.facetAddresses.pop();\\n            delete ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n        }\\n    }\\n\\n    function initializeDiamondCut(address _init, bytes memory _calldata) internal {\\n        if (_init == address(0)) {\\n            require(_calldata.length == 0, \\\"LibDiamondCut: _init is address(0) but_calldata is not empty\\\");\\n        } else {\\n            require(_calldata.length > 0, \\\"LibDiamondCut: _calldata is empty but _init is not address(0)\\\");\\n            if (_init != address(this)) {\\n                enforceHasContractCode(_init, \\\"LibDiamondCut: _init address has no code\\\");\\n            }\\n            (bool success, bytes memory error) = _init.delegatecall(_calldata);\\n            if (!success) {\\n                if (error.length > 0) {\\n                    // bubble up the error\\n                    revert(string(error));\\n                } else {\\n                    revert(\\\"LibDiamondCut: _init function reverted\\\");\\n                }\\n            }\\n        }\\n    }\\n\\n    function enforceHasContractCode(address _contract, string memory _errorMessage) internal view {\\n        uint256 contractSize;\\n        assembly {\\n            contractSize := extcodesize(_contract)\\n        }\\n        require(contractSize > 0, _errorMessage);\\n    }\\n}\\n\",\"keccak256\":\"0x2205345e83eb86f5281f159a9215a096cb6d404782619f9b8e9d7a4a46c32a37\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/SusuwatariLeafWalletFacet.sol":{"SusuwatariLeafWalletFacet":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"","type":"uint256"}],"name":"AssignActivatableAddressToSenderReturn","type":"event"},{"inputs":[{"internalType":"address","name":"assignee","type":"address"}],"name":"assignActivatableAddressToSender","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getActivationCodeOfSender","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeviceOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRelatedDevices","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isSenderRegistered","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523461001657610534908161001c8239f35b600080fdfe60806040908082526004918236101561001757600080fd5b600091823560e01c9081633aafa388146104a25750806358944eb8146103ea5780639b8ae375146103ac578063e0f64efc146102ae5763ec9492971461005c57600080fd5b346102aa57602090816003193601126102a65783356001600160a01b03808216908183036102a2578186526000805160206104df833981519152908186528085882054168015908115610298575b5015610255578287528186528487205416156101ae575b505081518381019042825244848201523360601b6060820152605481526080810181811067ffffffffffffffff82111761019b5784525190206064900694600a8610610172575b5090846101697f4194273a0171865880e1d7a0089dcb6cfe51ce239b09acde0bf6cc5e071210b095969360018060a01b03166000527f83ed3ba29c1d52058c877df3ebd264cf957c42ef7764387349be0ccf6df0b63d602052604060002090565b5551908152a180f35b94600a8101809111610188579450610169610108565b634e487b7160e01b855260118652602485fd5b634e487b7160e01b875260418852602487fd5b3360009081527f83ed3ba29c1d52058c877df3ebd264cf957c42ef7764387349be0ccf6df0b63c6020526040902080549068010000000000000000821015610242576001820180825582101561022f5787528587200180546001600160a01b03199081168417909155918652845282852080549091163317905538806100c1565b634e487b7160e01b885260328952602488fd5b634e487b7160e01b885260418952602488fd5b845162461bcd60e51b8152808901879052601960248201527f44657669636520616c72656164792072656769737465726564000000000000006044820152606490fd5b90503314386100aa565b8580fd5b8280fd5b5080fd5b50346102aa57816003193601126102aa573360009081527f83ed3ba29c1d52058c877df3ebd264cf957c42ef7764387349be0ccf6df0b63c6020526040902091815190819284548084526020809401908196845284842090845b8682821061038f5750505050849003601f01601f191684019567ffffffffffffffff87118588101761037c575085815282865292518583018190528594938501939290915b82811061035c57505050500390f35b83516001600160a01b03168552869550938101939281019260010161034d565b634e487b7160e01b835260419052602482fd5b83546001600160a01b031685529093019260019283019201610308565b50346102aa57816003193601126102aa573382526000805160206104df8339815191526020908152918190205490516001600160a01b039091168152f35b5091903461049f578060031936011261049f573381526000805160206104df833981519152602052829020546001600160a01b03161561045d573360009081527f83ed3ba29c1d52058c877df3ebd264cf957c42ef7764387349be0ccf6df0b63d60209081526040909120548351908152f35b6020606492519162461bcd60e51b8352820152601960248201527f446576696365206e6f74207965742072656769737465726564000000000000006044820152fd5b80fd5b919050346102a657826003193601126102a6573383526000805160206104df83398151915260209081529220546001600160a01b031615158152f3fe83ed3ba29c1d52058c877df3ebd264cf957c42ef7764387349be0ccf6df0b63ba2646970667358221220773595bd5f4c2b42434d944ca70014b6da66c3780340c4b8d60b3d118dd8a0af64736f6c63430008120033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x534 SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x3AAFA388 EQ PUSH2 0x4A2 JUMPI POP DUP1 PUSH4 0x58944EB8 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0x9B8AE375 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0xE0F64EFC EQ PUSH2 0x2AE JUMPI PUSH4 0xEC949297 EQ PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A6 JUMPI DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP1 DUP2 DUP4 SUB PUSH2 0x2A2 JUMPI DUP2 DUP7 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP2 DUP7 MSTORE DUP1 DUP6 DUP9 KECCAK256 SLOAD AND DUP1 ISZERO SWAP1 DUP2 ISZERO PUSH2 0x298 JUMPI JUMPDEST POP ISZERO PUSH2 0x255 JUMPI DUP3 DUP8 MSTORE DUP2 DUP7 MSTORE DUP5 DUP8 KECCAK256 SLOAD AND ISZERO PUSH2 0x1AE JUMPI JUMPDEST POP POP DUP2 MLOAD DUP4 DUP2 ADD SWAP1 TIMESTAMP DUP3 MSTORE PREVRANDAO DUP5 DUP3 ADD MSTORE CALLER PUSH1 0x60 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x54 DUP2 MSTORE PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x19B JUMPI DUP5 MSTORE MLOAD SWAP1 KECCAK256 PUSH1 0x64 SWAP1 MOD SWAP5 PUSH1 0xA DUP7 LT PUSH2 0x172 JUMPI JUMPDEST POP SWAP1 DUP5 PUSH2 0x169 PUSH32 0x4194273A0171865880E1D7A0089DCB6CFE51CE239B09ACDE0BF6CC5E071210B0 SWAP6 SWAP7 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH32 0x83ED3BA29C1D52058C877DF3EBD264CF957C42EF7764387349BE0CCF6DF0B63D PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST SWAP5 PUSH1 0xA DUP2 ADD DUP1 SWAP2 GT PUSH2 0x188 JUMPI SWAP5 POP PUSH2 0x169 PUSH2 0x108 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 DUP7 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 DUP9 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x83ED3BA29C1D52058C877DF3EBD264CF957C42EF7764387349BE0CCF6DF0B63C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x242 JUMPI PUSH1 0x1 DUP3 ADD DUP1 DUP3 SSTORE DUP3 LT ISZERO PUSH2 0x22F JUMPI DUP8 MSTORE DUP6 DUP8 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP2 DUP7 MSTORE DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND CALLER OR SWAP1 SSTORE CODESIZE DUP1 PUSH2 0xC1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x32 DUP10 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 DUP10 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP8 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44657669636520616C7265616479207265676973746572656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP CALLER EQ CODESIZE PUSH2 0xAA JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2AA JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2AA JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x83ED3BA29C1D52058C877DF3EBD264CF957C42EF7764387349BE0CCF6DF0B63C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 DUP2 MLOAD SWAP1 DUP2 SWAP3 DUP5 SLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 SWAP5 ADD SWAP1 DUP2 SWAP7 DUP5 MSTORE DUP5 DUP5 KECCAK256 SWAP1 DUP5 JUMPDEST DUP7 DUP3 DUP3 LT PUSH2 0x38F JUMPI POP POP POP POP DUP5 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP5 ADD SWAP6 PUSH8 0xFFFFFFFFFFFFFFFF DUP8 GT DUP6 DUP9 LT OR PUSH2 0x37C JUMPI POP DUP6 DUP2 MSTORE DUP3 DUP7 MSTORE SWAP3 MLOAD DUP6 DUP4 ADD DUP2 SWAP1 MSTORE DUP6 SWAP5 SWAP4 DUP6 ADD SWAP4 SWAP3 SWAP1 SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x35C JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x34D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x308 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2AA JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2AA JUMPI CALLER DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x49F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x49F JUMPI CALLER DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE DUP3 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x45D JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x83ED3BA29C1D52058C877DF3EBD264CF957C42EF7764387349BE0CCF6DF0B63D PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD DUP4 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446576696365206E6F7420796574207265676973746572656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x2A6 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A6 JUMPI CALLER DUP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO DUP2 MSTORE RETURN INVALID DUP4 0xED EXTCODESIZE LOG2 SWAP13 SAR MSTORE SDIV DUP13 DUP8 PUSH30 0xF3EBD264CF957C42EF7764387349BE0CCF6DF0B63BA26469706673582212 KECCAK256 PUSH24 0x3595BD5F4C2B42434D944CA70014B6DA66C3780340C4B8D6 SIGNEXTEND RETURNDATASIZE GT DUP14 0xD8 LOG0 0xAF PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"309:233:5:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"mapping_index_access_mapping_address_address_of_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_address_of_address_4698":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60806040908082526004918236101561001757600080fd5b600091823560e01c9081633aafa388146104a25750806358944eb8146103ea5780639b8ae375146103ac578063e0f64efc146102ae5763ec9492971461005c57600080fd5b346102aa57602090816003193601126102a65783356001600160a01b03808216908183036102a2578186526000805160206104df833981519152908186528085882054168015908115610298575b5015610255578287528186528487205416156101ae575b505081518381019042825244848201523360601b6060820152605481526080810181811067ffffffffffffffff82111761019b5784525190206064900694600a8610610172575b5090846101697f4194273a0171865880e1d7a0089dcb6cfe51ce239b09acde0bf6cc5e071210b095969360018060a01b03166000527f83ed3ba29c1d52058c877df3ebd264cf957c42ef7764387349be0ccf6df0b63d602052604060002090565b5551908152a180f35b94600a8101809111610188579450610169610108565b634e487b7160e01b855260118652602485fd5b634e487b7160e01b875260418852602487fd5b3360009081527f83ed3ba29c1d52058c877df3ebd264cf957c42ef7764387349be0ccf6df0b63c6020526040902080549068010000000000000000821015610242576001820180825582101561022f5787528587200180546001600160a01b03199081168417909155918652845282852080549091163317905538806100c1565b634e487b7160e01b885260328952602488fd5b634e487b7160e01b885260418952602488fd5b845162461bcd60e51b8152808901879052601960248201527f44657669636520616c72656164792072656769737465726564000000000000006044820152606490fd5b90503314386100aa565b8580fd5b8280fd5b5080fd5b50346102aa57816003193601126102aa573360009081527f83ed3ba29c1d52058c877df3ebd264cf957c42ef7764387349be0ccf6df0b63c6020526040902091815190819284548084526020809401908196845284842090845b8682821061038f5750505050849003601f01601f191684019567ffffffffffffffff87118588101761037c575085815282865292518583018190528594938501939290915b82811061035c57505050500390f35b83516001600160a01b03168552869550938101939281019260010161034d565b634e487b7160e01b835260419052602482fd5b83546001600160a01b031685529093019260019283019201610308565b50346102aa57816003193601126102aa573382526000805160206104df8339815191526020908152918190205490516001600160a01b039091168152f35b5091903461049f578060031936011261049f573381526000805160206104df833981519152602052829020546001600160a01b03161561045d573360009081527f83ed3ba29c1d52058c877df3ebd264cf957c42ef7764387349be0ccf6df0b63d60209081526040909120548351908152f35b6020606492519162461bcd60e51b8352820152601960248201527f446576696365206e6f74207965742072656769737465726564000000000000006044820152fd5b80fd5b919050346102a657826003193601126102a6573383526000805160206104df83398151915260209081529220546001600160a01b031615158152f3fe83ed3ba29c1d52058c877df3ebd264cf957c42ef7764387349be0ccf6df0b63ba2646970667358221220773595bd5f4c2b42434d944ca70014b6da66c3780340c4b8d60b3d118dd8a0af64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x3AAFA388 EQ PUSH2 0x4A2 JUMPI POP DUP1 PUSH4 0x58944EB8 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0x9B8AE375 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0xE0F64EFC EQ PUSH2 0x2AE JUMPI PUSH4 0xEC949297 EQ PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2AA JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A6 JUMPI DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP1 DUP2 DUP4 SUB PUSH2 0x2A2 JUMPI DUP2 DUP7 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP2 DUP7 MSTORE DUP1 DUP6 DUP9 KECCAK256 SLOAD AND DUP1 ISZERO SWAP1 DUP2 ISZERO PUSH2 0x298 JUMPI JUMPDEST POP ISZERO PUSH2 0x255 JUMPI DUP3 DUP8 MSTORE DUP2 DUP7 MSTORE DUP5 DUP8 KECCAK256 SLOAD AND ISZERO PUSH2 0x1AE JUMPI JUMPDEST POP POP DUP2 MLOAD DUP4 DUP2 ADD SWAP1 TIMESTAMP DUP3 MSTORE PREVRANDAO DUP5 DUP3 ADD MSTORE CALLER PUSH1 0x60 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x54 DUP2 MSTORE PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x19B JUMPI DUP5 MSTORE MLOAD SWAP1 KECCAK256 PUSH1 0x64 SWAP1 MOD SWAP5 PUSH1 0xA DUP7 LT PUSH2 0x172 JUMPI JUMPDEST POP SWAP1 DUP5 PUSH2 0x169 PUSH32 0x4194273A0171865880E1D7A0089DCB6CFE51CE239B09ACDE0BF6CC5E071210B0 SWAP6 SWAP7 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH32 0x83ED3BA29C1D52058C877DF3EBD264CF957C42EF7764387349BE0CCF6DF0B63D PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST SWAP5 PUSH1 0xA DUP2 ADD DUP1 SWAP2 GT PUSH2 0x188 JUMPI SWAP5 POP PUSH2 0x169 PUSH2 0x108 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 DUP7 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 DUP9 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x83ED3BA29C1D52058C877DF3EBD264CF957C42EF7764387349BE0CCF6DF0B63C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x242 JUMPI PUSH1 0x1 DUP3 ADD DUP1 DUP3 SSTORE DUP3 LT ISZERO PUSH2 0x22F JUMPI DUP8 MSTORE DUP6 DUP8 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP2 DUP7 MSTORE DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND CALLER OR SWAP1 SSTORE CODESIZE DUP1 PUSH2 0xC1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x32 DUP10 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 DUP10 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP8 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44657669636520616C7265616479207265676973746572656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP CALLER EQ CODESIZE PUSH2 0xAA JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x2AA JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2AA JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x83ED3BA29C1D52058C877DF3EBD264CF957C42EF7764387349BE0CCF6DF0B63C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 DUP2 MLOAD SWAP1 DUP2 SWAP3 DUP5 SLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 SWAP5 ADD SWAP1 DUP2 SWAP7 DUP5 MSTORE DUP5 DUP5 KECCAK256 SWAP1 DUP5 JUMPDEST DUP7 DUP3 DUP3 LT PUSH2 0x38F JUMPI POP POP POP POP DUP5 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP5 ADD SWAP6 PUSH8 0xFFFFFFFFFFFFFFFF DUP8 GT DUP6 DUP9 LT OR PUSH2 0x37C JUMPI POP DUP6 DUP2 MSTORE DUP3 DUP7 MSTORE SWAP3 MLOAD DUP6 DUP4 ADD DUP2 SWAP1 MSTORE DUP6 SWAP5 SWAP4 DUP6 ADD SWAP4 SWAP3 SWAP1 SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x35C JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x34D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x308 JUMP JUMPDEST POP CALLVALUE PUSH2 0x2AA JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2AA JUMPI CALLER DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x49F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x49F JUMPI CALLER DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE DUP3 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x45D JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x83ED3BA29C1D52058C877DF3EBD264CF957C42EF7764387349BE0CCF6DF0B63D PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD DUP4 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446576696365206E6F7420796574207265676973746572656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x2A6 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A6 JUMPI CALLER DUP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO DUP2 MSTORE RETURN INVALID DUP4 0xED EXTCODESIZE LOG2 SWAP13 SAR MSTORE SDIV DUP13 DUP8 PUSH30 0xF3EBD264CF957C42EF7764387349BE0CCF6DF0B63BA26469706673582212 KECCAK256 PUSH24 0x3595BD5F4C2B42434D944CA70014B6DA66C3780340C4B8D6 SIGNEXTEND RETURNDATASIZE GT DUP14 0xD8 LOG0 0xAF PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"309:233:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;309:233:5;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;309:233:5;;;;;;;;;;395:39:4;;:82;;;;;309:233:5;;;;;;;;;;;;;;;;527:39:4;524:166;;309:233:5;;;;;622:63:3;;;639:15;;309:233:5;;656:16:3;309:233:5;;;;674:10:3;309:233:5;;;;;;622:63:3;;;309:233:5;;;;;;;;;;;;;;;612:74:3;;690:3;309:233:5;;;722:2:3;707:17;;704:82;;309:233:5;796:35:3;;;;868:54;796:35;;;309:233:5;;;;;;;;1166:25:3;309:233:5;;;;;;;796:35:3;309:233:5;;;;;868:54:3;309:233:5;;704:82:3;309:233:5;722:2:3;309:233:5;;;;;;;740:34:3;-1:-1:-1;796:35:3;704:82;;309:233:5;-1:-1:-1;;;309:233:5;;;;;;;;;-1:-1:-1;;;309:233:5;;;;;;;;524:166:4;599:10;309:233:5;;;;1207:16:4;309:233:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;309:233:5;;;;;;;;;;;;;;;;;;;;;599:10:4;309:233:5;;;524:166:4;;;;309:233:5;-1:-1:-1;;;309:233:5;;;;;;;;;-1:-1:-1;;;309:233:5;;;;;;;;;;;-1:-1:-1;;;309:233:5;;;;;;;;;;;;;;;;;;;;;395:82:4;467:10;;;438:39;395:82;;;309:233:5;;;;;;;;;;;;;;;;;;;;;;;;;1224:10:4;309:233:5;;;;1207:16:4;309:233:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;309:233:5;;;;;-1:-1:-1;;309:233:5;;;;;;;;;;;;;-1:-1:-1;309:233:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;309:233:5;;;;;-1:-1:-1;309:233:5;;;;;;;;1207:16:4;309:233:5;;;;-1:-1:-1;;;309:233:5;;;;;;;;;;;-1:-1:-1;;;;;309:233:5;;;;;;;1207:16:4;309:233:5;;;;;;;;;;;;;;;;;;;;1039:10:4;309:233:5;;-1:-1:-1;;;;;;;;;;;309:233:5;;;;;;;;;;;-1:-1:-1;;;;;309:233:5;;;;;;;;;;;;;;;;;;;;;1094:10:3;309:233:5;;-1:-1:-1;;;;;;;;;;;309:233:5;;;;;;-1:-1:-1;;;;;309:233:5;1078:41:3;309:233:5;;1094:10:3;309:233:5;;;;1166:25:3;309:233:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;853:10:4;309:233:5;;-1:-1:-1;;;;;;;;;;;309:233:5;;;;;;;-1:-1:-1;;;;;309:233:5;837:41:4;;309:233:5;;"},"gasEstimates":{"creation":{"codeDepositCost":"266400","executionCost":"313","totalCost":"266713"},"external":{"assignActivatableAddressToSender(address)":"infinite","getActivationCodeOfSender()":"infinite","getDeviceOwner()":"infinite","getRelatedDevices()":"infinite","isSenderRegistered()":"2392"}},"methodIdentifiers":{"assignActivatableAddressToSender(address)":"ec949297","getActivationCodeOfSender()":"58944eb8","getDeviceOwner()":"9b8ae375","getRelatedDevices()":"e0f64efc","isSenderRegistered()":"3aafa388"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"AssignActivatableAddressToSenderReturn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assignee\",\"type\":\"address\"}],\"name\":\"assignActivatableAddressToSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActivationCodeOfSender\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeviceOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRelatedDevices\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSenderRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SusuwatariLeafWalletFacet.sol\":\"SusuwatariLeafWalletFacet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"contracts/ILeafWalletRegistryActivate.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\nimport \\\"./ILeafWalletRegistryCore.sol\\\";\\r\\n\\r\\ninterface ILeafWalletRegistryActivate is ILeafWalletRegistryCore{\\r\\n    function assignActivatableAddressToSender(address assignee)  external;\\r\\n    function getActivationCodeOfSender() external view returns (uint256);\\r\\n}\",\"keccak256\":\"0x822f13bd8b0d72f4d88a6824ddc6114eb682e6b183aa0f2367ae4cc3a25edcf2\",\"license\":\"MIT\"},\"contracts/ILeafWalletRegistryCore.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\ninterface ILeafWalletRegistryCore {\\r\\n    function isSenderRegistered() external view returns (bool);\\r\\n    function getDeviceOwner() external view returns (address);\\r\\n    function getRelatedDevices() external view returns (address[] memory);\\r\\n}\",\"keccak256\":\"0x3c21ce0ba8cfdd89401a502d15673006dbd41aeee58211c53fc33c2e187adbec\",\"license\":\"MIT\"},\"contracts/LeafWalletRegistryActivate.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\nimport \\\"./ILeafWalletRegistryActivate.sol\\\";\\r\\nimport \\\"./LeafWalletRegistryCore.sol\\\";\\r\\nimport {LeafWalletStorage,StorageHandler} from  \\\"./SusuwatariStorage.sol\\\";\\r\\n\\r\\ncontract LeafWalletRegistryActivate is ILeafWalletRegistryActivate, LeafWalletRegistryCore  {\\r\\n    event AssignActivatableAddressToSenderReturn(uint256);\\r\\n    \\r\\n\\r\\n    function assignActivatableAddressToSender(address assignee) public virtual override{\\r\\n        LeafWalletStorage storage lw = lw();\\r\\n        _assignAddressToSender(assignee);\\r\\n\\r\\n\\r\\n        uint256 activationCode = uint256(keccak256(abi.encodePacked(block.timestamp, block.prevrandao, msg.sender))) % 100;\\r\\n        if(activationCode<10){\\r\\n            activationCode = activationCode+10;\\r\\n        }\\r\\n        lw._deviceActivationCodes[assignee] = activationCode;\\r\\n\\r\\n\\r\\n        emit AssignActivatableAddressToSenderReturn(activationCode);\\r\\n    }\\r\\n\\r\\n    function getActivationCodeOfSender() public view override returns (uint256){\\r\\n        LeafWalletStorage storage lw = lw();\\r\\n        require(lw._deviceOwner[msg.sender] != address(0),\\\"Device not yet registered\\\");\\r\\n        return lw._deviceActivationCodes[msg.sender];\\r\\n    }\\r\\n\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n    \",\"keccak256\":\"0x9199e4fb9795851bfd7c748e5d4b8d4c33d87cf197223c3a554f7fc4ae2ce78b\",\"license\":\"MIT\"},\"contracts/LeafWalletRegistryCore.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\nimport \\\"./ILeafWalletRegistryCore.sol\\\";\\r\\nimport {LeafWalletStorage,StorageHandler} from  \\\"./SusuwatariStorage.sol\\\";\\r\\n\\r\\ncontract LeafWalletRegistryCore is ILeafWalletRegistryCore,StorageHandler {\\r\\n\\r\\n    \\r\\n\\r\\n    function _assignAddressToSender(address assignee) internal{\\r\\n        LeafWalletStorage storage lw = lw();\\r\\n        require(lw._deviceOwner[assignee] == address(0) || lw._deviceOwner[assignee] == msg.sender,\\\"Device already registered\\\");\\r\\n     \\r\\n        if(lw._deviceOwner[assignee] == address(0)){\\r\\n            lw._ownerDevices[msg.sender].push(assignee);\\r\\n            lw._deviceOwner[assignee] = msg.sender;\\r\\n        }\\r\\n    }\\r\\n\\r\\n\\r\\n    function isSenderRegistered() public view override returns (bool) {\\r\\n        LeafWalletStorage storage lw = lw();\\r\\n        return lw._deviceOwner[msg.sender] != address(0);\\r\\n    }\\r\\n\\r\\n    function getDeviceOwner() public view override returns (address) {\\r\\n        LeafWalletStorage storage lw = lw();\\r\\n        return lw._deviceOwner[msg.sender];\\r\\n    }\\r\\n\\r\\n    function getRelatedDevices() public view override returns (address[] memory) {\\r\\n        LeafWalletStorage storage lw = lw();\\r\\n        return lw._ownerDevices[msg.sender];\\r\\n    }\\r\\n\\r\\n\\r\\n    \\r\\n\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n    \",\"keccak256\":\"0xff10bf2d25fd7de2410411975b7ac4a8bdb2c829a94b91fbed4426a44a65438b\",\"license\":\"MIT\"},\"contracts/SusuwatariLeafWalletFacet.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\r\\nimport \\\"./LeafWalletRegistryActivate.sol\\\";\\r\\nimport {LibDiamond} from \\\"hardhat-deploy/solc_0.8/diamond/libraries/LibDiamond.sol\\\";\\r\\nimport {SusuwatariStorage} from \\\"./SusuwatariStorage.sol\\\";\\r\\n\\r\\n\\r\\ncontract SusuwatariLeafWalletFacet is LeafWalletRegistryActivate, Context  {\\r\\n    \\r\\n    function assignActivatableAddressToSender(address assignee) public override{\\r\\n        super.assignActivatableAddressToSender(assignee);\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n    \",\"keccak256\":\"0xaf2a804477b973f496e5c0753120bb43fd0847952619d5c0fc62edec86216836\",\"license\":\"MIT\"},\"contracts/SusuwatariStorage.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\nimport {LibDiamond} from \\\"hardhat-deploy/solc_0.8/diamond/libraries/LibDiamond.sol\\\";\\r\\n\\r\\nbytes32 constant SUSUWATARI_STORAGE_POSITION = keccak256(\\\"susuwatari.contract.storage\\\");\\r\\nbytes32 constant LEAFWALLET_STORAGE_POSITION = keccak256(\\\"leafwallet.contract.storage\\\");\\r\\n\\r\\nstruct OwnableStorage {\\r\\n\\r\\n    address _owner;\\r\\n}\\r\\n\\r\\nstruct SusuwatariStorage {\\r\\n    \\r\\n\\r\\n  bool isInitialized;\\r\\n}\\r\\n\\r\\nstruct LeafWalletStorage {\\r\\n    mapping(address => address) _deviceOwner;\\r\\n    mapping(address => address[]) _ownerDevices;\\r\\n    mapping(address => uint256) _deviceActivationCodes;\\r\\n}\\r\\n\\r\\ncontract StorageHandler {\\r\\n    function susu() internal pure returns (SusuwatariStorage storage cs) {\\r\\n        bytes32 position = SUSUWATARI_STORAGE_POSITION;\\r\\n        assembly {\\r\\n           cs.slot := position\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function os() internal pure returns (OwnableStorage storage cs) {\\r\\n        bytes32 position = keccak256(\\\"ownable.contract.storage\\\");\\r\\n        assembly {\\r\\n           cs.slot := position\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    function ds() internal pure returns (LibDiamond.DiamondStorage storage) {\\r\\n        return LibDiamond.diamondStorage();\\r\\n    }\\r\\n\\r\\n    \\r\\n    function lw() internal pure returns (LeafWalletStorage storage cs) {\\r\\n        bytes32 position = keccak256(\\\"leafwallet.contract.storage\\\");\\r\\n        assembly {\\r\\n           cs.slot := position\\r\\n        }\\r\\n    }\\r\\n}\",\"keccak256\":\"0xdf2fb80f5b3fd1b3fbaa4481353d252834072978fd4eb242b4ab23f894bafd16\",\"license\":\"MIT\"},\"hardhat-deploy/solc_0.8/diamond/interfaces/IDiamondCut.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\ninterface IDiamondCut {\\n    enum FacetCutAction {Add, Replace, Remove}\\n    // Add=0, Replace=1, Remove=2\\n\\n    struct FacetCut {\\n        address facetAddress;\\n        FacetCutAction action;\\n        bytes4[] functionSelectors;\\n    }\\n\\n    /// @notice Add/replace/remove any number of functions and optionally execute\\n    ///         a function with delegatecall\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\n    /// @param _init The address of the contract or facet to execute _calldata\\n    /// @param _calldata A function call, including function selector and arguments\\n    ///                  _calldata is executed with delegatecall on _init\\n    function diamondCut(\\n        FacetCut[] calldata _diamondCut,\\n        address _init,\\n        bytes calldata _calldata\\n    ) external;\\n\\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\\n}\\n\",\"keccak256\":\"0xc00c16bfa30a3fa5f3dc684f7f8ba62c259962b25f647d9588739458989717fc\",\"license\":\"MIT\"},\"hardhat-deploy/solc_0.8/diamond/libraries/LibDiamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\nimport { IDiamondCut } from \\\"../interfaces/IDiamondCut.sol\\\";\\n\\nlibrary LibDiamond {\\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\\\"diamond.standard.diamond.storage\\\");\\n\\n    struct FacetAddressAndPosition {\\n        address facetAddress;\\n        uint96 functionSelectorPosition; // position in facetFunctionSelectors.functionSelectors array\\n    }\\n\\n    struct FacetFunctionSelectors {\\n        bytes4[] functionSelectors;\\n        uint256 facetAddressPosition; // position of facetAddress in facetAddresses array\\n    }\\n\\n    struct DiamondStorage {\\n        // maps function selector to the facet address and\\n        // the position of the selector in the facetFunctionSelectors.selectors array\\n        mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\\n        // maps facet addresses to function selectors\\n        mapping(address => FacetFunctionSelectors) facetFunctionSelectors;\\n        // facet addresses\\n        address[] facetAddresses;\\n        // Used to query if a contract implements an interface.\\n        // Used to implement ERC-165.\\n        mapping(bytes4 => bool) supportedInterfaces;\\n        // owner of the contract\\n        address contractOwner;\\n    }\\n\\n    function diamondStorage() internal pure returns (DiamondStorage storage ds) {\\n        bytes32 position = DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n    }\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    function setContractOwner(address _newOwner) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        address previousOwner = ds.contractOwner;\\n        ds.contractOwner = _newOwner;\\n        emit OwnershipTransferred(previousOwner, _newOwner);\\n    }\\n\\n    function contractOwner() internal view returns (address contractOwner_) {\\n        contractOwner_ = diamondStorage().contractOwner;\\n    }\\n\\n    function enforceIsContractOwner() internal view {\\n        require(msg.sender == diamondStorage().contractOwner, \\\"LibDiamond: Must be contract owner\\\");\\n    }\\n\\n    event DiamondCut(IDiamondCut.FacetCut[] _diamondCut, address _init, bytes _calldata);\\n\\n    // Internal function version of diamondCut\\n    function diamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        for (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\\n            IDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\\n            if (action == IDiamondCut.FacetCutAction.Add) {\\n                addFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Replace) {\\n                replaceFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Remove) {\\n                removeFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else {\\n                revert(\\\"LibDiamondCut: Incorrect FacetCutAction\\\");\\n            }\\n        }\\n        emit DiamondCut(_diamondCut, _init, _calldata);\\n        initializeDiamondCut(_init, _calldata);\\n    }\\n\\n    function addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();        \\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            addFacet(ds, _facetAddress);            \\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress == address(0), \\\"LibDiamondCut: Can't add function that already exists\\\");\\n            addFunction(ds, selector, selectorPosition, _facetAddress);\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            addFacet(ds, _facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress != _facetAddress, \\\"LibDiamondCut: Can't replace function with same function\\\");\\n            removeFunction(ds, oldFacetAddress, selector);\\n            addFunction(ds, selector, selectorPosition, _facetAddress);\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // if function does not exist then do nothing and return\\n        require(_facetAddress == address(0), \\\"LibDiamondCut: Remove facet address must be address(0)\\\");\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            removeFunction(ds, oldFacetAddress, selector);\\n        }\\n    }\\n\\n    function addFacet(DiamondStorage storage ds, address _facetAddress) internal {\\n        enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n        ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = ds.facetAddresses.length;\\n        ds.facetAddresses.push(_facetAddress);\\n    }    \\n\\n\\n    function addFunction(DiamondStorage storage ds, bytes4 _selector, uint96 _selectorPosition, address _facetAddress) internal {\\n        ds.selectorToFacetAndPosition[_selector].functionSelectorPosition = _selectorPosition;\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(_selector);\\n        ds.selectorToFacetAndPosition[_selector].facetAddress = _facetAddress;\\n    }\\n\\n    function removeFunction(DiamondStorage storage ds, address _facetAddress, bytes4 _selector) internal {        \\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Can't remove function that doesn't exist\\\");\\n        // an immutable function is a function defined directly in a diamond\\n        require(_facetAddress != address(this), \\\"LibDiamondCut: Can't remove immutable function\\\");\\n        // replace selector with last selector, then delete last selector\\n        uint256 selectorPosition = ds.selectorToFacetAndPosition[_selector].functionSelectorPosition;\\n        uint256 lastSelectorPosition = ds.facetFunctionSelectors[_facetAddress].functionSelectors.length - 1;\\n        // if not the same then replace _selector with lastSelector\\n        if (selectorPosition != lastSelectorPosition) {\\n            bytes4 lastSelector = ds.facetFunctionSelectors[_facetAddress].functionSelectors[lastSelectorPosition];\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors[selectorPosition] = lastSelector;\\n            ds.selectorToFacetAndPosition[lastSelector].functionSelectorPosition = uint96(selectorPosition);\\n        }\\n        // delete the last selector\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.pop();\\n        delete ds.selectorToFacetAndPosition[_selector];\\n\\n        // if no more selectors for facet address then delete the facet address\\n        if (lastSelectorPosition == 0) {\\n            // replace facet address with last facet address and delete last facet address\\n            uint256 lastFacetAddressPosition = ds.facetAddresses.length - 1;\\n            uint256 facetAddressPosition = ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n            if (facetAddressPosition != lastFacetAddressPosition) {\\n                address lastFacetAddress = ds.facetAddresses[lastFacetAddressPosition];\\n                ds.facetAddresses[facetAddressPosition] = lastFacetAddress;\\n                ds.facetFunctionSelectors[lastFacetAddress].facetAddressPosition = facetAddressPosition;\\n            }\\n            ds.facetAddresses.pop();\\n            delete ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n        }\\n    }\\n\\n    function initializeDiamondCut(address _init, bytes memory _calldata) internal {\\n        if (_init == address(0)) {\\n            require(_calldata.length == 0, \\\"LibDiamondCut: _init is address(0) but_calldata is not empty\\\");\\n        } else {\\n            require(_calldata.length > 0, \\\"LibDiamondCut: _calldata is empty but _init is not address(0)\\\");\\n            if (_init != address(this)) {\\n                enforceHasContractCode(_init, \\\"LibDiamondCut: _init address has no code\\\");\\n            }\\n            (bool success, bytes memory error) = _init.delegatecall(_calldata);\\n            if (!success) {\\n                if (error.length > 0) {\\n                    // bubble up the error\\n                    revert(string(error));\\n                } else {\\n                    revert(\\\"LibDiamondCut: _init function reverted\\\");\\n                }\\n            }\\n        }\\n    }\\n\\n    function enforceHasContractCode(address _contract, string memory _errorMessage) internal view {\\n        uint256 contractSize;\\n        assembly {\\n            contractSize := extcodesize(_contract)\\n        }\\n        require(contractSize > 0, _errorMessage);\\n    }\\n}\\n\",\"keccak256\":\"0x2205345e83eb86f5281f159a9215a096cb6d404782619f9b8e9d7a4a46c32a37\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/SusuwatariStorage.sol":{"StorageHandler":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601357603a908160198239f35b600080fdfe600080fdfea26469706673582212203e440956bb397797ee60007d02fa663e90a2b7fd4630f4a6a8765d64787aeaf864736f6c63430008120033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x13 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x19 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY PREVRANDAO MULMOD JUMP 0xBB CODECOPY PUSH24 0x97EE60007D02FA663E90A2B7FD4630F4A6A8765D64787AEA 0xF8 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"636:800:6:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212203e440956bb397797ee60007d02fa663e90a2b7fd4630f4a6a8765d64787aeaf864736f6c63430008120033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY PREVRANDAO MULMOD JUMP 0xBB CODECOPY PUSH24 0x97EE60007D02FA663E90A2B7FD4630F4A6A8765D64787AEA 0xF8 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"636:800:6:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"69","totalCost":"11669"},"internal":{"ds()":"infinite","lw()":"infinite","os()":"infinite","susu()":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SusuwatariStorage.sol\":\"StorageHandler\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/SusuwatariStorage.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\nimport {LibDiamond} from \\\"hardhat-deploy/solc_0.8/diamond/libraries/LibDiamond.sol\\\";\\r\\n\\r\\nbytes32 constant SUSUWATARI_STORAGE_POSITION = keccak256(\\\"susuwatari.contract.storage\\\");\\r\\nbytes32 constant LEAFWALLET_STORAGE_POSITION = keccak256(\\\"leafwallet.contract.storage\\\");\\r\\n\\r\\nstruct OwnableStorage {\\r\\n\\r\\n    address _owner;\\r\\n}\\r\\n\\r\\nstruct SusuwatariStorage {\\r\\n    \\r\\n\\r\\n  bool isInitialized;\\r\\n}\\r\\n\\r\\nstruct LeafWalletStorage {\\r\\n    mapping(address => address) _deviceOwner;\\r\\n    mapping(address => address[]) _ownerDevices;\\r\\n    mapping(address => uint256) _deviceActivationCodes;\\r\\n}\\r\\n\\r\\ncontract StorageHandler {\\r\\n    function susu() internal pure returns (SusuwatariStorage storage cs) {\\r\\n        bytes32 position = SUSUWATARI_STORAGE_POSITION;\\r\\n        assembly {\\r\\n           cs.slot := position\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function os() internal pure returns (OwnableStorage storage cs) {\\r\\n        bytes32 position = keccak256(\\\"ownable.contract.storage\\\");\\r\\n        assembly {\\r\\n           cs.slot := position\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    function ds() internal pure returns (LibDiamond.DiamondStorage storage) {\\r\\n        return LibDiamond.diamondStorage();\\r\\n    }\\r\\n\\r\\n    \\r\\n    function lw() internal pure returns (LeafWalletStorage storage cs) {\\r\\n        bytes32 position = keccak256(\\\"leafwallet.contract.storage\\\");\\r\\n        assembly {\\r\\n           cs.slot := position\\r\\n        }\\r\\n    }\\r\\n}\",\"keccak256\":\"0xdf2fb80f5b3fd1b3fbaa4481353d252834072978fd4eb242b4ab23f894bafd16\",\"license\":\"MIT\"},\"hardhat-deploy/solc_0.8/diamond/interfaces/IDiamondCut.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\ninterface IDiamondCut {\\n    enum FacetCutAction {Add, Replace, Remove}\\n    // Add=0, Replace=1, Remove=2\\n\\n    struct FacetCut {\\n        address facetAddress;\\n        FacetCutAction action;\\n        bytes4[] functionSelectors;\\n    }\\n\\n    /// @notice Add/replace/remove any number of functions and optionally execute\\n    ///         a function with delegatecall\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\n    /// @param _init The address of the contract or facet to execute _calldata\\n    /// @param _calldata A function call, including function selector and arguments\\n    ///                  _calldata is executed with delegatecall on _init\\n    function diamondCut(\\n        FacetCut[] calldata _diamondCut,\\n        address _init,\\n        bytes calldata _calldata\\n    ) external;\\n\\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\\n}\\n\",\"keccak256\":\"0xc00c16bfa30a3fa5f3dc684f7f8ba62c259962b25f647d9588739458989717fc\",\"license\":\"MIT\"},\"hardhat-deploy/solc_0.8/diamond/libraries/LibDiamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\nimport { IDiamondCut } from \\\"../interfaces/IDiamondCut.sol\\\";\\n\\nlibrary LibDiamond {\\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\\\"diamond.standard.diamond.storage\\\");\\n\\n    struct FacetAddressAndPosition {\\n        address facetAddress;\\n        uint96 functionSelectorPosition; // position in facetFunctionSelectors.functionSelectors array\\n    }\\n\\n    struct FacetFunctionSelectors {\\n        bytes4[] functionSelectors;\\n        uint256 facetAddressPosition; // position of facetAddress in facetAddresses array\\n    }\\n\\n    struct DiamondStorage {\\n        // maps function selector to the facet address and\\n        // the position of the selector in the facetFunctionSelectors.selectors array\\n        mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\\n        // maps facet addresses to function selectors\\n        mapping(address => FacetFunctionSelectors) facetFunctionSelectors;\\n        // facet addresses\\n        address[] facetAddresses;\\n        // Used to query if a contract implements an interface.\\n        // Used to implement ERC-165.\\n        mapping(bytes4 => bool) supportedInterfaces;\\n        // owner of the contract\\n        address contractOwner;\\n    }\\n\\n    function diamondStorage() internal pure returns (DiamondStorage storage ds) {\\n        bytes32 position = DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n    }\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    function setContractOwner(address _newOwner) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        address previousOwner = ds.contractOwner;\\n        ds.contractOwner = _newOwner;\\n        emit OwnershipTransferred(previousOwner, _newOwner);\\n    }\\n\\n    function contractOwner() internal view returns (address contractOwner_) {\\n        contractOwner_ = diamondStorage().contractOwner;\\n    }\\n\\n    function enforceIsContractOwner() internal view {\\n        require(msg.sender == diamondStorage().contractOwner, \\\"LibDiamond: Must be contract owner\\\");\\n    }\\n\\n    event DiamondCut(IDiamondCut.FacetCut[] _diamondCut, address _init, bytes _calldata);\\n\\n    // Internal function version of diamondCut\\n    function diamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        for (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\\n            IDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\\n            if (action == IDiamondCut.FacetCutAction.Add) {\\n                addFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Replace) {\\n                replaceFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Remove) {\\n                removeFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else {\\n                revert(\\\"LibDiamondCut: Incorrect FacetCutAction\\\");\\n            }\\n        }\\n        emit DiamondCut(_diamondCut, _init, _calldata);\\n        initializeDiamondCut(_init, _calldata);\\n    }\\n\\n    function addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();        \\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            addFacet(ds, _facetAddress);            \\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress == address(0), \\\"LibDiamondCut: Can't add function that already exists\\\");\\n            addFunction(ds, selector, selectorPosition, _facetAddress);\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            addFacet(ds, _facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress != _facetAddress, \\\"LibDiamondCut: Can't replace function with same function\\\");\\n            removeFunction(ds, oldFacetAddress, selector);\\n            addFunction(ds, selector, selectorPosition, _facetAddress);\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // if function does not exist then do nothing and return\\n        require(_facetAddress == address(0), \\\"LibDiamondCut: Remove facet address must be address(0)\\\");\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            removeFunction(ds, oldFacetAddress, selector);\\n        }\\n    }\\n\\n    function addFacet(DiamondStorage storage ds, address _facetAddress) internal {\\n        enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n        ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = ds.facetAddresses.length;\\n        ds.facetAddresses.push(_facetAddress);\\n    }    \\n\\n\\n    function addFunction(DiamondStorage storage ds, bytes4 _selector, uint96 _selectorPosition, address _facetAddress) internal {\\n        ds.selectorToFacetAndPosition[_selector].functionSelectorPosition = _selectorPosition;\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(_selector);\\n        ds.selectorToFacetAndPosition[_selector].facetAddress = _facetAddress;\\n    }\\n\\n    function removeFunction(DiamondStorage storage ds, address _facetAddress, bytes4 _selector) internal {        \\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Can't remove function that doesn't exist\\\");\\n        // an immutable function is a function defined directly in a diamond\\n        require(_facetAddress != address(this), \\\"LibDiamondCut: Can't remove immutable function\\\");\\n        // replace selector with last selector, then delete last selector\\n        uint256 selectorPosition = ds.selectorToFacetAndPosition[_selector].functionSelectorPosition;\\n        uint256 lastSelectorPosition = ds.facetFunctionSelectors[_facetAddress].functionSelectors.length - 1;\\n        // if not the same then replace _selector with lastSelector\\n        if (selectorPosition != lastSelectorPosition) {\\n            bytes4 lastSelector = ds.facetFunctionSelectors[_facetAddress].functionSelectors[lastSelectorPosition];\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors[selectorPosition] = lastSelector;\\n            ds.selectorToFacetAndPosition[lastSelector].functionSelectorPosition = uint96(selectorPosition);\\n        }\\n        // delete the last selector\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.pop();\\n        delete ds.selectorToFacetAndPosition[_selector];\\n\\n        // if no more selectors for facet address then delete the facet address\\n        if (lastSelectorPosition == 0) {\\n            // replace facet address with last facet address and delete last facet address\\n            uint256 lastFacetAddressPosition = ds.facetAddresses.length - 1;\\n            uint256 facetAddressPosition = ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n            if (facetAddressPosition != lastFacetAddressPosition) {\\n                address lastFacetAddress = ds.facetAddresses[lastFacetAddressPosition];\\n                ds.facetAddresses[facetAddressPosition] = lastFacetAddress;\\n                ds.facetFunctionSelectors[lastFacetAddress].facetAddressPosition = facetAddressPosition;\\n            }\\n            ds.facetAddresses.pop();\\n            delete ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n        }\\n    }\\n\\n    function initializeDiamondCut(address _init, bytes memory _calldata) internal {\\n        if (_init == address(0)) {\\n            require(_calldata.length == 0, \\\"LibDiamondCut: _init is address(0) but_calldata is not empty\\\");\\n        } else {\\n            require(_calldata.length > 0, \\\"LibDiamondCut: _calldata is empty but _init is not address(0)\\\");\\n            if (_init != address(this)) {\\n                enforceHasContractCode(_init, \\\"LibDiamondCut: _init address has no code\\\");\\n            }\\n            (bool success, bytes memory error) = _init.delegatecall(_calldata);\\n            if (!success) {\\n                if (error.length > 0) {\\n                    // bubble up the error\\n                    revert(string(error));\\n                } else {\\n                    revert(\\\"LibDiamondCut: _init function reverted\\\");\\n                }\\n            }\\n        }\\n    }\\n\\n    function enforceHasContractCode(address _contract, string memory _errorMessage) internal view {\\n        uint256 contractSize;\\n        assembly {\\n            contractSize := extcodesize(_contract)\\n        }\\n        require(contractSize > 0, _errorMessage);\\n    }\\n}\\n\",\"keccak256\":\"0x2205345e83eb86f5281f159a9215a096cb6d404782619f9b8e9d7a4a46c32a37\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"hardhat-deploy/solc_0.8/diamond/interfaces/IDiamondCut.sol":{"IDiamondCut":{"abi":[{"anonymous":false,"inputs":[{"components":[{"internalType":"address","name":"facetAddress","type":"address"},{"internalType":"enum IDiamondCut.FacetCutAction","name":"action","type":"uint8"},{"internalType":"bytes4[]","name":"functionSelectors","type":"bytes4[]"}],"indexed":false,"internalType":"struct IDiamondCut.FacetCut[]","name":"_diamondCut","type":"tuple[]"},{"indexed":false,"internalType":"address","name":"_init","type":"address"},{"indexed":false,"internalType":"bytes","name":"_calldata","type":"bytes"}],"name":"DiamondCut","type":"event"},{"inputs":[{"components":[{"internalType":"address","name":"facetAddress","type":"address"},{"internalType":"enum IDiamondCut.FacetCutAction","name":"action","type":"uint8"},{"internalType":"bytes4[]","name":"functionSelectors","type":"bytes4[]"}],"internalType":"struct IDiamondCut.FacetCut[]","name":"_diamondCut","type":"tuple[]"},{"internalType":"address","name":"_init","type":"address"},{"internalType":"bytes","name":"_calldata","type":"bytes"}],"name":"diamondCut","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"diamondCut((address,uint8,bytes4[])[],address,bytes)":{"params":{"_calldata":"A function call, including function selector and arguments                  _calldata is executed with delegatecall on _init","_diamondCut":"Contains the facet addresses and function selectors","_init":"The address of the contract or facet to execute _calldata"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"diamondCut((address,uint8,bytes4[])[],address,bytes)":"1f931c1c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"diamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"params\":{\"_calldata\":\"A function call, including function selector and arguments                  _calldata is executed with delegatecall on _init\",\"_diamondCut\":\"Contains the facet addresses and function selectors\",\"_init\":\"The address of the contract or facet to execute _calldata\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"notice\":\"Add/replace/remove any number of functions and optionally execute         a function with delegatecall\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hardhat-deploy/solc_0.8/diamond/interfaces/IDiamondCut.sol\":\"IDiamondCut\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"hardhat-deploy/solc_0.8/diamond/interfaces/IDiamondCut.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\ninterface IDiamondCut {\\n    enum FacetCutAction {Add, Replace, Remove}\\n    // Add=0, Replace=1, Remove=2\\n\\n    struct FacetCut {\\n        address facetAddress;\\n        FacetCutAction action;\\n        bytes4[] functionSelectors;\\n    }\\n\\n    /// @notice Add/replace/remove any number of functions and optionally execute\\n    ///         a function with delegatecall\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\n    /// @param _init The address of the contract or facet to execute _calldata\\n    /// @param _calldata A function call, including function selector and arguments\\n    ///                  _calldata is executed with delegatecall on _init\\n    function diamondCut(\\n        FacetCut[] calldata _diamondCut,\\n        address _init,\\n        bytes calldata _calldata\\n    ) external;\\n\\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\\n}\\n\",\"keccak256\":\"0xc00c16bfa30a3fa5f3dc684f7f8ba62c259962b25f647d9588739458989717fc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"diamondCut((address,uint8,bytes4[])[],address,bytes)":{"notice":"Add/replace/remove any number of functions and optionally execute         a function with delegatecall"}},"version":1}}},"hardhat-deploy/solc_0.8/diamond/libraries/LibDiamond.sol":{"LibDiamond":{"abi":[{"anonymous":false,"inputs":[{"components":[{"internalType":"address","name":"facetAddress","type":"address"},{"internalType":"enum IDiamondCut.FacetCutAction","name":"action","type":"uint8"},{"internalType":"bytes4[]","name":"functionSelectors","type":"bytes4[]"}],"indexed":false,"internalType":"struct IDiamondCut.FacetCut[]","name":"_diamondCut","type":"tuple[]"},{"indexed":false,"internalType":"address","name":"_init","type":"address"},{"indexed":false,"internalType":"bytes","name":"_calldata","type":"bytes"}],"name":"DiamondCut","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220d907a75c39c496108a6007db2f02a15ef24617a43a6b33eff0a2c079844aed6564736f6c63430008120033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 SMOD 0xA7 0x5C CODECOPY 0xC4 SWAP7 LT DUP11 PUSH1 0x7 0xDB 0x2F MUL LOG1 0x5E CALLCODE CHAINID OR LOG4 GASPRICE PUSH12 0x33EFF0A2C079844AED656473 PUSH16 0x6C634300081200330000000000000000 ","sourceMap":"423:10258:8:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220d907a75c39c496108a6007db2f02a15ef24617a43a6b33eff0a2c079844aed6564736f6c63430008120033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 SMOD 0xA7 0x5C CODECOPY 0xC4 SWAP7 LT DUP11 PUSH1 0x7 0xDB 0x2F MUL LOG1 0x5E CALLCODE CHAINID OR LOG4 GASPRICE PUSH12 0x33EFF0A2C079844AED656473 PUSH16 0x6C634300081200330000000000000000 ","sourceMap":"423:10258:8:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"addFacet(struct LibDiamond.DiamondStorage storage pointer,address)":"infinite","addFunction(struct LibDiamond.DiamondStorage storage pointer,bytes4,uint96,address)":"infinite","addFunctions(address,bytes4[] memory)":"infinite","contractOwner()":"infinite","diamondCut(struct IDiamondCut.FacetCut memory[] memory,address,bytes memory)":"infinite","diamondStorage()":"infinite","enforceHasContractCode(address,string memory)":"infinite","enforceIsContractOwner()":"infinite","initializeDiamondCut(address,bytes memory)":"infinite","removeFunction(struct LibDiamond.DiamondStorage storage pointer,address,bytes4)":"infinite","removeFunctions(address,bytes4[] memory)":"infinite","replaceFunctions(address,bytes4[] memory)":"infinite","setContractOwner(address)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hardhat-deploy/solc_0.8/diamond/libraries/LibDiamond.sol\":\"LibDiamond\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"hardhat-deploy/solc_0.8/diamond/interfaces/IDiamondCut.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\ninterface IDiamondCut {\\n    enum FacetCutAction {Add, Replace, Remove}\\n    // Add=0, Replace=1, Remove=2\\n\\n    struct FacetCut {\\n        address facetAddress;\\n        FacetCutAction action;\\n        bytes4[] functionSelectors;\\n    }\\n\\n    /// @notice Add/replace/remove any number of functions and optionally execute\\n    ///         a function with delegatecall\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\n    /// @param _init The address of the contract or facet to execute _calldata\\n    /// @param _calldata A function call, including function selector and arguments\\n    ///                  _calldata is executed with delegatecall on _init\\n    function diamondCut(\\n        FacetCut[] calldata _diamondCut,\\n        address _init,\\n        bytes calldata _calldata\\n    ) external;\\n\\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\\n}\\n\",\"keccak256\":\"0xc00c16bfa30a3fa5f3dc684f7f8ba62c259962b25f647d9588739458989717fc\",\"license\":\"MIT\"},\"hardhat-deploy/solc_0.8/diamond/libraries/LibDiamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\nimport { IDiamondCut } from \\\"../interfaces/IDiamondCut.sol\\\";\\n\\nlibrary LibDiamond {\\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\\\"diamond.standard.diamond.storage\\\");\\n\\n    struct FacetAddressAndPosition {\\n        address facetAddress;\\n        uint96 functionSelectorPosition; // position in facetFunctionSelectors.functionSelectors array\\n    }\\n\\n    struct FacetFunctionSelectors {\\n        bytes4[] functionSelectors;\\n        uint256 facetAddressPosition; // position of facetAddress in facetAddresses array\\n    }\\n\\n    struct DiamondStorage {\\n        // maps function selector to the facet address and\\n        // the position of the selector in the facetFunctionSelectors.selectors array\\n        mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\\n        // maps facet addresses to function selectors\\n        mapping(address => FacetFunctionSelectors) facetFunctionSelectors;\\n        // facet addresses\\n        address[] facetAddresses;\\n        // Used to query if a contract implements an interface.\\n        // Used to implement ERC-165.\\n        mapping(bytes4 => bool) supportedInterfaces;\\n        // owner of the contract\\n        address contractOwner;\\n    }\\n\\n    function diamondStorage() internal pure returns (DiamondStorage storage ds) {\\n        bytes32 position = DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n    }\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    function setContractOwner(address _newOwner) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        address previousOwner = ds.contractOwner;\\n        ds.contractOwner = _newOwner;\\n        emit OwnershipTransferred(previousOwner, _newOwner);\\n    }\\n\\n    function contractOwner() internal view returns (address contractOwner_) {\\n        contractOwner_ = diamondStorage().contractOwner;\\n    }\\n\\n    function enforceIsContractOwner() internal view {\\n        require(msg.sender == diamondStorage().contractOwner, \\\"LibDiamond: Must be contract owner\\\");\\n    }\\n\\n    event DiamondCut(IDiamondCut.FacetCut[] _diamondCut, address _init, bytes _calldata);\\n\\n    // Internal function version of diamondCut\\n    function diamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        for (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\\n            IDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\\n            if (action == IDiamondCut.FacetCutAction.Add) {\\n                addFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Replace) {\\n                replaceFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Remove) {\\n                removeFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else {\\n                revert(\\\"LibDiamondCut: Incorrect FacetCutAction\\\");\\n            }\\n        }\\n        emit DiamondCut(_diamondCut, _init, _calldata);\\n        initializeDiamondCut(_init, _calldata);\\n    }\\n\\n    function addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();        \\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            addFacet(ds, _facetAddress);            \\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress == address(0), \\\"LibDiamondCut: Can't add function that already exists\\\");\\n            addFunction(ds, selector, selectorPosition, _facetAddress);\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            addFacet(ds, _facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress != _facetAddress, \\\"LibDiamondCut: Can't replace function with same function\\\");\\n            removeFunction(ds, oldFacetAddress, selector);\\n            addFunction(ds, selector, selectorPosition, _facetAddress);\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // if function does not exist then do nothing and return\\n        require(_facetAddress == address(0), \\\"LibDiamondCut: Remove facet address must be address(0)\\\");\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            removeFunction(ds, oldFacetAddress, selector);\\n        }\\n    }\\n\\n    function addFacet(DiamondStorage storage ds, address _facetAddress) internal {\\n        enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n        ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = ds.facetAddresses.length;\\n        ds.facetAddresses.push(_facetAddress);\\n    }    \\n\\n\\n    function addFunction(DiamondStorage storage ds, bytes4 _selector, uint96 _selectorPosition, address _facetAddress) internal {\\n        ds.selectorToFacetAndPosition[_selector].functionSelectorPosition = _selectorPosition;\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(_selector);\\n        ds.selectorToFacetAndPosition[_selector].facetAddress = _facetAddress;\\n    }\\n\\n    function removeFunction(DiamondStorage storage ds, address _facetAddress, bytes4 _selector) internal {        \\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Can't remove function that doesn't exist\\\");\\n        // an immutable function is a function defined directly in a diamond\\n        require(_facetAddress != address(this), \\\"LibDiamondCut: Can't remove immutable function\\\");\\n        // replace selector with last selector, then delete last selector\\n        uint256 selectorPosition = ds.selectorToFacetAndPosition[_selector].functionSelectorPosition;\\n        uint256 lastSelectorPosition = ds.facetFunctionSelectors[_facetAddress].functionSelectors.length - 1;\\n        // if not the same then replace _selector with lastSelector\\n        if (selectorPosition != lastSelectorPosition) {\\n            bytes4 lastSelector = ds.facetFunctionSelectors[_facetAddress].functionSelectors[lastSelectorPosition];\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors[selectorPosition] = lastSelector;\\n            ds.selectorToFacetAndPosition[lastSelector].functionSelectorPosition = uint96(selectorPosition);\\n        }\\n        // delete the last selector\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.pop();\\n        delete ds.selectorToFacetAndPosition[_selector];\\n\\n        // if no more selectors for facet address then delete the facet address\\n        if (lastSelectorPosition == 0) {\\n            // replace facet address with last facet address and delete last facet address\\n            uint256 lastFacetAddressPosition = ds.facetAddresses.length - 1;\\n            uint256 facetAddressPosition = ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n            if (facetAddressPosition != lastFacetAddressPosition) {\\n                address lastFacetAddress = ds.facetAddresses[lastFacetAddressPosition];\\n                ds.facetAddresses[facetAddressPosition] = lastFacetAddress;\\n                ds.facetFunctionSelectors[lastFacetAddress].facetAddressPosition = facetAddressPosition;\\n            }\\n            ds.facetAddresses.pop();\\n            delete ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n        }\\n    }\\n\\n    function initializeDiamondCut(address _init, bytes memory _calldata) internal {\\n        if (_init == address(0)) {\\n            require(_calldata.length == 0, \\\"LibDiamondCut: _init is address(0) but_calldata is not empty\\\");\\n        } else {\\n            require(_calldata.length > 0, \\\"LibDiamondCut: _calldata is empty but _init is not address(0)\\\");\\n            if (_init != address(this)) {\\n                enforceHasContractCode(_init, \\\"LibDiamondCut: _init address has no code\\\");\\n            }\\n            (bool success, bytes memory error) = _init.delegatecall(_calldata);\\n            if (!success) {\\n                if (error.length > 0) {\\n                    // bubble up the error\\n                    revert(string(error));\\n                } else {\\n                    revert(\\\"LibDiamondCut: _init function reverted\\\");\\n                }\\n            }\\n        }\\n    }\\n\\n    function enforceHasContractCode(address _contract, string memory _errorMessage) internal view {\\n        uint256 contractSize;\\n        assembly {\\n            contractSize := extcodesize(_contract)\\n        }\\n        require(contractSize > 0, _errorMessage);\\n    }\\n}\\n\",\"keccak256\":\"0x2205345e83eb86f5281f159a9215a096cb6d404782619f9b8e9d7a4a46c32a37\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}