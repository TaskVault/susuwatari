/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ILeafWalletRegistryActivate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILeafWalletRegistryActivate__factory>;
    getContractFactory(
      name: "ILeafWalletRegistryBasic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILeafWalletRegistryBasic__factory>;
    getContractFactory(
      name: "ILeafWalletRegistryCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILeafWalletRegistryCore__factory>;
    getContractFactory(
      name: "InitFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InitFacet__factory>;
    getContractFactory(
      name: "LeafWalletRegistryActivate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LeafWalletRegistryActivate__factory>;
    getContractFactory(
      name: "LeafWalletRegistryBasic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LeafWalletRegistryBasic__factory>;
    getContractFactory(
      name: "LeafWalletRegistryCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LeafWalletRegistryCore__factory>;
    getContractFactory(
      name: "SusuwatariLeafWalletFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SusuwatariLeafWalletFacet__factory>;
    getContractFactory(
      name: "SusuwatariLeafWalletTrialFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SusuwatariLeafWalletTrialFacet__factory>;
    getContractFactory(
      name: "IDiamondCut",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondCut__factory>;
    getContractFactory(
      name: "IDiamondLoupe",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondLoupe__factory>;
    getContractFactory(
      name: "LibDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibDiamond__factory>;

    getContractAt(
      name: "ILeafWalletRegistryActivate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILeafWalletRegistryActivate>;
    getContractAt(
      name: "ILeafWalletRegistryBasic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILeafWalletRegistryBasic>;
    getContractAt(
      name: "ILeafWalletRegistryCore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILeafWalletRegistryCore>;
    getContractAt(
      name: "InitFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InitFacet>;
    getContractAt(
      name: "LeafWalletRegistryActivate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LeafWalletRegistryActivate>;
    getContractAt(
      name: "LeafWalletRegistryBasic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LeafWalletRegistryBasic>;
    getContractAt(
      name: "LeafWalletRegistryCore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LeafWalletRegistryCore>;
    getContractAt(
      name: "SusuwatariLeafWalletFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SusuwatariLeafWalletFacet>;
    getContractAt(
      name: "SusuwatariLeafWalletTrialFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SusuwatariLeafWalletTrialFacet>;
    getContractAt(
      name: "IDiamondCut",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondCut>;
    getContractAt(
      name: "IDiamondLoupe",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondLoupe>;
    getContractAt(
      name: "LibDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibDiamond>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
