/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { BaseContract, BigNumber, Signer, utils } from "ethers";
import type { EventFragment } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../common";

export interface LibSusuwatariInterface extends utils.Interface {
  functions: {};

  events: {
    "DroppedSusu(uint64,uint64,uint64,uint256,uint256)": EventFragment;
    "MintedSusu(uint256,string,address,uint8)": EventFragment;
    "PickedUpSusu(uint256,uint64,string,address,address,uint8)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "DroppedSusu"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MintedSusu"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PickedUpSusu"): EventFragment;
}

export interface DroppedSusuEventObject {
  originLocation: BigNumber;
  currentLocation: BigNumber;
  destination: BigNumber;
  tokenId: BigNumber;
  team: BigNumber;
}
export type DroppedSusuEvent = TypedEvent<
  [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber],
  DroppedSusuEventObject
>;

export type DroppedSusuEventFilter = TypedEventFilter<DroppedSusuEvent>;

export interface MintedSusuEventObject {
  tokenId: BigNumber;
  message: string;
  owner: string;
  team: number;
}
export type MintedSusuEvent = TypedEvent<
  [BigNumber, string, string, number],
  MintedSusuEventObject
>;

export type MintedSusuEventFilter = TypedEventFilter<MintedSusuEvent>;

export interface PickedUpSusuEventObject {
  tokenId: BigNumber;
  location: BigNumber;
  message: string;
  sender: string;
  owner: string;
  team: number;
}
export type PickedUpSusuEvent = TypedEvent<
  [BigNumber, BigNumber, string, string, string, number],
  PickedUpSusuEventObject
>;

export type PickedUpSusuEventFilter = TypedEventFilter<PickedUpSusuEvent>;

export interface LibSusuwatari extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: LibSusuwatariInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    "DroppedSusu(uint64,uint64,uint64,uint256,uint256)"(
      originLocation?: null,
      currentLocation?: null,
      destination?: null,
      tokenId?: null,
      team?: null
    ): DroppedSusuEventFilter;
    DroppedSusu(
      originLocation?: null,
      currentLocation?: null,
      destination?: null,
      tokenId?: null,
      team?: null
    ): DroppedSusuEventFilter;

    "MintedSusu(uint256,string,address,uint8)"(
      tokenId?: null,
      message?: null,
      owner?: null,
      team?: null
    ): MintedSusuEventFilter;
    MintedSusu(
      tokenId?: null,
      message?: null,
      owner?: null,
      team?: null
    ): MintedSusuEventFilter;

    "PickedUpSusu(uint256,uint64,string,address,address,uint8)"(
      tokenId?: null,
      location?: null,
      message?: null,
      sender?: null,
      owner?: null,
      team?: null
    ): PickedUpSusuEventFilter;
    PickedUpSusu(
      tokenId?: null,
      location?: null,
      message?: null,
      sender?: null,
      owner?: null,
      team?: null
    ): PickedUpSusuEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
