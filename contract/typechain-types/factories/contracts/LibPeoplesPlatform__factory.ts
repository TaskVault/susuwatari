/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  LibPeoplesPlatform,
  LibPeoplesPlatformInterface,
} from "../../contracts/LibPeoplesPlatform";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
    ],
    name: "getDaysInMonth",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getMonth",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getYear",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
    ],
    name: "isLeapYear",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "year",
        type: "uint256",
      },
    ],
    name: "leapYearsBefore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001a576106e99081610021823930815050f35b50600080fdfe6040608081526004361015610015575b50600080fd5b60003560e01c806392d66313146100e5578063a324ad24146100cf578063a6f0e577146100a8578063b1999937146100835763b238ad0e146100565761000f565b61007f9061006c61006636610146565b906105cd565b905160ff90911681529081906020820190565b0390f35b5061007f906100996100943661010f565b61025f565b90519081529081906020820190565b5061007f906100be6100b936610121565b61017b565b905190151581529081906020820190565b5061007f9061006c6100e03661010f565b610479565b5061007f906100fb6100f63661010f565b6103a8565b905161ffff90911681529081906020820190565b602090600319011261000f5760043590565b602090600319011261000f5760043561ffff811681141561013f5790565b5050600080fd5b604090600319011261000f5760043560ff811681141561013f579060243561ffff81168114156101735790565b505050600080fd5b600381166101ae5761ffff8091168160648206166101a7576101909006166101a257600190565b600090565b5050600190565b50600090565b50634e487b7160e01b600052601160045260246000fd5b6301e1338081106101e1575b6301e1337f190190565b6101e96101b4565b6101d7565b6301e285008110610204575b6301e284ff190190565b61020c6101b4565b6101fa565b6101dd8110610223575b6101dc190190565b61022b6101b4565b61021b565b81811061023b570390565b6102436101b4565b0390565b81198111610253570190565b61025b6101b4565b0190565b61028d906001811061029d575b600019018060021c906101906064820491828410610290575b049103610247565b90565b6102986101b4565b610285565b6102a56101b4565b61026c565b7c87d206500cf71c7a443cd6c7ebe38ec0b59488f085555dd275ba5624c781116001166102db575b6301e285000290565b6102e36101b4565b6102d2565b7c883148f5cb1270b85273b667ae1cfdf5d70ac5a1ecccd54fe15c297df38111600116610319575b6301e133800290565b6103216101b4565b610310565b7dc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab8111600116610357575b620151800290565b61035f6101b4565b61034f565b61ffff166107b2811061037a575b6107b1190190565b6103826101b4565b610372565b61ffff166001811061039b575b6000190190565b6103a36101b4565b610394565b6301e133808104906104126107b28319811161046c575b61ffff93849101169261040c6103d48561025f565b6101dd9081811061045f575b6101dc1981016103ef816102aa565b946103f989610364565b16908110610452575b96959603016102e8565b90610247565b82811161041f5750905090565b6104439061042f6100b984610387565b156104495761043d906101ee565b91610387565b90610412565b61043d906101cb565b61045a6101b4565b610402565b6104676101b4565b6103e0565b6104746101b4565b6103bf565b610481610578565b9061049661048e826103a8565b61ffff168352565b6104eb6104ba6104b56100946104ae865161ffff1690565b61ffff1690565b610211565b61040c6104e66104c9836102aa565b926104e16104ae6104dc895161ffff1690565b610364565b610230565b6102e8565b6001905b600c60ff83161115610509575b5050506020015160ff1690565b61052f61052a61052461051e875161ffff1690565b856105cd565b60ff1690565b610326565b908361053b8284610247565b11610559576105539161054d91610247565b916105bb565b906104ef565b5050602091509161057160ff938383019060ff169052565b91386104fc565b604051906040820182811067ffffffffffffffff8211176105a25760405260006020838281520152565b505050634e487b7160e01b600052604160045260246000fd5b60ff6001911660ff8114610253570190565b60ff1660018114801561069b575b8015610691575b8015610687575b801561067d575b8015610673575b8015610669575b1561060a575050601f90565b6004811490811561065e575b8115610653575b8115610648575b50156106305750601e90565b6106399061017b565b1561064357601d90565b601c90565b600b91501438610624565b60098114915061061d565b600681149150610616565b50600c81146105fe565b50600a81146105f7565b50600881146105f0565b50600781146105e9565b50600581146105e2565b50600381146105db56fea364697066735822122078a15abef96075d2d70f38e35f48103095d877c66d9f39a275eafa1b390a1b246c6578706572696d656e74616cf564736f6c634300080a0041";

type LibPeoplesPlatformConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LibPeoplesPlatformConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LibPeoplesPlatform__factory extends ContractFactory {
  constructor(...args: LibPeoplesPlatformConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LibPeoplesPlatform> {
    return super.deploy(overrides || {}) as Promise<LibPeoplesPlatform>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LibPeoplesPlatform {
    return super.attach(address) as LibPeoplesPlatform;
  }
  override connect(signer: Signer): LibPeoplesPlatform__factory {
    return super.connect(signer) as LibPeoplesPlatform__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibPeoplesPlatformInterface {
    return new utils.Interface(_abi) as LibPeoplesPlatformInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibPeoplesPlatform {
    return new Contract(address, _abi, signerOrProvider) as LibPeoplesPlatform;
  }
}
