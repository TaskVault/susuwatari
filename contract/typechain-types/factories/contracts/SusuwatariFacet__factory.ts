/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SusuwatariFacet,
  SusuwatariFacetInterface,
} from "../../contracts/SusuwatariFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "originLocation",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentLocation",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "destination",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "team",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "DroppedSusu",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "team",
        type: "uint8",
      },
    ],
    name: "MintedSusu",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "location",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "team",
        type: "uint8",
      },
    ],
    name: "PickedUpSusu",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "location",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "destination",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "aimInitialSusu",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "location",
        type: "uint256",
      },
    ],
    name: "dropSusu",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllSusuwataris",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct LibSusuwatari.SusuwatariInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaggedSusus",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "carrier",
            type: "address",
          },
        ],
        internalType: "struct LibSusuwatari.BaggedSusuInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentState",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "ownedTokens",
            type: "uint256[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "susuTokenId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "dropCooldownTime",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "ownerAddress",
                type: "address",
              },
            ],
            internalType: "struct BaggageSlot",
            name: "slot",
            type: "tuple",
          },
          {
            internalType: "uint8",
            name: "team",
            type: "uint8",
          },
        ],
        internalType: "struct UserState",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "giveSusuwatari",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "team",
        type: "uint8",
      },
    ],
    name: "registerMe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "location",
        type: "uint256",
      },
    ],
    name: "tryPickupSusu",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657611b59908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80632a9664c714611386578063378aa701146111255780637298c3c314610e80578063a6cd652314610ca6578063adc65c3814610a01578063c5b9c14114610838578063cda94eb4146104985763ef410cf91461007457600080fd5b346104935760803660031901126104935760643567ffffffffffffffff8111610493573660238201121561049357806004013567ffffffffffffffff81116103de57604051916100ce601f8301601f19166020018461153b565b8183523660248383010111610493578160009260246020930183860137830101526101036100fb3361160b565b5415156117af565b600435151580610478575b610117906117f4565b60043560001981019081116103f45761012f90611644565b905460039190911b1c6001600160a01b0316331480610445575b1561040a57600435600052600080516020611aa483398151915260205260406000209061012d60405160208101906101b5816101a7600435334287916054939183526001600160601b03199060601b16602083015260348201520190565b03601f19810183528261153b565b5190200661012c9081018091116103f457600683015560243560018301556024356002830155604435600383015580519167ffffffffffffffff83116103de5761020f8361020660048401546116ec565b60048401611726565b6020601f84116001146103505792807fd144ad124f19f42d8e72c22759ffa0941569c00e89e82a60e302397e7f2c44b494600091610345575b508160011b916000199060031b1c19161760048201555b600581016001600160601b0360a01b808254168255600435600052600080516020611ae48339815191526020526040600020818154169055600080516020611aa48339815191526020526040600020928084036102e6575b858560ff6102c4336115d2565b54166102e16040519283926004356044356024356024358761177a565b0390a1005b60069283928254865560018301546001870155600283015460028701556003830154600387015561031d6004840160048801611840565b90546005860180549092166001600160a01b03919091161790550154910155388080806102b7565b905083015138610248565b6004820160005260206000209060005b601f19861681106103c65750936001917fd144ad124f19f42d8e72c22759ffa0941569c00e89e82a60e302397e7f2c44b49582601f198116106103ad575b5050811b01600482015561025f565b85015160001960f88460031b161c19169055388061039e565b90916020600181928588015181550193019101610360565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b815260206004820152601360248201527221b0b63632b91034b9903737ba1037bbb732b960691b6044820152606490fd5b506004356000908152600080516020611aa483398151915260205260409020600501546001600160a01b03163314610149565b50600080516020611ac483398151915254600435111561010e565b600080fd5b34610493576104a6366114b5565b6104b26100fb3361160b565b8115158061081f575b6104c4906117f4565b600080516020611ac483398151915254906000805b8381106107c6575b506104ee919250156119ce565b81600052600080516020611aa48339815191529160209183835260018060a01b0380600560406000200154166107815760001983018381116103f4578161053482611644565b919054339260031b1c161461072457836000528585526040600020916002830191848354036106d157604051428882019081523360601b6bffffffffffffffffffffffff191660208201526034810188905261012d9161059781605484016101a7565b519020069061012c9182018092116103f4577f5a050f3c76b2e5b15146cf18e5d9e162fb4e6c51d6d56165c477dcfc8e2c62d49861066d9461062e9360068801908155600588016001600160601b0360a01b9333858354161782558b600052600080516020611ae48339815191528d52604060002033868254161790558c52604060002093898503610683575b5050505050611644565b90549060031b1c1692610650600460ff610647876115d2565b54169401611919565b90604051968796875286015260c0604086015260c085019061155d565b91336060850152608084015260a08301520390a1005b6006938a54865560018b0154600187015554600286015560038a015460038601556106b460048b0160048701611840565b876005860192541690825416179055549101558980808080610624565b60405162461bcd60e51b815260048101889052602560248201527f43616c6c6572206973206e6f7420696e2074686520636f7272656374206c6f6360448201526430ba34b7b760d91b6064820152608490fd5b60405162461bcd60e51b815260048101869052602f60248201527f546865206f776e65722063616e6e6f74206d6f766520686973206f776e20616960448201526e6d656420537573757761746172692160881b6064820152608490fd5b60405162461bcd60e51b815260048101859052601e60248201527f5375737520697320616c7265616479206265696e6720636172726965642100006044820152606490fd5b60018082018083116103f4576000908152600080516020611aa483398151915260205260409020600501546001600160a01b0316331461080f575061080a906119bf565b6104d9565b9150506104ee91925082916104e1565b50600080516020611ac4833981519152548211156104bb565b3461049357600036600319011261049357600080516020611ac48339815191525460009060005b8181106109a9575061087082611a77565b9161087e604051938461153b565b80835261088d601f1991611a77565b0160005b8181106109845750506000805b8281106108f85760408051602080825286518183018190528188019383019160005b8281106108cd5784840385f35b8551805185526020908101516001600160a01b031690850152948101946040909301926001016108c0565b600181018082116103f4576000818152600080516020611ae483398151915260209081526040909120546001600160a01b03169081610943575b50505061093e906119bf565b61089e565b9161093e93949161097b936040519261095b846114cb565b835282015261096a8288611a8f565b526109758187611a8f565b506119bf565b91908580610932565b602090604051610993816114cb565b6000815282600081830152828701015201610891565b600181018082116103f4576000908152600080516020611ae483398151915260205260409020546001600160a01b03166109ec575b6109e7906119bf565b61085f565b916109f96109e7916119bf565b9290506109de565b34610493576020806003193601126104935760043560ff811680820361049357610a2a3361160b565b54610c6157600080516020611ac48339815191525491600183018093116103f45760405192610a5884611503565b8352838301916000835260408401936000855260608101936000855260405194610a818661151f565b600086526080830195865260a083019633885260c0840194600086526001610aa83361160b565b55610ab2336115d2565b9060ff19825416179055610ac53361169d565b8351600052600080516020611aa483398151915289526040600020928451845551600184015551600283015551600382015560048101855180519067ffffffffffffffff82116103de57610b2382610b1d85546116ec565b85611726565b8990601f8311600114610bd4579282600080516020611ae483398151915293600080516020611b048339815191529c936102e19a99989796600092610bc9575b50508160011b916000199060031b1c19161790555b6005830192600660018060a01b0396878c5116956001600160601b0360a01b96878254161790555191015583516000525260406000209033908254161790555193519451166040519485948561159d565b015190508d80610b63565b90601f19831691846000528b6000209260005b818110610c4a575093600080516020611b048339815191529c936102e19a999897969360019383600080516020611ae48339815191529810610c31575b505050811b019055610b78565b015160001960f88460031b161c191690558d8080610c24565b92938d600181928786015181550195019301610be7565b60405162461bcd60e51b815260048101849052601760248201527f5573657220616c726561647920726567697374657265640000000000000000006044820152606490fd5b3461049357610cb4366114b5565b610cc06100fb3361160b565b81151580610e67575b610cd2906117f4565b81600052600080516020611aa4833981519152908160205260018060a01b039133836005604060002001541603610e1157836102e1917fd144ad124f19f42d8e72c22759ffa0941569c00e89e82a60e302397e7f2c44b49560005280602052604060002094600686016000815560028701958655600587016001600160601b0360a01b93848254168255600080516020611ae48339815191526020526040600020858154169055602052604060002093888503610dc3575b50505050506001840154925493600381015491610db6600460ff610dad336115d2565b54169301611919565b926040519687968761177a565b6006938954865560018a015460018701558854600287015560038a01546003870155610df560048b0160048801611840565b6005860192541690825416179055549101558580808080610d8a565b60405162461bcd60e51b815260206004820152602860248201527f43616c6c657220646f65736e27742063617272792061205375737577617461726044820152676920546f6b656e2160c01b6064820152608490fd5b50600080516020611ac483398151915254821115610cc9565b3461049357600036600319011261049357610e9d6100fb3361160b565b600080516020611ac4833981519152546000805b8281106110d0575b50610ec490156119ce565b60018082018092116103f45760405191610edd83611503565b82526020918281016000815260408201906000825260608301916000835260405194610f088661151f565b600086526080850195865260a085019333855260c086019260008452610f2d3361169d565b8651600052600080516020611aa48339815191528952604060002094875186555183860155516002850155516003840155600483019086519081519167ffffffffffffffff83116103de57610f8c83610f8686546116ec565b86611726565b8990601f841160011461104657928080600080516020611b048339815191529c9794600080516020611ae483398151915299979460069760009461103b575b50501b916000199060031b1c19161790555b600583019560018060a01b03905116956001600160601b0360a01b96878254161790555191015583516000525260406000209033908254161790556102e160ff611026336115d2565b5416915192519160405193849333918561159d565b015192508e80610fcb565b90601f93929319831691856000528b6000209260005b8181106110bb575092600695928592600080516020611b048339815191529e9996600080516020611ae48339815191529b9996106110a2575b505050811b019055610fdd565b015160001960f88460031b161c191690558c8080611095565b82840151855593860193928d01928d0161105c565b60018082018083116103f4576000908152600080516020611aa483398151915260205260409020600501546001600160a01b031633146111195750611114906119bf565b610eb1565b9150610ec49050610eb9565b346104935760003660031901126104935761113e611a50565b50611147611a50565b50600080600080516020611ac483398151915254905b818110611341575061116e82611a77565b9161117c604051938461153b565b80835261118b601f1991611a77565b019160209236848301376000805b8381106112e55750506111aa611a31565b916000905b808210611258575b505060ff6111c4336115d2565b5416604051916111d3836114e7565b8252838201928352604082019081526040519284845260c0840192519260a08686015283518091528560e0860194019060005b8181106112445750505090839460ff925190815160408701528101516060860152604060018060a01b03910151166080850152511660a08301520390f35b825186529487019491870191600101611206565b60018201918281116103f4576000838152600080516020611ae4833981519152875260409020546001600160a01b039390841633146112a3575061129d9192506119bf565b906111af565b6112d19250808652600052600080516020611aa4833981519152865260066040600020015486860152611644565b90549060031b1c16604083015283806111b7565b6112ee81611644565b90543360039290921b1c6001600160a01b031614611315575b611310906119bf565b611199565b90600182018083116103f45781611339916113336113109487611a8f565b526119bf565b919050611307565b61134a81611644565b90543360039290921b1c6001600160a01b031614611371575b61136c906119bf565b61115d565b9161137e61136c916119bf565b929050611363565b3461049357600036600319011261049357600080516020611ac4833981519152546113b081611a77565b906113be604051928361153b565b808252601f196113cd82611a77565b0160005b81811061149057505060005b8181106114375760408051602080825285518183018190528187019383019160005b82811061140c5784840385f35b8551805185526020908101516001600160a01b031690850152948101946040909301926001016113ff565b60018101908181116103f45761148b9161145082611644565b90546040519261145f846114cb565b835260039190911b1c6001600160a01b031660208201526114808286611a8f565b526109758185611a8f565b6113dd565b60209060405161149f816114cb565b60008152826000818301528287010152016113d1565b6040906003190112610493576004359060243590565b6040810190811067ffffffffffffffff8211176103de57604052565b6060810190811067ffffffffffffffff8211176103de57604052565b60e0810190811067ffffffffffffffff8211176103de57604052565b6020810190811067ffffffffffffffff8211176103de57604052565b90601f8019910116810190811067ffffffffffffffff8211176103de57604052565b919082519283825260005b848110611589575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611568565b9294936115bc60609360ff93865260806020870152608086019061155d565b6001600160a01b03909616604085015216910152565b6001600160a01b031660009081527f202e1867cade063e32a2eb339a246f853a1a233314949ba8d9e2ac766f6ed8496020526040902090565b6001600160a01b031660009081527f202e1867cade063e32a2eb339a246f853a1a233314949ba8d9e2ac766f6ed8466020526040902090565b600080516020611ac48339815191528054821015611687576000527f5b627e705e277f4cd69351cfcf0179f3685951408382038c266c60748db0394a0190600090565b634e487b7160e01b600052603260045260246000fd5b600080516020611ac48339815191528054680100000000000000008110156103de576116ce91600182019055611644565b819291549060031b9160018060a01b03809116831b921b1916179055565b90600182811c9216801561171c575b602083101461170657565b634e487b7160e01b600052602260045260246000fd5b91607f16916116fb565b90601f811161173457505050565b600091825260208220906020601f850160051c83019410611770575b601f0160051c01915b82811061176557505050565b818155600101611759565b9092508290611750565b929360c09460ff936117ac98979386526020860152604085015260608401521660808201528160a0820152019061155d565b90565b156117b657565b60405162461bcd60e51b8152602060048201526016602482015275155cd95c881a5cc81b9bdd081c9959da5cdd195c995960521b6044820152606490fd5b156117fb57565b60405162461bcd60e51b815260206004820152601d60248201527f546865205375737577617461726920646f6573206e6f742065786973740000006044820152606490fd5b908082146119155761185281546116ec565b9067ffffffffffffffff82116103de57819061187282610f8686546116ec565b600090601f83116001146118a95760009261189e575b50508160011b916000199060031b1c1916179055565b015490503880611888565b81526020808220858352818320935090601f1985169083905b8282106118fc5750509084600195949392106118e3575b505050811b019055565b015460001960f88460031b161c191690553880806118d9565b84958192958501548155600180910196019401906118c2565b5050565b906040519182600082549261192d846116ec565b90818452600194858116908160001461199c5750600114611959575b50506119579250038361153b565b565b9093915060005260209081600020936000915b81831061198457505061195793508201013880611949565b8554888401850152948501948794509183019161196c565b91505061195794506020925060ff191682840152151560051b8201013880611949565b60001981146103f45760010190565b156119d557565b60405162461bcd60e51b815260206004820152602e60248201527f43616c6c657220697320616c7265616479206361727279696e6720612053757360448201526d7577617461726920546f6b656e2160901b6064820152608490fd5b60405190611a3e826114e7565b60006040838281528260208201520152565b60405190611a5d826114e7565b600060408360608152611a6e611a31565b60208201520152565b67ffffffffffffffff81116103de5760051b60200190565b80518210156116875760209160051b01019056fe202e1867cade063e32a2eb339a246f853a1a233314949ba8d9e2ac766f6ed848202e1867cade063e32a2eb339a246f853a1a233314949ba8d9e2ac766f6ed847202e1867cade063e32a2eb339a246f853a1a233314949ba8d9e2ac766f6ed84b2ca41edd488e9162ca27cfff639cbe72d7b237e97090033ebb9212a7ec2de82da26469706673582212200378b3d46aa4d019242b40fb9946ee9daad661e210ae4060624d4af62dbf1dc464736f6c63430008120033";

type SusuwatariFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SusuwatariFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SusuwatariFacet__factory extends ContractFactory {
  constructor(...args: SusuwatariFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SusuwatariFacet> {
    return super.deploy(overrides || {}) as Promise<SusuwatariFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SusuwatariFacet {
    return super.attach(address) as SusuwatariFacet;
  }
  override connect(signer: Signer): SusuwatariFacet__factory {
    return super.connect(signer) as SusuwatariFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SusuwatariFacetInterface {
    return new utils.Interface(_abi) as SusuwatariFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SusuwatariFacet {
    return new Contract(address, _abi, signerOrProvider) as SusuwatariFacet;
  }
}
