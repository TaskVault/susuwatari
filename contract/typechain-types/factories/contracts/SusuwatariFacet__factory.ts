/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SusuwatariFacet,
  SusuwatariFacetInterface,
} from "../../contracts/SusuwatariFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "location",
        type: "string",
      },
      {
        internalType: "string",
        name: "destination",
        type: "string",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "aimInitialSusu",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "location",
        type: "string",
      },
    ],
    name: "dropSusu",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentState",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "ownedTokens",
            type: "uint256[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "susuTokenId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "dropCooldownTime",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "ownerAddress",
                type: "address",
              },
            ],
            internalType: "struct BaggageSlot",
            name: "slot",
            type: "tuple",
          },
        ],
        internalType: "struct UserState",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "giveSusuwatari",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registerMe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "location",
        type: "string",
      },
    ],
    name: "tryPickupSusu",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657611e72908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8063378aa7011461169b5780633e14c7da146114535780637298c3c314610f93578063786307481461096c5780639a198d611461049c5763b95d0b041461005e57600080fd5b346104975761006c366119c7565b9061008161007933611a41565b541515611b9a565b8015158061047e575b61009390611bdf565b600080516020611e1d83398151915254906000805b838110610425575b506100bd91925015611d12565b80600052600080516020611ddd83398151915260209281845260018060a01b039182600560406000200154166103e05760001984018481116102c8576101038491611a7a565b919054339260031b1c161461038357836000528085526040600020600281019160405187810190600091818654938b61013b86611b0c565b60019680881690811561036c5750600114610331575b50500391610167601f1993848101835282611950565b5190206040518a8101906101948c82816101878d878151938492016119f9565b8101038084520182611950565b519020036102de57604051428a82019081523360601b6bffffffffffffffffffffffff19166020820152603481018a905261012d929091906101e190826054850103908101835282611950565b519020069161012c9283018093116102c857610263966006850193845560058501926001600160601b0360a01b9233848654161785558a600052600080516020611dfd8339815191528c52604060002033858254161790558b52604060002096868803610267575b8b8b8b8b6040805194859485528401526040830190611a1c565b0390f35b8661028f6004926102866102a99560069b548d55808501908d01611c2b565b60028b01611c2b565b61029f6003820160038b01611c2b565b0160048801611c2b565b6005860192541690825416179055549101553880808080808080610249565b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b8152600481018a9052602560248201527f43616c6c6572206973206e6f7420696e2074686520636f7272656374206c6f6360448201526430ba34b7b760d91b6064820152608490fd5b9091508860005281600020866000915b838310610355575050508201018b38610151565b805488840186015287955091840191889101610341565b60ff19168652508015150283010190508b38610151565b60405162461bcd60e51b815260048101869052602f60248201527f546865206f776e65722063616e6e6f74206d6f766520686973206f776e20616960448201526e6d656420537573757761746172692160881b6064820152608490fd5b60405162461bcd60e51b815260048101869052601e60248201527f5375737520697320616c7265616479206265696e6720636172726965642100006044820152606490fd5b60018082018083116102c8576000908152600080516020611ddd83398151915260205260409020600501546001600160a01b0316331461046e575061046990611d03565b6100a8565b9150506100bd91925082916100b0565b50600080516020611e1d8339815191525481111561008a565b600080fd5b34610497576000366003190112610497576104b633611a41565b5461092757600080516020611e1d83398151915254600181018091116102c857604051906104e38261191a565b8152604051906104f282611935565b60008252602081019182526040519161050a83611935565b60008352604082019283526040519261052284611935565b600084526060830193845260405161053981611935565b600081526080840190815260a084019433865260c085019260008452600161056033611a41565b5561056a33611abd565b8551600052600080516020611ddd83398151915260205260406000209486518655518051906001600160401b0382116107b25781906105b9826105b060018b0154611b0c565b60018b01611b46565b602090601f83116001146108b5576000926108aa575b50508160011b916000199060031b1c19161760018601555b51805160028601916001600160401b0382116107b25781906106138261060d8654611b0c565b86611b46565b602090601f831160011461084457600092610839575b50508160011b916000199060031b1c19161790555b51805160038501916001600160401b0382116107b25781906106648261060d8654611b0c565b602090601f83116001146107d3576000926107c8575b50508160011b916000199060031b1c19161790555b51805160048401916001600160401b0382116107b2576106b9826106b38554611b0c565b85611b46565b602090601f8311600114610746576006949392916000918361073b575b50508160011b916000199060031b1c19161790555b93516005830180546001600160a01b039092166001600160a01b03199283161790559351910155516000908152600080516020611dfd833981519152602052604090208054339216919091179055005b0151905088806106d6565b90601f198316918460005260206000209260005b81811061079a575091600193918560069897969410610781575b505050811b0190556106eb565b015160001960f88460031b161c19169055888080610774565b9293602060018192878601518155019501930161075a565b634e487b7160e01b600052604160045260246000fd5b01519050888061067a565b6000858152602081209350601f198516905b8181106108215750908460019594939210610808575b505050811b01905561068f565b015160001960f88460031b161c191690558880806107fb565b929360206001819287860151815501950193016107e5565b015190508980610629565b6000858152602081209350601f198516905b8181106108925750908460019594939210610879575b505050811b01905561063e565b015160001960f88460031b161c1916905589808061086c565b92936020600181928786015181550195019301610856565b0151905089806105cf565b9250600188016000526020600020906000935b601f198416851061090c576001945083601f198116106108f3575b505050811b0160018601556105e7565b015160001960f88460031b161c191690558980806108e3565b818101518355602094850194600190930192909101906108c8565b60405162461bcd60e51b815260206004820152601760248201527f5573657220616c726561647920726567697374657265640000000000000000006044820152606490fd5b34610497576080366003190112610497576024356001600160401b0381116104975761099c903690600401611971565b6044356001600160401b038111610497576109bb903690600401611971565b906064356001600160401b038111610497576109db903690600401611971565b916109e861007933611a41565b600435151580610f78575b6109fc90611bdf565b60043560001981019081116102c857610a1490611a7a565b905460039190911b1c6001600160a01b0316331480610f45575b15610f0a57600435600052600080516020611ddd833981519152602052604060002061012d6040516020810190610a9981610a8b600435334287916054939183526001600160601b03199060601b16602083015260348201520190565b03601f198101835282611950565b5190200661012c9081018091116102c857600682015582516001600160401b0381116107b257610ad981610ad06001850154611b0c565b60018501611b46565b806020601f8211600114610e9d57600091610e92575b508160011b916000199060031b1c19161760018201555b82516001600160401b0381116107b257610b3081610b276002850154611b0c565b60028501611b46565b806020601f8211600114610e2557600091610e1a575b508160011b916000199060031b1c19161760028201555b81516001600160401b0381116107b257610b8781610b7e6003850154611b0c565b60038501611b46565b806020601f8211600114610dad57600091610da2575b508160011b916000199060031b1c19161760038201555b83516001600160401b0381116107b257610bde81610bd56004850154611b0c565b60048501611b46565b6020601f8211600114610d295792610c91959282610c9f9361026396600091610d1e575b508160011b916000199060031b1c19161760048201555b600581016001600160601b0360a01b808254168255600435600052600080516020611dfd8339815191526020526040600020818154169055600080516020611ddd833981519152602052604060002092808403610cad575b505050506040519586956004358752608060208801526080870190611a1c565b908582036040870152611a1c565b908382036060850152611a1c565b600692839282548655610cc66001840160018801611c2b565b610cd66002840160028801611c2b565b610ce66003840160038801611c2b565b610cf66004840160048801611c2b565b90546005860180549092166001600160a01b0391909116179055015491015586808080610c71565b905085015189610c02565b6004830160005260206000209060005b601f1984168110610d8a5750926001836102639693610c919996610c9f96601f19811610610d71575b5050811b016004820155610c19565b87015160001960f88460031b161c191690558980610d62565b9091602060018192858b015181550193019101610d39565b905083015186610b9d565b91506003830160005260206000206000925b601f1983168410610e02576001935082601f19811610610de9575b5050811b016003820155610bb4565b85015160001960f88460031b161c191690558680610dda565b85810151825560209384019360019092019101610dbf565b905084015186610b46565b91506002830160005260206000206000925b601f1983168410610e7a576001935082601f19811610610e61575b5050811b016002820155610b5d565b86015160001960f88460031b161c191690558680610e52565b86810151825560209384019360019092019101610e37565b905084015186610aef565b91506001830160005260206000206000925b601f1983168410610ef2576001935082601f19811610610ed9575b5050811b016001820155610b06565b86015160001960f88460031b161c191690558680610eca565b86810151825560209384019360019092019101610eaf565b60405162461bcd60e51b815260206004820152601360248201527221b0b63632b91034b9903737ba1037bbb732b960691b6044820152606490fd5b506004356000908152600080516020611ddd83398151915260205260409020600501546001600160a01b03163314610a2e565b50600080516020611e1d8339815191525460043511156109f3565b3461049757600036600319011261049757610fb061007933611a41565b600080516020611e1d833981519152546000805b8281106113fe575b50610fd79015611d12565b600181018091116102c85760405190610fef8261191a565b815260405190610ffe82611935565b60008252602081019182526040519161101683611935565b600083526040820192835260405161102d81611935565b60008152606083019081526040519061104582611935565b600082526080840191825260a0840194338652600060c086015261106833611abd565b8451600052600080516020611ddd83398151915260205260406000209385518555518051906001600160401b0382116107b25781906110b7826110ae60018a0154611b0c565b60018a01611b46565b602090601f831160011461138c57600092611381575b50508160011b916000199060031b1c19161760018501555b51805160028501916001600160401b0382116107b257819061110b8261060d8654611b0c565b602090601f831160011461131b57600092611310575b50508160011b916000199060031b1c19161790555b51805160038401916001600160401b0382116107b257819061115c8261060d8654611b0c565b602090601f83116001146112aa5760009261129f575b50508160011b916000199060031b1c19161790555b51805160048301916001600160401b0382116107b25781906111ad8261060d8654611b0c565b602090601f83116001146112395760009261122e575b50508160011b916000199060031b1c19161790555b600581019260018060a01b03905116926001600160601b0360a01b9384825416179055600660c083015191015551600052600080516020611dfd8339815191526020526040600020903390825416179055600080f35b0151905086806111c3565b6000858152602081209350601f198516905b818110611287575090846001959493921061126e575b505050811b0190556111d8565b015160001960f88460031b161c19169055868080611261565b9293602060018192878601518155019501930161124b565b015190508780611172565b6000858152602081209350601f198516905b8181106112f857509084600195949392106112df575b505050811b019055611187565b015160001960f88460031b161c191690558780806112d2565b929360206001819287860151815501950193016112bc565b015190508880611121565b6000858152602081209350601f198516905b8181106113695750908460019594939210611350575b505050811b019055611136565b015160001960f88460031b161c19169055888080611343565b9293602060018192878601518155019501930161132d565b0151905088806110cd565b9250600187016000526020600020906000935b601f19841685106113e3576001945083601f198116106113ca575b505050811b0160018501556110e5565b015160001960f88460031b161c191690558880806113ba565b8181015183556020948501946001909301929091019061139f565b60018082018083116102c8576000908152600080516020611ddd83398151915260205260409020600501546001600160a01b03163314611447575061144290611d03565b610fc4565b9150610fd79050610fcc565b3461049757611461366119c7565b9061146e61007933611a41565b80151580611682575b61148090611bdf565b80600052600080516020611ddd8339815191529060209282845260018060a01b033381600560406000200154160361162c5782600052838552604060002090600682016000815560028301918451966001600160401b0388116107b2576114eb8861060d8654611b0c565b88601f89116001146115c457978061026398996000916115b9575b508160011b916000199060031b1c19161784555b60058501916001600160601b0360a01b9182845416845589600052600080516020611dfd8339815191528b5260406000208381541690558a5260406000209580870361157b575b8a8a8a8a6040805194859485528401526040830190611a1c565b60048161028f60069861159b94548b556102866001840160018d01611c2b565b60058601925416908254161790555491015584808080808080611561565b90508701518b611506565b601f19891690856000528a6000209160005b8c828210611616575050918a916102639a9b600194106115fd575b5050811b01845561151a565b89015160001960f88460031b161c191690558b806115f1565b600184958293958d0151815501940192016115d6565b60405162461bcd60e51b815260048101869052602860248201527f43616c6c657220646f65736e27742063617272792061205375737577617461726044820152676920546f6b656e2160c01b6064820152608490fd5b50600080516020611e1d83398151915254811115611477565b34610497576000366003190112610497576116b4611da4565b506116bd611da4565b50600080600080516020611e1d83398151915254905b8181106118ba57506116e482611dc5565b916116f26040519384611950565b808352611701601f1991611dc5565b019060209136838501376000805b828110611841575050611720611d75565b906000905b8082106117b4575b50506040519261173c846118ff565b83528183019081526040519180835260a0830193519160808285015282518095528160c0850193016000955b80871061179d57505051805160408086019190915291810151606085015201516001600160a01b031660808301528190039150f35b909383806001928751815201950196019590611768565b60018201918281116102c8576000838152600080516020611dfd833981519152865260409020546001600160a01b039390841633146117ff57506117f9919250611d03565b90611725565b61182d9250808552600052600080516020611ddd833981519152855260066040600020015485850152611a7a565b90549060031b1c166040820152838061172d565b61184a81611a7a565b90543360039290921b1c6001600160a01b031614611871575b61186c90611d03565b61170f565b90600182018083116102c85785518210156118a4578161189c918661186c9460051b89010152611d03565b919050611863565b634e487b7160e01b600052603260045260246000fd5b6118c381611a7a565b90543360039290921b1c6001600160a01b0316146118ea575b6118e590611d03565b6116d3565b916118f76118e591611d03565b9290506118dc565b604081019081106001600160401b038211176107b257604052565b60e081019081106001600160401b038211176107b257604052565b602081019081106001600160401b038211176107b257604052565b90601f801991011681019081106001600160401b038211176107b257604052565b81601f82011215610497578035906001600160401b0382116107b257604051926119a5601f8401601f191660200185611950565b8284526020838301011161049757816000926020809301838601378301015290565b9060406003198301126104975760043591602435906001600160401b038211610497576119f691600401611971565b90565b60005b838110611a0c5750506000910152565b81810151838201526020016119fc565b90602091611a35815180928185528580860191016119f9565b601f01601f1916010190565b6001600160a01b031660009081527f202e1867cade063e32a2eb339a246f853a1a233314949ba8d9e2ac766f6ed8466020526040902090565b600080516020611e1d83398151915280548210156118a4576000527f5b627e705e277f4cd69351cfcf0179f3685951408382038c266c60748db0394a0190600090565b600080516020611e1d8339815191528054680100000000000000008110156107b257611aee91600182019055611a7a565b819291549060031b9160018060a01b03809116831b921b1916179055565b90600182811c92168015611b3c575b6020831014611b2657565b634e487b7160e01b600052602260045260246000fd5b91607f1691611b1b565b90601f8111611b5457505050565b600091825260208220906020601f850160051c83019410611b90575b601f0160051c01915b828110611b8557505050565b818155600101611b79565b9092508290611b70565b15611ba157565b60405162461bcd60e51b8152602060048201526016602482015275155cd95c881a5cc81b9bdd081c9959da5cdd195c995960521b6044820152606490fd5b15611be657565b60405162461bcd60e51b815260206004820152601d60248201527f546865205375737577617461726920646f6573206e6f742065786973740000006044820152606490fd5b90808214611cff57611c3d8154611b0c565b906001600160401b0382116107b2578190611c5c8261060d8654611b0c565b600090601f8311600114611c9357600092611c88575b50508160011b916000199060031b1c1916179055565b015490503880611c72565b81526020808220858352818320935090601f1985169083905b828210611ce6575050908460019594939210611ccd575b505050811b019055565b015460001960f88460031b161c19169055388080611cc3565b8495819295850154815560018091019601940190611cac565b5050565b60001981146102c85760010190565b15611d1957565b60405162461bcd60e51b815260206004820152602e60248201527f43616c6c657220697320616c7265616479206361727279696e6720612053757360448201526d7577617461726920546f6b656e2160901b6064820152608490fd5b60405190606082018281106001600160401b038211176107b25760405260006040838281528260208201520152565b60405190611db1826118ff565b81606081526020611dc0611d75565b910152565b6001600160401b0381116107b25760051b6020019056fe202e1867cade063e32a2eb339a246f853a1a233314949ba8d9e2ac766f6ed848202e1867cade063e32a2eb339a246f853a1a233314949ba8d9e2ac766f6ed84a202e1867cade063e32a2eb339a246f853a1a233314949ba8d9e2ac766f6ed847a2646970667358221220f5f2ad0af7981e26a48e9dd367c0911b9ff5e9a0bec166a8fba80d173b05d01364736f6c63430008120033";

type SusuwatariFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SusuwatariFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SusuwatariFacet__factory extends ContractFactory {
  constructor(...args: SusuwatariFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SusuwatariFacet> {
    return super.deploy(overrides || {}) as Promise<SusuwatariFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SusuwatariFacet {
    return super.attach(address) as SusuwatariFacet;
  }
  override connect(signer: Signer): SusuwatariFacet__factory {
    return super.connect(signer) as SusuwatariFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SusuwatariFacetInterface {
    return new utils.Interface(_abi) as SusuwatariFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SusuwatariFacet {
    return new Contract(address, _abi, signerOrProvider) as SusuwatariFacet;
  }
}
