/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SusuwatariFacet,
  SusuwatariFacetInterface,
} from "../../contracts/SusuwatariFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "originLocation",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "currentLocation",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "destination",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "team",
        type: "uint256",
      },
    ],
    name: "DroppedSusu",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "team",
        type: "uint8",
      },
    ],
    name: "MintedSusu",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "location",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "team",
        type: "uint8",
      },
    ],
    name: "PickedUpSusu",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "location",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "destination",
        type: "uint64",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "aimInitialSusu",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "location",
        type: "uint64",
      },
    ],
    name: "dropSusu",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllSusuwataris",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct LibSusuwatari.SusuwatariInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaggedSusus",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "carrier",
            type: "address",
          },
        ],
        internalType: "struct LibSusuwatari.BaggedSusuInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentState",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "ownedTokens",
            type: "uint256[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "susuTokenId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "dropCooldownTime",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "ownerAddress",
                type: "address",
              },
            ],
            internalType: "struct BaggageSlot",
            name: "slot",
            type: "tuple",
          },
          {
            internalType: "uint8",
            name: "team",
            type: "uint8",
          },
        ],
        internalType: "struct UserState",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "giveSusuwatari",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "team",
        type: "uint8",
      },
    ],
    name: "registerMe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "location",
        type: "uint64",
      },
    ],
    name: "tryPickupSusu",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657611c9f908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80632a9664c71461155b578063378aa701146112fa5780637298c3c31461103f57806374015e5114610bc5578063adc65c38146108fc578063c5b9c1411461071d578063ce603f23146104f95763e803b6f21461007457600080fd5b346104de5760803660031901126104de5761008d61168a565b6001600160401b0360443516604435036104de57606435906001600160401b0382116104de57366023830112156104de5781600401356001600160401b0381116104e357604051906100e9601f8201601f19166020018361170c565b808252602493368583830101116104de57816000928660209301838601378301015261011f610117336117db565b54151561199d565b6004351515806104c3575b610133906119e2565b60043560001981019081116104ae5761014b90611814565b905460039190911b1c6001600160a01b031633148061047b575b1561044157600435600052600080516020611bea833981519152602052604060002061012d60405160208101906101d0816101c2600435334287916054939183526001600160601b03199060601b16602083015260348201520190565b03601f19810183528261170c565b5190200661012c818101811161042c5701600482015560018101805467ffffffffffffffff19166001600160401b03851617815561020f9084906118bc565b61021e604435600183016118e4565b8151936001600160401b038511610418575061024a84610241600284015461190f565b60028401611949565b602093601f811160011461039f57908161031693926001600160401b0396600091610394575b508160011b916000199060031b1c19161760028201555b600381016001600160601b0360a01b808254168255600435600052600080516020611c2a8339815191526020526040600020818154169055600080516020611bea83398151915260205260406000209280840361031a575b5050505060405193849360043585521660208401526001600160401b0360443516604084015260806060840152608083019061172d565b0390f35b60049283928254865561035c600187018b6001860154168c1982541617815561034c8c600187015460401c16826118bc565b8b600186015460801c16906118e4565b61036c6002840160028801611a2e565b90546003860180549092166001600160a01b03919091161790550154910155388080806102df565b905083015138610270565b60028201600052602060002060005b601f19831681106104005750816001916001600160401b0397610316969594601f198116106103e7575b5050811b016002820155610287565b85015160001960f88460031b161c1916905538806103d8565b848701518255602096870196600190920191016103ae565b634e487b7160e01b60009081526041600452fd5b85634e487b7160e01b60005260116004526000fd5b60405162461bcd60e51b8152602060048201526013818501527221b0b63632b91034b9903737ba1037bbb732b960691b6044820152606490fd5b506004356000908152600080516020611bea83398151915260205260409020600301546001600160a01b03163314610165565b83634e487b7160e01b60005260116004526000fd5b50600080516020611c0a83398151915254600435111561012a565b600080fd5b634e487b7160e01b600052604160045260246000fd5b346104de5760403660031901126104de5760043561051561168a565b610521610117336117db565b81151580610704575b610533906119e2565b81600052600080516020611bea8339815191529060209180835260018060a01b0390338260036040600020015416036106ae579160a0939185937f6c8ef33398e406b6af68274e264c0895c5c01a99c0826f9852b15e9da7a8e92d966000528084526040600020906004820190600082556105b26001840195866118bc565b60038301906001600160601b03891b90818354168355600080516020611c2a83398151915288526040600020828154169055875260406000209484860361063c575b505050505050549160ff610607336117a2565b541691604051936001600160401b03918282168652828260401c169086015260801c16604084015260608301526080820152a1005b61069160028660049754895561068760018a018b61067b6001600160401b038281809454166001600160401b03198654161785555460401c16836118bc565b8c5460801c16906118e4565b0160028801611a2e565b6003860192541690825416179055549101558580808080806105f4565b60405162461bcd60e51b815260048101859052602860248201527f43616c6c657220646f65736e27742063617272792061205375737577617461726044820152676920546f6b656e2160c01b6064820152608490fd5b50600080516020611c0a8339815191525482111561052a565b346104de5760003660031901126104de57600080516020611c0a8339815191525460009060005b8181106108a4575061075582611bbe565b91610763604051938461170c565b808352610772601f1991611bbe565b0160005b81811061087f5750506000805b8281106107dd5760408051602080825286518183018190528188019383019160005b8281106107b25784840385f35b8551805185526020908101516001600160a01b031690850152948101946040909301926001016107a5565b60018101808211610869576000818152600080516020611c2a83398151915260209081526040909120546001600160a01b03169081610828575b50505061082390611b06565b610783565b916108239394916108609360405192610840846116a0565b835282015261084f8288611bd5565b5261085a8187611bd5565b50611b06565b91908580610817565b634e487b7160e01b600052601160045260246000fd5b60209060405161088e816116a0565b6000815282600081830152828701015201610776565b60018101808211610869576000908152600080516020611c2a83398151915260205260409020546001600160a01b03166108e7575b6108e290611b06565b610744565b916108f46108e291611b06565b9290506108d9565b346104de576020806003193601126104de5760043560ff8116908181036104de57610926336117db565b54610b8057600080516020611c0a83398151915254906001928383018093116108695760405192610956846116d6565b835284830192600084526040810193600085526060820195600087526040519561097f876116f1565b6000875260808401968752610a1a60a0850198338a5260c086019660008852846109a8336117db565b556109b2336117a2565b9060ff198254161790556109c53361186d565b8551600052600080516020611bea8339815191528b526040600020948651865584860191610a126001600160401b03809681809551166001600160401b03198754161786555116846118bc565b5116906118e4565b6002830191875180519283116104e357610a3e83610a38865461190f565b86611949565b8a90601f8411600114610af357928080600080516020611c4a8339815191529d94610ae39b9a99989794600080516020611c2a83398151915297600094610ae8575b50501b916000199060031b1c19161790555b6003830192600460018060a01b0396878c5116956001600160601b0360a01b96878254161790555191015583516000525260406000209033908254161790555193519451166040519485948561176d565b0390a1005b015192508f80610a80565b90601f93929319831691856000528c6000209260005b818110610b6b575092600080516020611c2a83398151915295928592600080516020611c4a8339815191529f96610ae39d9c9b9a999610610b52575b505050811b019055610a92565b015160001960f88460031b161c191690558d8080610b45565b82840151855593860193928e01928e01610b09565b60405162461bcd60e51b815260048101849052601760248201527f5573657220616c726561647920726567697374657265640000000000000000006044820152606490fd5b346104de5760403660031901126104de57600435610be161168a565b90610bee610117336117db565b80151580611026575b610c00906119e2565b600080516020611c0a83398151915254906000805b838110610fcd575b50610c2a91925015611b15565b80600052600080516020611bea8339815191529060209180835260018060a01b039360039085826040600020015416610f8857600019840184811161086957610c738791611814565b905490841b1c163314610f2b5783600052828552604060002095600193848801906001600160401b03908180845460401c169516809503610ed857604051428a82019081523360601b6bffffffffffffffffffffffff19166020820152603481018a905261012d91610ce881605484016101c2565b519020069061012c9182018092116108695760048b01918255868b01906001600160601b0360a01b9033828454161783558a600052600080516020611c2a8339815191528c52604060002033838254161790558b528b604060002095818703610e6e575b50505050505050600260ff610d7083610d6489611814565b905490881b1c166117a2565b5416970192610d7e86611814565b9054911b1c169260405192600091815491610d988361190f565b80875292828116908115610e4e5750600114610e17575b50505091610e0191610de5827f8b2bdc417511e0553507390ac2d6358cbb109f65f41ee5a9511390aba8957c809995038361170c565b604051968796875286015260c0604086015260c085019061172d565b91336060850152608084015260a08301520390a1005b60009081528881209093505b828410610e3b575050508201850181610de584610daf565b80548685018a0152928801928101610e23565b60ff19168a880152505050151560051b83018601905081610de584610daf565b600495610eaa925488558b880191818154166001600160401b0319845416178355610e9f82825460401c16846118bc565b5460801c16906118e4565b610eba60028d0160028701611a2e565b85888601925416908254161790555491015587808080808b81610d4c565b60405162461bcd60e51b8152600481018a9052602560248201527f43616c6c6572206973206e6f7420696e2074686520636f7272656374206c6f6360448201526430ba34b7b760d91b6064820152608490fd5b60405162461bcd60e51b815260048101869052602f60248201527f546865206f776e65722063616e6e6f74206d6f766520686973206f776e20616960448201526e6d656420537573757761746172692160881b6064820152608490fd5b60405162461bcd60e51b815260048101869052601e60248201527f5375737520697320616c7265616479206265696e6720636172726965642100006044820152606490fd5b6001808201808311610869576000908152600080516020611bea83398151915260205260409020600301546001600160a01b03163314611016575061101190611b06565b610c15565b915050610c2a9192508291610c1d565b50600080516020611c0a83398151915254811115610bf7565b346104de5760003660031901126104de5761105c610117336117db565b600080516020611c0a833981519152546000805b8281106112a5575b506110839015611b15565b60018101809111610869576040519061109b826116d6565b815260209081810190600082526040810160008152606082019260008452604051936110c6856116f1565b600085526080840194855260a084019233845261113c60c0860192600084526110ee3361186d565b8651600052600080516020611bea8339815191528952604060002094875186556001860191610a126001600160401b03809681809551166001600160401b03198754161786555116846118bc565b6002830190865180519182116104e3576111608261115a855461190f565b85611949565b8890601f831160011461121b579282600493600080516020611c4a8339815191529b9693600080516020611c2a8339815191529896600092611210575b50508160011b916000199060031b1c19161790555b600383019560018060a01b03905116956001600160601b0360a01b9687825416179055519101558351600052526040600020903390825416179055610ae360ff6111fb336117a2565b5416915192519160405193849333918561176d565b015190508c8061119d565b90601f19831691846000528a6000209260005b81811061128e575093600080516020611c4a8339815191529b9693600080516020611c2a8339815191529896936001938360049810611275575b505050811b0190556111b2565b015160001960f88460031b161c191690558c8080611268565b92938c60018192878601518155019501930161122e565b6001808201808311610869576000908152600080516020611bea83398151915260205260409020600301546001600160a01b031633146112ee57506112e990611b06565b611070565b91506110839050611078565b346104de5760003660031901126104de57611313611b97565b5061131c611b97565b50600080600080516020611c0a83398151915254905b818110611516575061134382611bbe565b91611351604051938461170c565b808352611360601f1991611bbe565b019160209236848301376000805b8381106114ba57505061137f611b78565b916000905b80821061142d575b505060ff611399336117a2565b5416604051916113a8836116bb565b8252838201928352604082019081526040519284845260c0840192519260a08686015283518091528560e0860194019060005b8181106114195750505090839460ff925190815160408701528101516060860152604060018060a01b03910151166080850152511660a08301520390f35b8251865294870194918701916001016113db565b6001820191828111610869576000838152600080516020611c2a833981519152875260409020546001600160a01b039390841633146114785750611472919250611b06565b90611384565b6114a69250808652600052600080516020611bea833981519152865260046040600020015486860152611814565b90549060031b1c166040830152838061138c565b6114c381611814565b90543360039290921b1c6001600160a01b0316146114ea575b6114e590611b06565b61136e565b9060018201808311610869578161150e916115086114e59487611bd5565b52611b06565b9190506114dc565b61151f81611814565b90543360039290921b1c6001600160a01b031614611546575b61154190611b06565b611332565b9161155361154191611b06565b929050611538565b346104de5760003660031901126104de57600080516020611c0a8339815191525461158581611bbe565b90611593604051928361170c565b808252601f196115a282611bbe565b0160005b81811061166557505060005b81811061160c5760408051602080825285518183018190528187019383019160005b8281106115e15784840385f35b8551805185526020908101516001600160a01b031690850152948101946040909301926001016115d4565b6001810190818111610869576116609161162582611814565b905460405192611634846116a0565b835260039190911b1c6001600160a01b031660208201526116558286611bd5565b5261085a8185611bd5565b6115b2565b602090604051611674816116a0565b60008152826000818301528287010152016115a6565b602435906001600160401b03821682036104de57565b604081019081106001600160401b038211176104e357604052565b606081019081106001600160401b038211176104e357604052565b60e081019081106001600160401b038211176104e357604052565b602081019081106001600160401b038211176104e357604052565b90601f801991011681019081106001600160401b038211176104e357604052565b919082519283825260005b848110611759575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611738565b92949361178c60609360ff93865260806020870152608086019061172d565b6001600160a01b03909616604085015216910152565b6001600160a01b031660009081527f202e1867cade063e32a2eb339a246f853a1a233314949ba8d9e2ac766f6ed8496020526040902090565b6001600160a01b031660009081527f202e1867cade063e32a2eb339a246f853a1a233314949ba8d9e2ac766f6ed8466020526040902090565b600080516020611c0a8339815191528054821015611857576000527f5b627e705e277f4cd69351cfcf0179f3685951408382038c266c60748db0394a0190600090565b634e487b7160e01b600052603260045260246000fd5b600080516020611c0a8339815191528054680100000000000000008110156104e35761189e91600182019055611814565b819291549060031b9160018060a01b03809116831b921b1916179055565b9067ffffffffffffffff60401b82549160401b169067ffffffffffffffff60401b1916179055565b805467ffffffffffffffff60801b191660809290921b67ffffffffffffffff60801b16919091179055565b90600182811c9216801561193f575b602083101461192957565b634e487b7160e01b600052602260045260246000fd5b91607f169161191e565b90601f811161195757505050565b600091825260208220906020601f850160051c83019410611993575b601f0160051c01915b82811061198857505050565b81815560010161197c565b9092508290611973565b156119a457565b60405162461bcd60e51b8152602060048201526016602482015275155cd95c881a5cc81b9bdd081c9959da5cdd195c995960521b6044820152606490fd5b156119e957565b60405162461bcd60e51b815260206004820152601d60248201527f546865205375737577617461726920646f6573206e6f742065786973740000006044820152606490fd5b90808214611b0257611a40815461190f565b906001600160401b0382116104e3578190611a5f82610a38865461190f565b600090601f8311600114611a9657600092611a8b575b50508160011b916000199060031b1c1916179055565b015490503880611a75565b81526020808220858352818320935090601f1985169083905b828210611ae9575050908460019594939210611ad0575b505050811b019055565b015460001960f88460031b161c19169055388080611ac6565b8495819295850154815560018091019601940190611aaf565b5050565b60001981146108695760010190565b15611b1c57565b60405162461bcd60e51b815260206004820152602e60248201527f43616c6c657220697320616c7265616479206361727279696e6720612053757360448201526d7577617461726920546f6b656e2160901b6064820152608490fd5b60405190611b85826116bb565b60006040838281528260208201520152565b60405190611ba4826116bb565b600060408360608152611bb5611b78565b60208201520152565b6001600160401b0381116104e35760051b60200190565b80518210156118575760209160051b01019056fe202e1867cade063e32a2eb339a246f853a1a233314949ba8d9e2ac766f6ed848202e1867cade063e32a2eb339a246f853a1a233314949ba8d9e2ac766f6ed847202e1867cade063e32a2eb339a246f853a1a233314949ba8d9e2ac766f6ed84b2ca41edd488e9162ca27cfff639cbe72d7b237e97090033ebb9212a7ec2de82da264697066735822122034188000e92d026a2b945ef629fbbf292097699f90216d82c4779ca0ddeacd7964736f6c63430008120033";

type SusuwatariFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SusuwatariFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SusuwatariFacet__factory extends ContractFactory {
  constructor(...args: SusuwatariFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SusuwatariFacet> {
    return super.deploy(overrides || {}) as Promise<SusuwatariFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SusuwatariFacet {
    return super.attach(address) as SusuwatariFacet;
  }
  override connect(signer: Signer): SusuwatariFacet__factory {
    return super.connect(signer) as SusuwatariFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SusuwatariFacetInterface {
    return new utils.Interface(_abi) as SusuwatariFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SusuwatariFacet {
    return new Contract(address, _abi, signerOrProvider) as SusuwatariFacet;
  }
}
