/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SusuwatariFacet,
  SusuwatariFacetInterface,
} from "../../contracts/SusuwatariFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "donatedFinney",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "months",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "currentMonth",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "currentYear",
        type: "uint16",
      },
    ],
    name: "Donated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "shareFinney",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "transferDateId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "transferFromDonationBucketPos",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "month",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
    ],
    name: "RemovedFromDonationBucket",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "month",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
    ],
    name: "TransferedFairShare",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "up",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
    ],
    name: "Voted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "months",
        type: "uint16",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "donate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "donationBuckets",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "startMonth",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "startYear",
            type: "uint16",
          },
          {
            internalType: "uint32[48]",
            name: "donationBuckets",
            type: "uint32[48]",
          },
        ],
        internalType: "struct SusuwatariFacet.DonationBuckets",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "myFame",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "setDonatingActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setDonatingInactive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalFame",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "month",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "bool",
        name: "up",
        type: "bool",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657611db2908161001d8239f35b50600080fdfe6040608081526004361015610015575b50600080fd5b600090813560e01c806327e665f71461015e5780634f9b09af1461014b5780635f592bb514610134578063672296dc1461011c5780636e283c3814610101578063bc956abb146100c2578063c3269df9146100a85763db75953b1461007a575061000f565b346100a4576100a0915061008d3661018f565b610095611c72565b905191829182610390565b0390f35b5080fd5b50346100a4576100b73661018f565b6100bf610497565b51f35b50346100a4576100a091506100d63661018f565b6001600160401b036100e733610845565b54915191166001600160401b031681529081906020820190565b50346100a4576100bf6101133661031d565b92919091611206565b50346100a4576100bf61012e366102e2565b91611754565b50346100a4576101433661018f565b6100bf610445565b506100bf6101583661028b565b90610968565b50503461018c575061016f3661018f565b600080516020611d4f83398151915254608052607f1960a0016080f35b80fd5b600090600319011261000f57565b50634e487b7160e01b600052604160045260246000fd5b61060081019081106001600160401b038211176101d057604052565b6101d861019d565b604052565b60405190606082018281106001600160401b038211176101d057604052565b81601f82011215610283578035906001600160401b0392838311610276575b60405193601f8401601f19908116603f0116850190811185821017610269575b6040528284526020838301011161026057816000926020809301838601378301015290565b50505050600080fd5b61027161019d565b61023b565b61027e61019d565b61021b565b505050600080fd5b9060406003198301126102c95760043561ffff81168114156102835791602435906001600160401b038211610260576102c6916004016101fc565b90565b5050600080fd5b6001600160a01b038116141561000f57565b606090600319011261000f576004356102fa816102d0565b9061ffff9060243582811681141561026057916044359081168114156102605790565b60806003198201126102c9576001600160401b03906004358281116102605781610349916004016101fc565b926024358015158114156103865792604435610364816102d0565b9260643591821161037b576102c6916004016101fc565b505050505050600080fd5b5050505050600080fd5b91909161064081019260408061ffff92838151168552602093848201511684860152015192016000905b603082106103c85750505050565b828060019263ffffffff8751168152019401910190926103ba565b156103ea57565b5060405162461bcd60e51b815260206004820152602c60248201527f4f6e6c79206f776e657220697320616c6c6f77656420746f20706572666f726d60448201526b103a3434b99030b1ba34b7b760a11b6064820152608490fd5b61047960018060a01b037fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320541633146103e3565b600080516020611d2f833981519152805461ff001916610100179055565b6104cb60018060a01b037fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320541633146103e3565b600080516020611d2f833981519152805461ff0019169055565b50634e487b7160e01b600052601160045260246000fd5b60ff166001811061050f575b6000190190565b6105176104e5565b610508565b1561052357565b50606460405162461bcd60e51b815260206004820152602060248201527f4f6e6c79207570746f203234206d6f6e74687320697320737570706f727465646044820152fd5b50634e487b7160e01b600052601260045260246000fd5b8115610589570690565b610591610568565b0690565b1561059c57565b5060405162461bcd60e51b815260206004820152603860248201527f506179656420616d6f756e74206d75737420626520646576696461626c65206260448201527f7920746865206469737472696275746564206d6f6e74687300000000000000006064820152608490fd5b1561060f57565b5060405162461bcd60e51b815260206004820152603a60248201527f4c657373207468616e20312066696e6e657928312f313030302045544829206660448201527f72616374696f6e7320617265206e6f7420737570706f727465640000000000006064820152608490fd5b8115610685570490565b61068d610568565b0490565b1561069857565b5060405162461bcd60e51b815260206004820152603c60248201527f446f6e6174696f6e73206c6172676572207468616e20315f3030305f3030305f60448201527f3030302066696e6e657920617265206e6f7420737570706f72746564000000006064820152608490fd5b600c9061ffff80911680910482118115151661071e570290565b6107266104e5565b0290565b9061ffff8080931691168092038111610741570190565b6107496104e5565b0190565b61ffff166107b28110610763575b6107b1190190565b61076b6104e5565b61075b565b61ffff166001811061050f576000190190565b61ffff9182169116818110610796570390565b61079e6104e5565b0390565b63ffffffff9182169116818110610796570390565b60019063ffffffff809116908114610741570190565b9063ffffffff8080931691168092038111610741570190565b50634e487b7160e01b600052603260045260246000fd5b906030821015610838575b601c8260031c7f033cb808a453240b3c9916e6d1ccc504e492e2b2453192ff241c73847a521d07019260021b1690565b6108406107e6565b610808565b6001600160a01b031660009081527f033cb808a453240b3c9916e6d1ccc504e492e2b2453192ff241c73847a521d126020526040902090565b6001600160401b036001911667fffffffffffffffe8111610741570190565b906001600160401b038080931691168092038111610741570190565b6001906001198111610741570190565b81198111610741570190565b91908251928382526000905b84821061090e575092806020939411610901575b601f01601f1916010190565b60008382840101526108f5565b906020908180828501015190828601015201906108e1565b93959490610950608094936001600160401b0360ff9316875260a0602088015260a08701906108d5565b9661ffff809416604087015216606085015216910152565b91909161097442610d53565b91602083019161099661099061098b855160ff1690565b6104fc565b60ff1690565b9461ffff8216946109a96019871061051c565b6109bc6109b6873461057f565b15610595565b66038d7ea4c680006109d081340615610608565b3404926109e3633b9aca00851115610691565b610aaa6109f9610a9a610a026109f98b8961067b565b63ffffffff1690565b9a610a2e7f033cb808a453240b3c9916e6d1ccc504e492e2b2453192ff241c73847a521d115460ff1690565b60009015610bfd5750610a95610a8e60ff610a6760059650919390929496505b610a62610a5d8a5161ffff1690565b610704565b61072a565b931692610a88600080516020611d2f8339815191525461ffff9060101c1690565b90610783565b61ffff1690565b6107a2565b96875b610aaa6109f9838b6107cd565b63ffffffff821690811015610b2a5791610b216109f992610b1c8d610afa610af46030610aaa990692610aef610adf856107fd565b905463ffffffff9160031b1c1690565b6107cd565b916107fd565b90919082549060031b9163ffffffff9283811b93849216901b16911916179055565b6107b7565b91509150610a9d565b505050610bf8939497507f6a7f8439932380592f144688013b66f9f08c6c8571bc599d1b18ceae2cf67ed39650610bea610be1610b9997610bda610bc8600a8a04610bb3610b7733610845565b6001600160401b039d8e8416610b9483546001600160401b031690565b61089d565b6001600160401b03166001600160401b0319825416179055565b600080516020611d4f833981519152546108c9565b600080516020611d4f83398151915255565b5160ff1690565b925161ffff1690565b926040519687961686610926565b0390a1565b610a8e60ff610a67610a9593965091939092949650610a4e565b6301e133808110610c2d575b6301e1337f190190565b610c356104e5565b610c23565b6301e285008110610c50575b6301e284ff190190565b610c586104e5565b610c46565b6101dd8110610c6f575b6101dc190190565b610c776104e5565b610c67565b818110610796570390565b7c87d206500cf71c7a443cd6c7ebe38ec0b59488f085555dd275ba5624c78111600116610cb8575b6301e285000290565b610cc06104e5565b610caf565b7c883148f5cb1270b85273b667ae1cfdf5d70ac5a1ecccd54fe15c297df38111600116610cf6575b6301e133800290565b610cfe6104e5565b610ced565b7dc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab8111600116610d34575b620151800290565b610d3c6104e5565b610d2c565b60ff6001911660ff8114610741570190565b9060405191604083018381106001600160401b03821117610e6c575b604052600083526020830192600084528093610d95610d8d84610ec1565b61ffff168352565b610dee610db7610db2610dad610a8e865161ffff1690565b610e79565b610c5d565b610de8610de3610dc683610c87565b92610dde610a8e610dd9895161ffff1690565b61074d565b610c7c565b610cc5565b906108c9565b906001915b600c60ff84161115610e07575b5050505050565b610e27610e22610990610e1c875161ffff1690565b86610fca565b610d03565b9085610e3382846108c9565b11610e5157610e4b91610e45916108c9565b92610d41565b91610df3565b505060ff909116905250610e629050565b3880808080610e00565b610e7461019d565b610d6f565b6102c69060018110610eb4575b600019018060021c906101906064820491828410610ea7575b0491036108c9565b610eaf6104e5565b610e9f565b610ebc6104e5565b610e86565b6301e13380810490610f256107b283198111610f84575b61ffff938491011692610de8610eed85610e79565b6101dd90818110610f77575b6101dc198101610f0881610c87565b94610f128961074d565b16908110610f6a575b9695960301610cc5565b828111610f325750905090565b610f5b90610f47610f4284610770565b610f91565b15610f6157610f5590610c3a565b91610770565b90610f25565b610f5590610c17565b610f726104e5565b610f1b565b610f7f6104e5565b610ef9565b610f8c6104e5565b610ed8565b60038116610fc45761ffff809116816064820616610fbd57610190900616610fb857600190565b600090565b5050600190565b50600090565b60ff16600181148015611098575b801561108e575b8015611084575b801561107a575b8015611070575b8015611066575b15611007575050601f90565b6004811490811561105b575b8115611050575b8115611045575b501561102d5750601e90565b61103690610f91565b1561104057601d90565b601c90565b600b91501438611021565b60098114915061101a565b600681149150611013565b50600c8114610ffb565b50600a8114610ff4565b5060088114610fed565b5060078114610fe6565b5060058114610fdf565b5060038114610fd8565b6000527f033cb808a453240b3c9916e6d1ccc504e492e2b2453192ff241c73847a521d0e602052604060002090565b63ffffffff166000527f033cb808a453240b3c9916e6d1ccc504e492e2b2453192ff241c73847a521d0d602052604060002090565b805482101561111f575b60005260206000200190600090565b6111276107e6565b611110565b805461114f9168010000000000000000821015611172575b600182018155611106565b819291549060031b9160018060a01b039283811b93849216901b16911916179055565b61117a61019d565b611144565b60030b637fffffff19811461050f576000190190565b60019060030b637fffffff8114610741570190565b9590936111e360ff9360c0979a99956111ce61ffff9860e08c5260e08c01906108d5565b91151560208b015289820360408b01526108d5565b6001600160a01b039182166060890152981660808701521660a085015216910152565b7fd88c393c3c90d3e614d54b41cd8bf24bc2cd20390af15081efe05c39aa4a155b9392610bf89161123642610d53565b906112a3610be16020840161125261099061098b835160ff1690565b61111160901b87811614156112b2575b5061128861126f33610845565b610b9961128382546001600160401b031690565b61087e565b610bda610bc8600080516020611d4f833981519152546108b9565b926040519687963393886111aa565b611306906112e17f033cb808a453240b3c9916e6d1ccc504e492e2b2453192ff241c73847a521d115460ff1690565b6000901561144a5750610a95610a8e60ff60055b1692610a62610a5d8b5161ffff1690565b61132563ffffffff8216601489901b62100000600160b41b03166108c9565b908761136b611367611360856000527f033cb808a453240b3c9916e6d1ccc504e492e2b2453192ff241c73847a521d0f602052604060002090565b5460ff1690565b1590565b6113d6575b505088156113b2576113846113ac916110a2565b611397611392825460030b90565b611195565b63ffffffff198254169063ffffffff16179055565b38611262565b6113be6113d1916110a2565b6113976113cc825460030b90565b61117f565b6113ac565b61143e61144392611420611413866000527f033cb808a453240b3c9916e6d1ccc504e492e2b2453192ff241c73847a521d0f602052604060002090565b805460ff19166001179055565b61143961142c866110a2565b805463ffffffff19169055565b6110d1565b61112c565b3887611370565b610a8e60ff610a95926112f5565b1561145f57565b5060405162461bcd60e51b815260206004820152604260248201527f596f75722063616e206f6e6c79207472616e7366657220796f7572207368617260448201527f6520666f72206d6f6e7468206265666f7265207468652063757272656e74206f6064820152616e6560f01b608482015260a490fd5b156114dd57565b5060405162461bcd60e51b815260206004820152604360248201527f596f75722063616e206f6e6c79207472616e7366657220796f7572207368617260448201527f6520666f72206d6f6e74687320616674657220646f6e6174696f6e20737461726064820152621d195960ea1b608482015260a490fd5b1561155c57565b5060405162461bcd60e51b815260206004820152603360248201527f596f75722063616e2774207472616e7366657220736861726573206d6f7265206044820152723a3430b710191a1036b7b73a34399030b3b79760691b6064820152608490fd5b156115c557565b5060405162461bcd60e51b815260206004820152601860248201527f536861726520616c7265616479207472616e73666572656400000000000000006044820152606490fd5b1561161257565b5060405162461bcd60e51b815260206004820152602a60248201527f596f752068617665206e6f7420656e6f756768207570766f74657320746f20626044820152696520656c696769626c6560b01b6064820152608490fd5b6001906000198114610741570190565b63ffffffff918280921691829116920482118115151661071e570290565b906001600160401b038091169182156116b157160490565b6116b9610568565b160490565b156116c557565b5060405162461bcd60e51b815260206004820152602f60248201527f4e6f7420656e6f75676820646f6e6174696f6e7320666f722074686174206d6f60448201526e373a34399030bb30b4b630b136329760891b6064820152608490fd5b66ffffffffffffff8091168066038d7ea4c68000920482118115151661071e570290565b506040513d6000823e3d90fd5b909161177f610a8e61176542610d53565b610a62610a5d610be161099061098b602086015160ff1690565b92611798610a8e61179383610a6286610704565b610770565b94859163ffffffff936117f16018866117ea8188169b8b6117bd8e85819f1611611458565b610a956117e1610a8e600080516020611d2f8339815191525461ffff9060101c1690565b809e10156114d6565b1610611555565b6117fe883360141b6108c9565b9161183e611838611360856000527f033cb808a453240b3c9916e6d1ccc504e492e2b2453192ff241c73847a521d10602052604060002090565b156115be565b60009661186188611858611851876110a2565b5460030b90565b60030b1361160b565b8796885b61186e886110d1565b54811015611917576118c58c6118c06118ba6118ae6118ae611899878f611894906110d1565b611106565b905460039190911b1c6001600160a01b031690565b6001600160a01b031690565b60141b90565b6108c9565b8a6118db6118d5611851846110a2565b60030b90565b136118f0575b506118eb9061166b565b611865565b6118eb919961190a6109f96109f9611851611910956110a2565b9061089d565b98906118e1565b50889989979993959894969b50908061193185938c6107a2565b603061ffff919091160695611945876107fd565b905460039190911b1c63ffffffff1661195d8c6110a2565b5460030b63ffffffff166119709161167b565b63ffffffff169061198091611699565b63ffffffff1699611990876107fd565b905460039190911b1c63ffffffff16828c169384911610156119b1906116be565b6119ba876107fd565b81548d90600383901b1c63ffffffff16906119d4916107a2565b825463ffffffff60039390931b83811b80199092169390921690911b16179055611a27906000527f033cb808a453240b3c9916e6d1ccc504e492e2b2453192ff241c73847a521d10602052604060002090565b805460ff19166001179055611a3b82611723565b839066ffffffffffffff169182159d610bf89b7fd60ef7047ec8bfc45d19c2ec01830d929258bf2a7ae675fde3dab44fa17f2f769f98611ae197611adc96610bc8967feb338d42e19428a462947fce4ff0c28c2ccae6f7ecdb16beb0dc981f98ae967c9c611b68575b6001600160a01b038c1690f115611b5b575b600a840416610bb3611ac733610845565b610b9983610b9483546001600160401b031690565b611723565b6040805166ffffffffffffff9290921682526001600160a01b0392909216602082015261ffff858116928201929092529085166060820152608090a16040519586958693919594909260809360a086019763ffffffff809216875216602086015261ffff9283809216604087015216606085015216910152565b611b63611747565b611ab6565b506108fc611aa4565b60408051919060007f033cb808a453240b3c9916e6d1ccc504e492e2b2453192ff241c73847a521d07845b60306007840110611bb65750505050611bb4826101b4565b565b6001610100600892611c668554611c5b63ffffffff611bdc8582851663ffffffff169052565b611bf360208285828901921c1663ffffffff169052565b63ffffffff838c1c821616858c0152611c1960608285828901921c1663ffffffff169052565b611c3060808285828901921c1663ffffffff169052565b611c4760a08285828901921c1663ffffffff169052565b60c09083828701921c1663ffffffff169052565b60e090811c90830152565b01920192019190611b9c565b604051606081018181106001600160401b03821117611d21575b60405260008152600060208201526040805191611ca8836101b4565b610600368437015261ffff611d04600c82600080516020611d2f8339815191525460101c1692818406169261fffe8411611d14575b611cf66001611cea6101dd565b9501859061ffff169052565b04602083019061ffff169052565b611d0c611b71565b604082015290565b611d1c6104e5565b611cdd565b611d2961019d565b611c8c56fe033cb808a453240b3c9916e6d1ccc504e492e2b2453192ff241c73847a521d06033cb808a453240b3c9916e6d1ccc504e492e2b2453192ff241c73847a521d14a3646970667358221220256698cabf0f4e0df521a2a56cb0f4f7b2317f83a7a4d60d6901dcae71db636e6c6578706572696d656e74616cf564736f6c634300080a0041";

type SusuwatariFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SusuwatariFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SusuwatariFacet__factory extends ContractFactory {
  constructor(...args: SusuwatariFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SusuwatariFacet> {
    return super.deploy(overrides || {}) as Promise<SusuwatariFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SusuwatariFacet {
    return super.attach(address) as SusuwatariFacet;
  }
  override connect(signer: Signer): SusuwatariFacet__factory {
    return super.connect(signer) as SusuwatariFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SusuwatariFacetInterface {
    return new utils.Interface(_abi) as SusuwatariFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SusuwatariFacet {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SusuwatariFacet;
  }
}
