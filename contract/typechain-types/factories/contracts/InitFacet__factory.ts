/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { InitFacet, InitFacetInterface } from "../../contracts/InitFacet";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523461007a577fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13208054336001600160a01b0319821681179092556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060006080a36101ce806100806080396080f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c63e1c7392a146100295750600080fd5b346100ca57806003193601126100ca577fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320546001600160a01b0316331415610078576100736100cd565b604051f35b5062461bcd60e51b6080526020608452602c60a4527f4f6e6c79206f776e657220697320616c6c6f77656420746f20706572666f726d60c4526b103a3434b99030b1ba34b7b760a11b60e45260846080fd5b80fd5b7f202e1867cade063e32a2eb339a246f853a1a233314949ba8d9e2ac766f6ed84660ff815416610187577fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131f6020527ff97e938d8af42f52387bb74b8b526fda8f184cc2aa534340a8d75a88fbecc7758054600160ff1991821681179092556348e2b09360e01b6000527f65d510a5d8f7ef134ec444f7f34ee808c8eeb5177cdfd16be0c40fe1ab4336958054821683179055825416179055565b5056fea3646970667358221220a4bd25f35411ed9da847e158368530e4e69971d9664a4c4e2a1ee675cf574b046c6578706572696d656e74616cf564736f6c634300080a0041";

type InitFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InitFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InitFacet__factory extends ContractFactory {
  constructor(...args: InitFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<InitFacet> {
    return super.deploy(overrides || {}) as Promise<InitFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): InitFacet {
    return super.attach(address) as InitFacet;
  }
  override connect(signer: Signer): InitFacet__factory {
    return super.connect(signer) as InitFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InitFacetInterface {
    return new utils.Interface(_abi) as InitFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InitFacet {
    return new Contract(address, _abi, signerOrProvider) as InitFacet;
  }
}
